"use strict";var THREE={REVISION:"68"};"object"==typeof module&&(module.exports=THREE),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(t){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(t)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(t){return t instanceof THREE.Color?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,r){return this.r=t,this.g=e,this.b=r,this},setHSL:function(t,e,r){if(0===e)this.r=this.g=this.b=r;else{var i=function(t,e,r){return 0>r&&(r+=1),1<r&&(r-=1),r<1/6?t+6*(e-t)*r:.5>r?e:r<2/3?t+6*(e-t)*(2/3-r):t};e=.5>=r?r*(1+e):r+e-r*e,r=2*r-e,this.r=i(r,e,t+1/3),this.g=i(r,e,t),this.b=i(r,e,t-1/3)}return this},setStyle:function(t){return/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(t)?(t=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(t),this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,this):/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(t)?(t=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(t),this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,this):/^\#([0-9a-f]{6})$/i.test(t)?(t=/^\#([0-9a-f]{6})$/i.exec(t),this.setHex(parseInt(t[1],16)),this):/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(t)?(t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(t),this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16)),this):/^(\w+)$/i.test(t)?(this.setHex(THREE.ColorKeywords[t]),this):void 0},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t){return this.r=t.r*t.r,this.g=t.g*t.g,this.b=t.b*t.b,this},copyLinearToGamma:function(t){return this.r=Math.sqrt(t.r),this.g=Math.sqrt(t.g),this.b=Math.sqrt(t.b),this},convertGammaToLinear:function(){var t=this.r,e=this.g,r=this.b;return this.r=t*t,this.g=e*e,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){t=t||{h:0,s:0,l:0};var e,r=this.r,i=this.g,n=this.b,o=Math.max(r,i,n),a=Math.min(r,i,n),s=(a+o)/2;if(a===o)a=e=0;else{var h=o-a,a=.5>=s?h/(o+a):h/(2-o-a);switch(o){case r:e=(i-n)/h+(i<n?6:0);break;case i:e=(n-r)/h+2;break;case n:e=(r-i)/h+4}e/=6}return t.h=e,t.s=a,t.l=s,t},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,r){var i=this.getHSL();return i.h+=t,i.s+=e,i.l+=r,this.setHSL(i.h,i.s,i.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t){return this.r=t[0],this.g=t[1],this.b=t[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get w(){return this._w},set w(t){this._w=t,this.onChangeCallback()},set:function(t,e,r,i){return this._x=t,this._y=e,this._z=r,this._w=i,this.onChangeCallback(),this},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(!1==t instanceof THREE.Euler)throw Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var r=Math.cos(t._x/2),i=Math.cos(t._y/2),n=Math.cos(t._z/2),o=Math.sin(t._x/2),a=Math.sin(t._y/2),s=Math.sin(t._z/2);return"XYZ"===t.order?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"YXZ"===t.order?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"ZXY"===t.order?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"ZYX"===t.order?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"YZX"===t.order?(this._x=o*i*n+r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n-o*a*s):"XZY"===t.order&&(this._x=o*i*n-r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n+o*a*s),!1!==e&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var r=e/2,i=Math.sin(r);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e=t.elements,r=e[0];t=e[4];var i=e[8],n=e[1],o=e[5],a=e[9],s=e[2],h=e[6],e=e[10],l=r+o+e;return 0<l?(r=.5/Math.sqrt(l+1),this._w=.25/r,this._x=(h-a)*r,this._y=(i-s)*r,this._z=(n-t)*r):r>o&&r>e?(r=2*Math.sqrt(1+r-o-e),this._w=(h-a)/r,this._x=.25*r,this._y=(t+n)/r,this._z=(i+s)/r):o>e?(r=2*Math.sqrt(1+o-r-e),this._w=(i-s)/r,this._x=(t+n)/r,this._y=.25*r,this._z=(a+h)/r):(r=2*Math.sqrt(1+e-r-o),this._w=(n-t)/r,this._x=(i+s)/r,this._y=(a+h)/r,this._z=.25*r),this.onChangeCallback(),this},setFromUnitVectors:function(){var t,e;return function(r,i){return void 0===t&&(t=new THREE.Vector3),e=r.dot(i)+1,1e-6>e?(e=0,Math.abs(r.x)>Math.abs(r.z)?t.set(-r.y,r.x,0):t.set(0,-r.z,r.y)):t.crossVectors(r,i),this._x=t.x,this._y=t.y,this._z=t.z,this._w=e,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._z=this._y=this._x=0,this._w=1):(t=1/t,this._x*=t,this._y*=t,this._z*=t,this._w*=t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},multiplyQuaternions:function(t,e){var r=t._x,i=t._y,n=t._z,o=t._w,a=e._x,s=e._y,h=e._z,l=e._w;return this._x=r*l+o*a+i*h-n*s,this._y=i*l+o*s+n*a-r*h,this._z=n*l+o*h+r*s-i*a,this._w=o*l-r*a-i*s-n*h,this.onChangeCallback(),this},multiplyVector3:function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},slerp:function(t,e){var r=this._x,i=this._y,n=this._z,o=this._w,a=o*t._w+r*t._x+i*t._y+n*t._z;if(0>a?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),1<=a)return this._w=o,this._x=r,this._y=i,this._z=n,this;var s=Math.acos(a),h=Math.sqrt(1-a*a);return.001>Math.abs(h)?(this._w=.5*(o+this._w),this._x=.5*(r+this._x),this._y=.5*(i+this._y),this._z=.5*(n+this._z),this):(a=Math.sin((1-e)*s)/h,s=Math.sin(e*s)/h,this._w=o*a+this._w*s,this._x=r*a+this._x*s,this._y=i*a+this._y*s,this._z=n*a+this._z*s,this.onChangeCallback(),this)},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],this._w=t[3],this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(t,e,r,i){return r.copy(t).slerp(e,i)},THREE.Vector2=function(t,e){this.x=t||0,this.y=e||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(t,e){return this.x=t,this.y=e,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScalar:function(t){return this.x+=t,this.y+=t,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return 0!==t?(t=1/t,this.x*=t,this.y*=t):this.y=this.x=0,this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this},clampScalar:function(){var t,e;return function(r,i){return void 0===t&&(t=new THREE.Vector2,e=new THREE.Vector2),t.set(r,r),e.set(i,i),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x;return t=this.y-t.y,e*e+t*t},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t){return this.x=t[0],this.y=t[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(t,e,r){this.x=t||0,this.y=e||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(t,e,r){return this.x=t,this.y=e,this.z=r,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var t;return function(e){return!1==e instanceof THREE.Euler&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),void 0===t&&(t=new THREE.Quaternion),this.applyQuaternion(t.setFromEuler(e)),this}}(),applyAxisAngle:function(){var t;return function(e,r){return void 0===t&&(t=new THREE.Quaternion),this.applyQuaternion(t.setFromAxisAngle(e,r)),this}}(),applyMatrix3:function(t){var e=this.x,r=this.y,i=this.z;return t=t.elements,this.x=t[0]*e+t[3]*r+t[6]*i,this.y=t[1]*e+t[4]*r+t[7]*i,this.z=t[2]*e+t[5]*r+t[8]*i,this},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z;return t=t.elements,this.x=t[0]*e+t[4]*r+t[8]*i+t[12],this.y=t[1]*e+t[5]*r+t[9]*i+t[13],this.z=t[2]*e+t[6]*r+t[10]*i+t[14],this},applyProjection:function(t){var e=this.x,r=this.y,i=this.z;t=t.elements;var n=1/(t[3]*e+t[7]*r+t[11]*i+t[15]);return this.x=(t[0]*e+t[4]*r+t[8]*i+t[12])*n,this.y=(t[1]*e+t[5]*r+t[9]*i+t[13])*n,this.z=(t[2]*e+t[6]*r+t[10]*i+t[14])*n,this},applyQuaternion:function(t){var e=this.x,r=this.y,i=this.z,n=t.x,o=t.y,a=t.z;t=t.w;var s=t*e+o*i-a*r,h=t*r+a*e-n*i,l=t*i+n*r-o*e,e=-n*e-o*r-a*i;return this.x=s*t+e*-n+h*-a-l*-o,this.y=h*t+e*-o+l*-n-s*-a,this.z=l*t+e*-a+s*-o-h*-n,this},transformDirection:function(t){var e=this.x,r=this.y,i=this.z;return t=t.elements,this.x=t[0]*e+t[4]*r+t[8]*i,this.y=t[1]*e+t[5]*r+t[9]*i,this.z=t[2]*e+t[6]*r+t[10]*i,this.normalize(),this},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return 0!==t?(t=1/t,this.x*=t,this.y*=t,this.z*=t):this.z=this.y=this.x=0,this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this.z>t.z&&(this.z=t.z),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this.z<t.z&&(this.z=t.z),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this.z<t.z?this.z=t.z:this.z>e.z&&(this.z=e.z),this},clampScalar:function(){var t,e;return function(r,i){return void 0===t&&(t=new THREE.Vector3,e=new THREE.Vector3),t.set(r,r,r),e.set(i,i,i),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},cross:function(t,e){if(void 0!==e)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e);var r=this.x,i=this.y,n=this.z;return this.x=i*t.z-n*t.y,this.y=n*t.x-r*t.z,this.z=r*t.y-i*t.x,this},crossVectors:function(t,e){var r=t.x,i=t.y,n=t.z,o=e.x,a=e.y,s=e.z;return this.x=i*s-n*a,this.y=n*o-r*s,this.z=r*a-i*o,this},projectOnVector:function(){var t,e;return function(r){return void 0===t&&(t=new THREE.Vector3),t.copy(r).normalize(),e=this.dot(t),this.copy(t).multiplyScalar(e)}}(),projectOnPlane:function(){var t;return function(e){return void 0===t&&(t=new THREE.Vector3),t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){var t;return function(e){return void 0===t&&(t=new THREE.Vector3),this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),angleTo:function(t){return t=this.dot(t)/(this.length()*t.length()),Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,r=this.y-t.y;return t=this.z-t.z,e*e+r*r+t*t},setEulerFromRotationMatrix:function(t,e){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(t,e){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},setFromMatrixPosition:function(t){return this.x=t.elements[12],this.y=t.elements[13],this.z=t.elements[14],this},setFromMatrixScale:function(t){var e=this.set(t.elements[0],t.elements[1],t.elements[2]).length(),r=this.set(t.elements[4],t.elements[5],t.elements[6]).length();return t=this.set(t.elements[8],t.elements[9],t.elements[10]).length(),this.x=e,this.y=r,this.z=t,this},setFromMatrixColumn:function(t,e){var r=4*t,i=e.elements;return this.x=i[r],this.y=i[r+1],this.z=i[r+2],this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t){return this.x=t[0],this.y=t[1],this.z=t[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(t,e,r,i){this.x=t||0,this.y=e||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(t,e,r,i){return this.x=t,this.y=e,this.z=r,this.w=i,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z,n=this.w;return t=t.elements,this.x=t[0]*e+t[4]*r+t[8]*i+t[12]*n,this.y=t[1]*e+t[5]*r+t[9]*i+t[13]*n,this.z=t[2]*e+t[6]*r+t[10]*i+t[14]*n,this.w=t[3]*e+t[7]*r+t[11]*i+t[15]*n,this},divideScalar:function(t){return 0!==t?(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t):(this.z=this.y=this.x=0,this.w=1),this},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return 1e-4>e?(this.x=1,this.z=this.y=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,r,i;t=t.elements;var n=t[0];i=t[4];var o=t[8],a=t[1],s=t[5],h=t[9];r=t[2],e=t[6];var l=t[10];return.01>Math.abs(i-a)&&.01>Math.abs(o-r)&&.01>Math.abs(h-e)?.1>Math.abs(i+a)&&.1>Math.abs(o+r)&&.1>Math.abs(h+e)&&.1>Math.abs(n+s+l-3)?(this.set(1,0,0,0),this):(t=Math.PI,n=(n+1)/2,s=(s+1)/2,l=(l+1)/2,i=(i+a)/4,o=(o+r)/4,h=(h+e)/4,n>s&&n>l?.01>n?(e=0,i=r=.707106781):(e=Math.sqrt(n),r=i/e,i=o/e):s>l?.01>s?(e=.707106781,r=0,i=.707106781):(r=Math.sqrt(s),e=i/r,i=h/r):.01>l?(r=e=.707106781,i=0):(i=Math.sqrt(l),e=o/i,r=h/i),this.set(e,r,i,t),this):(t=Math.sqrt((e-h)*(e-h)+(o-r)*(o-r)+(a-i)*(a-i)),.001>Math.abs(t)&&(t=1),this.x=(e-h)/t,this.y=(o-r)/t,this.z=(a-i)/t,this.w=Math.acos((n+s+l-1)/2),this)},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this.z>t.z&&(this.z=t.z),this.w>t.w&&(this.w=t.w),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this.z<t.z&&(this.z=t.z),this.w<t.w&&(this.w=t.w),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this.z<t.z?this.z=t.z:this.z>e.z&&(this.z=e.z),this.w<t.w?this.w=t.w:this.w>e.w&&(this.w=e.w),this},clampScalar:function(){var t,e;return function(r,i){return void 0===t&&(t=new THREE.Vector4,e=new THREE.Vector4),t.set(r,r,r,r),e.set(i,i,i,i),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t){return this.x=t[0],this.y=t[1],this.z=t[2],this.w=t[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._order=i||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" "),THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get order(){return this._order},set order(t){this._order=t,this.onChangeCallback()},set:function(t,e,r,i){return this._x=t,this._y=e,this._z=r,this._order=i||this._order,this.onChangeCallback(),this},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e){var r=THREE.Math.clamp,i=t.elements,n=i[0],o=i[4],a=i[8],s=i[1],h=i[5],l=i[9],c=i[2],u=i[6],i=i[10];return e=e||this._order,"XYZ"===e?(this._y=Math.asin(r(a,-1,1)),.99999>Math.abs(a)?(this._x=Math.atan2(-l,i),this._z=Math.atan2(-o,n)):(this._x=Math.atan2(u,h),this._z=0)):"YXZ"===e?(this._x=Math.asin(-r(l,-1,1)),.99999>Math.abs(l)?(this._y=Math.atan2(a,i),this._z=Math.atan2(s,h)):(this._y=Math.atan2(-c,n),this._z=0)):"ZXY"===e?(this._x=Math.asin(r(u,-1,1)),.99999>Math.abs(u)?(this._y=Math.atan2(-c,i),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(s,n))):"ZYX"===e?(this._y=Math.asin(-r(c,-1,1)),.99999>Math.abs(c)?(this._x=Math.atan2(u,i),this._z=Math.atan2(s,n)):(this._x=0,this._z=Math.atan2(-o,h))):"YZX"===e?(this._z=Math.asin(r(s,-1,1)),.99999>Math.abs(s)?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(a,i))):"XZY"===e?(this._z=Math.asin(-r(o,-1,1)),.99999>Math.abs(o)?(this._x=Math.atan2(u,h),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-l,i),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,this.onChangeCallback(),this},setFromQuaternion:function(t,e,r){var i=THREE.Math.clamp,n=t.x*t.x,o=t.y*t.y,a=t.z*t.z,s=t.w*t.w;return e=e||this._order,"XYZ"===e?(this._x=Math.atan2(2*(t.x*t.w-t.y*t.z),s-n-o+a),this._y=Math.asin(i(2*(t.x*t.z+t.y*t.w),-1,1)),this._z=Math.atan2(2*(t.z*t.w-t.x*t.y),s+n-o-a)):"YXZ"===e?(this._x=Math.asin(i(2*(t.x*t.w-t.y*t.z),-1,1)),this._y=Math.atan2(2*(t.x*t.z+t.y*t.w),s-n-o+a),this._z=Math.atan2(2*(t.x*t.y+t.z*t.w),s-n+o-a)):"ZXY"===e?(this._x=Math.asin(i(2*(t.x*t.w+t.y*t.z),-1,1)),this._y=Math.atan2(2*(t.y*t.w-t.z*t.x),s-n-o+a),this._z=Math.atan2(2*(t.z*t.w-t.x*t.y),s-n+o-a)):"ZYX"===e?(this._x=Math.atan2(2*(t.x*t.w+t.z*t.y),s-n-o+a),this._y=Math.asin(i(2*(t.y*t.w-t.x*t.z),-1,1)),this._z=Math.atan2(2*(t.x*t.y+t.z*t.w),s+n-o-a)):"YZX"===e?(this._x=Math.atan2(2*(t.x*t.w-t.z*t.y),s-n+o-a),this._y=Math.atan2(2*(t.y*t.w-t.x*t.z),s+n-o-a),this._z=Math.asin(i(2*(t.x*t.y+t.z*t.w),-1,1))):"XZY"===e?(this._x=Math.atan2(2*(t.x*t.w+t.y*t.z),s-n+o-a),this._y=Math.atan2(2*(t.x*t.z+t.y*t.w),s+n-o-a),this._z=Math.asin(i(2*(t.z*t.w-t.x*t.y),-1,1))):console.warn("THREE.Euler: .setFromQuaternion() given unsupported order: "+e),this._order=e,!1!==r&&this.onChangeCallback(),
this},reorder:function(){var t=new THREE.Quaternion;return function(e){t.setFromEuler(this),this.setFromQuaternion(t,e)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(t,e){this.start=void 0!==t?t:new THREE.Vector3,this.end=void 0!==e?e:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(t,e){return this.start.copy(t),this.end.copy(e),this},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},center:function(t){return(t||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return(t||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){var r=e||new THREE.Vector3;return this.delta(r).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(r,i){t.subVectors(r,this.start),e.subVectors(this.end,this.start);var n=e.dot(e),n=e.dot(t)/n;return i&&(n=THREE.Math.clamp(n,0,1)),n}}(),closestPointToPoint:function(t,e,r){return t=this.closestPointToPointParameter(t,e),r=r||new THREE.Vector3,this.delta(r).multiplyScalar(t).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(t,e){this.min=void 0!==t?t:new THREE.Vector2(1/0,1/0),this.max=void 0!==e?e:new THREE.Vector2((-(1/0)),(-(1/0)))},THREE.Box2.prototype={constructor:THREE.Box2,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new THREE.Vector2;return function(e,r){var i=t.copy(r).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}}(),copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(t){return(t||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){return(t||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return(e||new THREE.Vector2).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return(e||new THREE.Vector2).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new THREE.Vector2;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(t,e){this.min=void 0!==t?t:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==e?e:new THREE.Vector3((-(1/0)),(-(1/0)),(-(1/0)))},THREE.Box3.prototype={constructor:THREE.Box3,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new THREE.Vector3;return function(e,r){var i=t.copy(r).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}}(),setFromObject:function(){var t=new THREE.Vector3;return function(e){var r=this;return e.updateMatrixWorld(!0),this.makeEmpty(),e.traverse(function(e){if(void 0!==e.geometry&&void 0!==e.geometry.vertices)for(var i=e.geometry.vertices,n=0,o=i.length;n<o;n++)t.copy(i[n]),t.applyMatrix4(e.matrixWorld),r.expandByPoint(t)}),this}}(),copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(t){return(t||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){return(t||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return(e||new THREE.Vector3).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},clampPoint:function(t,e){return(e||new THREE.Vector3).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new THREE.Vector3;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),getBoundingSphere:function(){var t=new THREE.Vector3;return function(e){return e=e||new THREE.Sphere,e.center=this.center(),e.radius=.5*this.size(t).length(),e}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(e){return t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.makeEmpty(),this.setFromPoints(t),this}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(t,e,r,i,n,o,a,s,h){var l=this.elements=new Float32Array(9);l[0]=void 0!==t?t:1,l[3]=e||0,l[6]=r||0,l[1]=i||0,l[4]=void 0!==n?n:1,l[7]=o||0,l[2]=a||0,l[5]=s||0,l[8]=void 0!==h?h:1},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(t,e,r,i,n,o,a,s,h){var l=this.elements;return l[0]=t,l[3]=e,l[6]=r,l[1]=i,l[4]=n,l[7]=o,l[2]=a,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(t){return t=t.elements,this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(t){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)},applyToVector3Array:function(){var t=new THREE.Vector3;return function(e,r,i){void 0===r&&(r=0),void 0===i&&(i=e.length);for(var n=0;n<i;n+=3,r+=3)t.x=e[r],t.y=e[r+1],t.z=e[r+2],t.applyMatrix3(this),e[r]=t.x,e[r+1]=t.y,e[r+2]=t.z;return e}}(),multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],r=t[1],i=t[2],n=t[3],o=t[4],a=t[5],s=t[6],h=t[7],t=t[8];return e*o*t-e*a*h-r*n*t+r*a*s+i*n*h-i*o*s},getInverse:function(t,e){var r=t.elements,i=this.elements;if(i[0]=r[10]*r[5]-r[6]*r[9],i[1]=-r[10]*r[1]+r[2]*r[9],i[2]=r[6]*r[1]-r[2]*r[5],i[3]=-r[10]*r[4]+r[6]*r[8],i[4]=r[10]*r[0]-r[2]*r[8],i[5]=-r[6]*r[0]+r[2]*r[4],i[6]=r[9]*r[4]-r[5]*r[8],i[7]=-r[9]*r[0]+r[1]*r[8],i[8]=r[5]*r[0]-r[1]*r[4],r=r[0]*i[0]+r[1]*i[3]+r[2]*i[6],0===r){if(e)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/r),this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},flattenToArrayOffset:function(t,e){var r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t},getNormalMatrix:function(t){return this.getInverse(t).transpose(),this},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},fromArray:function(t){return this.elements.set(t),this},toArray:function(){var t=this.elements;return[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8]]},clone:function(){var t=this.elements;return new THREE.Matrix3(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8])}},THREE.Matrix4=function(t,e,r,i,n,o,a,s,h,l,c,u,f,E,p,d){var m=this.elements=new Float32Array(16);m[0]=void 0!==t?t:1,m[4]=e||0,m[8]=r||0,m[12]=i||0,m[1]=n||0,m[5]=void 0!==o?o:1,m[9]=a||0,m[13]=s||0,m[2]=h||0,m[6]=l||0,m[10]=void 0!==c?c:1,m[14]=u||0,m[3]=f||0,m[7]=E||0,m[11]=p||0,m[15]=void 0!==d?d:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(t,e,r,i,n,o,a,s,h,l,c,u,f,E,p,d){var m=this.elements;return m[0]=t,m[4]=e,m[8]=r,m[12]=i,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=u,m[3]=f,m[7]=E,m[11]=p,m[15]=d,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(t){return this.elements.set(t.elements),this},extractPosition:function(t){return console.warn("THREEMatrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},copyPosition:function(t){var e=this.elements;return t=t.elements,e[12]=t[12],e[13]=t[13],e[14]=t[14],this},extractRotation:function(){var t=new THREE.Vector3;return function(e){var r=this.elements;e=e.elements;var i=1/t.set(e[0],e[1],e[2]).length(),n=1/t.set(e[4],e[5],e[6]).length(),o=1/t.set(e[8],e[9],e[10]).length();return r[0]=e[0]*i,r[1]=e[1]*i,r[2]=e[2]*i,r[4]=e[4]*n,r[5]=e[5]*n,r[6]=e[6]*n,r[8]=e[8]*o,r[9]=e[9]*o,r[10]=e[10]*o,this}}(),makeRotationFromEuler:function(t){!1==t instanceof THREE.Euler&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,r=t.x,i=t.y,n=t.z,o=Math.cos(r),r=Math.sin(r),a=Math.cos(i),i=Math.sin(i),s=Math.cos(n),n=Math.sin(n);if("XYZ"===t.order){t=o*s;var h=o*n,l=r*s,c=r*n;e[0]=a*s,e[4]=-a*n,e[8]=i,e[1]=h+l*i,e[5]=t-c*i,e[9]=-r*a,e[2]=c-t*i,e[6]=l+h*i,e[10]=o*a}else"YXZ"===t.order?(t=a*s,h=a*n,l=i*s,c=i*n,e[0]=t+c*r,e[4]=l*r-h,e[8]=o*i,e[1]=o*n,e[5]=o*s,e[9]=-r,e[2]=h*r-l,e[6]=c+t*r,e[10]=o*a):"ZXY"===t.order?(t=a*s,h=a*n,l=i*s,c=i*n,e[0]=t-c*r,e[4]=-o*n,e[8]=l+h*r,e[1]=h+l*r,e[5]=o*s,e[9]=c-t*r,e[2]=-o*i,e[6]=r,e[10]=o*a):"ZYX"===t.order?(t=o*s,h=o*n,l=r*s,c=r*n,e[0]=a*s,e[4]=l*i-h,e[8]=t*i+c,e[1]=a*n,e[5]=c*i+t,e[9]=h*i-l,e[2]=-i,e[6]=r*a,e[10]=o*a):"YZX"===t.order?(t=o*a,h=o*i,l=r*a,c=r*i,e[0]=a*s,e[4]=c-t*n,e[8]=l*n+h,e[1]=n,e[5]=o*s,e[9]=-r*s,e[2]=-i*s,e[6]=h*n+l,e[10]=t-c*n):"XZY"===t.order&&(t=o*a,h=o*i,l=r*a,c=r*i,e[0]=a*s,e[4]=-n,e[8]=i*s,e[1]=t*n+c,e[5]=o*s,e[9]=h*n-l,e[2]=l*n-h,e[6]=r*s,e[10]=c*n+t);return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},makeRotationFromQuaternion:function(t){var e=this.elements,r=t.x,i=t.y,n=t.z,o=t.w,a=r+r,s=i+i,h=n+n;t=r*a;var l=r*s,r=r*h,c=i*s,i=i*h,n=n*h,a=o*a,s=o*s,o=o*h;return e[0]=1-(c+n),e[4]=l-o,e[8]=r+s,e[1]=l+o,e[5]=1-(t+n),e[9]=i-a,e[2]=r-s,e[6]=i+a,e[10]=1-(t+c),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o){var a=this.elements;return r.subVectors(i,n).normalize(),0===r.length()&&(r.z=1),t.crossVectors(o,r).normalize(),0===t.length()&&(r.x+=1e-4,t.crossVectors(o,r).normalize()),e.crossVectors(r,t),a[0]=t.x,a[4]=e.x,a[8]=r.x,a[1]=t.y,a[5]=e.y,a[9]=r.y,a[2]=t.z,a[6]=e.z,a[10]=r.z,this}}(),multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},multiplyMatrices:function(t,e){var r=t.elements,i=e.elements,n=this.elements,o=r[0],a=r[4],s=r[8],h=r[12],l=r[1],c=r[5],u=r[9],f=r[13],E=r[2],p=r[6],d=r[10],m=r[14],g=r[3],T=r[7],v=r[11],r=r[15],y=i[0],R=i[4],x=i[8],H=i[12],_=i[1],b=i[5],w=i[9],M=i[13],S=i[2],C=i[6],A=i[10],L=i[14],P=i[3],F=i[7],D=i[11],i=i[15];return n[0]=o*y+a*_+s*S+h*P,n[4]=o*R+a*b+s*C+h*F,n[8]=o*x+a*w+s*A+h*D,n[12]=o*H+a*M+s*L+h*i,n[1]=l*y+c*_+u*S+f*P,n[5]=l*R+c*b+u*C+f*F,n[9]=l*x+c*w+u*A+f*D,n[13]=l*H+c*M+u*L+f*i,n[2]=E*y+p*_+d*S+m*P,n[6]=E*R+p*b+d*C+m*F,n[10]=E*x+p*w+d*A+m*D,n[14]=E*H+p*M+d*L+m*i,n[3]=g*y+T*_+v*S+r*P,n[7]=g*R+T*b+v*C+r*F,n[11]=g*x+T*w+v*A+r*D,n[15]=g*H+T*M+v*L+r*i,this},multiplyToArray:function(t,e,r){var i=this.elements;return this.multiplyMatrices(t,e),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),t.applyProjection(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(t){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)},applyToVector3Array:function(){var t=new THREE.Vector3;return function(e,r,i){void 0===r&&(r=0),void 0===i&&(i=e.length);for(var n=0;n<i;n+=3,r+=3)t.x=e[r],t.y=e[r+1],t.z=e[r+2],t.applyMatrix4(this),e[r]=t.x,e[r+1]=t.y,e[r+2]=t.z;return e}}(),rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},determinant:function(){var t=this.elements,e=t[0],r=t[4],i=t[8],n=t[12],o=t[1],a=t[5],s=t[9],h=t[13],l=t[2],c=t[6],u=t[10],f=t[14];return t[3]*(+n*s*c-i*h*c-n*a*u+r*h*u+i*a*f-r*s*f)+t[7]*(+e*s*f-e*h*u+n*o*u-i*o*f+i*h*l-n*s*l)+t[11]*(+e*h*c-e*a*f-n*o*c+r*o*f+n*a*l-r*h*l)+t[15]*(-i*a*l-e*s*c+e*a*u+i*o*c-r*o*u+r*s*l)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArrayOffset:function(t,e){var r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t[e+9]=r[9],t[e+10]=r[10],t[e+11]=r[11],t[e+12]=r[12],t[e+13]=r[13],t[e+14]=r[14],t[e+15]=r[15],t},getPosition:function(){var t=new THREE.Vector3;return function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var e=this.elements;return t.set(e[12],e[13],e[14])}}(),setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var r=this.elements,i=t.elements,n=i[0],o=i[4],a=i[8],s=i[12],h=i[1],l=i[5],c=i[9],u=i[13],f=i[2],E=i[6],p=i[10],d=i[14],m=i[3],g=i[7],T=i[11],i=i[15];if(r[0]=c*d*g-u*p*g+u*E*T-l*d*T-c*E*i+l*p*i,r[4]=s*p*g-a*d*g-s*E*T+o*d*T+a*E*i-o*p*i,r[8]=a*u*g-s*c*g+s*l*T-o*u*T-a*l*i+o*c*i,r[12]=s*c*E-a*u*E-s*l*p+o*u*p+a*l*d-o*c*d,r[1]=u*p*m-c*d*m-u*f*T+h*d*T+c*f*i-h*p*i,r[5]=a*d*m-s*p*m+s*f*T-n*d*T-a*f*i+n*p*i,r[9]=s*c*m-a*u*m-s*h*T+n*u*T+a*h*i-n*c*i,r[13]=a*u*f-s*c*f+s*h*p-n*u*p-a*h*d+n*c*d,r[2]=l*d*m-u*E*m+u*f*g-h*d*g-l*f*i+h*E*i,r[6]=s*E*m-o*d*m-s*f*g+n*d*g+o*f*i-n*E*i,r[10]=o*u*m-s*l*m+s*h*g-n*u*g-o*h*i+n*l*i,r[14]=s*l*f-o*u*f-s*h*E+n*u*E+o*h*d-n*l*d,r[3]=c*E*m-l*p*m-c*f*g+h*p*g+l*f*T-h*E*T,r[7]=o*p*m-a*E*m+a*f*g-n*p*g-o*f*T+n*E*T,r[11]=a*l*m-o*c*m-a*h*g+n*c*g+o*h*T-n*l*T,r[15]=o*c*f-a*l*f+a*h*E-n*c*E-o*h*p+n*l*p,r=n*r[0]+h*r[4]+f*r[8]+m*r[12],0==r){if(e)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/r),this},translate:function(t){console.warn("THREE.Matrix4: .translate() has been removed.")},rotateX:function(t){console.warn("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(t){console.warn("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(t){console.warn("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(t,e){console.warn("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(t){var e=this.elements,r=t.x,i=t.y;return t=t.z,e[0]*=r,e[4]*=i,e[8]*=t,e[1]*=r,e[5]*=i,e[9]*=t,e[2]*=r,e[6]*=i,e[10]*=t,e[3]*=r,e[7]*=i,e[11]*=t,this},getMaxScaleOnAxis:function(){var t=this.elements;return Math.sqrt(Math.max(t[0]*t[0]+t[1]*t[1]+t[2]*t[2],Math.max(t[4]*t[4]+t[5]*t[5]+t[6]*t[6],t[8]*t[8]+t[9]*t[9]+t[10]*t[10])))},makeTranslation:function(t,e,r){return this.set(1,0,0,t,0,1,0,e,0,0,1,r,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t);return t=Math.sin(t),this.set(1,0,0,0,0,e,-t,0,0,t,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t);return t=Math.sin(t),this.set(e,0,t,0,0,1,0,0,-t,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t);return t=Math.sin(t),this.set(e,-t,0,0,t,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var r=Math.cos(e),i=Math.sin(e),n=1-r,o=t.x,a=t.y,s=t.z,h=n*o,l=n*a;return this.set(h*o+r,h*a-i*s,h*s+i*a,0,h*a+i*s,l*a+r,l*s-i*o,0,h*s-i*a,l*s+i*o,n*s*s+r,0,0,0,0,1),this},makeScale:function(t,e,r){return this.set(t,0,0,0,0,e,0,0,0,0,r,0,0,0,0,1),this},compose:function(t,e,r){return this.makeRotationFromQuaternion(e),this.scale(r),this.setPosition(t),this},decompose:function(){var t=new THREE.Vector3,e=new THREE.Matrix4;return function(r,i,n){var o=this.elements,a=t.set(o[0],o[1],o[2]).length(),s=t.set(o[4],o[5],o[6]).length(),h=t.set(o[8],o[9],o[10]).length();0>this.determinant()&&(a=-a),r.x=o[12],r.y=o[13],r.z=o[14],e.elements.set(this.elements),r=1/a;var o=1/s,l=1/h;return e.elements[0]*=r,e.elements[1]*=r,e.elements[2]*=r,e.elements[4]*=o,e.elements[5]*=o,e.elements[6]*=o,e.elements[8]*=l,e.elements[9]*=l,e.elements[10]*=l,i.setFromRotationMatrix(e),n.x=a,n.y=s,n.z=h,this}}(),makeFrustum:function(t,e,r,i,n,o){var a=this.elements;return a[0]=2*n/(e-t),a[4]=0,a[8]=(e+t)/(e-t),a[12]=0,a[1]=0,a[5]=2*n/(i-r),a[9]=(i+r)/(i-r),a[13]=0,a[2]=0,a[6]=0,a[10]=-(o+n)/(o-n),a[14]=-2*o*n/(o-n),a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(t,e,r,i){t=r*Math.tan(THREE.Math.degToRad(.5*t));var n=-t;return this.makeFrustum(n*e,t*e,n,t,r,i)},makeOrthographic:function(t,e,r,i,n,o){var a=this.elements,s=e-t,h=r-i,l=o-n;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-((e+t)/s),a[1]=0,a[5]=2/h,a[9]=0,a[13]=-((r+i)/h),a[2]=0,a[6]=0,a[10]=-2/l,a[14]=-((o+n)/l),a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},fromArray:function(t){return this.elements.set(t),this},toArray:function(){var t=this.elements;return[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15]]},clone:function(){var t=this.elements;return new THREE.Matrix4(t[0],t[4],t[8],t[12],t[1],t[5],t[9],t[13],t[2],t[6],t[10],t[14],t[3],t[7],t[11],t[15])}},THREE.Ray=function(t,e){this.origin=void 0!==t?t:new THREE.Vector3,this.direction=void 0!==e?e:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return(e||new THREE.Vector3).copy(this.direction).multiplyScalar(t).add(this.origin)},recast:function(){var t=new THREE.Vector3;return function(e){return this.origin.copy(this.at(e,t)),this}}(),closestPointToPoint:function(t,e){var r=e||new THREE.Vector3;r.subVectors(t,this.origin);var i=r.dot(this.direction);return 0>i?r.copy(this.origin):r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(){var t=new THREE.Vector3;return function(e){var r=t.subVectors(e,this.origin).dot(this.direction);return 0>r?this.origin.distanceTo(e):(t.copy(this.direction).multiplyScalar(r).add(this.origin),t.distanceTo(e))}}(),distanceSqToSegment:function(t,e,r,i){var n=t.clone().add(e).multiplyScalar(.5),o=e.clone().sub(t).normalize(),a=.5*t.distanceTo(e),s=this.origin.clone().sub(n);t=-this.direction.dot(o),e=s.dot(this.direction);var h,l,c=-s.dot(o),u=s.lengthSq(),f=Math.abs(1-t*t);return 0<=f?(s=t*c-e,h=t*e-c,l=a*f,0<=s?h>=-l?h<=l?(a=1/f,s*=a,h*=a,t=s*(s+t*h+2*e)+h*(t*s+h+2*c)+u):(h=a,s=Math.max(0,-(t*h+e)),t=-s*s+h*(h+2*c)+u):(h=-a,s=Math.max(0,-(t*h+e)),t=-s*s+h*(h+2*c)+u):h<=-l?(s=Math.max(0,-(-t*a+e)),h=0<s?-a:Math.min(Math.max(-a,-c),a),t=-s*s+h*(h+2*c)+u):h<=l?(s=0,h=Math.min(Math.max(-a,-c),a),t=h*(h+2*c)+u):(s=Math.max(0,-(t*a+e)),h=0<s?a:Math.min(Math.max(-a,-c),a),t=-s*s+h*(h+2*c)+u)):(h=0<t?-a:a,s=Math.max(0,-(t*h+e)),t=-s*s+h*(h+2*c)+u),r&&r.copy(this.direction.clone().multiplyScalar(s).add(this.origin)),i&&i.copy(o.clone().multiplyScalar(h).add(n)),t},isIntersectionSphere:function(t){return this.distanceToPoint(t.center)<=t.radius},intersectSphere:function(){var t=new THREE.Vector3;return function(e,r){t.subVectors(e.center,this.origin);var i=t.dot(this.direction),n=t.dot(t)-i*i,o=e.radius*e.radius;return n>o?null:(o=Math.sqrt(o-n),n=i-o,i+=o,0>n&&0>i?null:0>n?this.at(i,r):this.at(n,r))}}(),isIntersectionPlane:function(t){var e=t.distanceToPoint(this.origin);return 0===e||0>t.normal.dot(this.direction)*e},distanceToPlane:function(t){var e=t.normal.dot(this.direction);return 0==e?0==t.distanceToPoint(this.origin)?0:null:(t=-(this.origin.dot(t.normal)+t.constant)/e,0<=t?t:null)},intersectPlane:function(t,e){var r=this.distanceToPlane(t);return null===r?null:this.at(r,e)},isIntersectionBox:function(){var t=new THREE.Vector3;return function(e){return null!==this.intersectBox(e,t)}}(),intersectBox:function(t,e){var r,i,n,o,a;i=1/this.direction.x,o=1/this.direction.y,a=1/this.direction.z;var s=this.origin;return 0<=i?(r=(t.min.x-s.x)*i,i*=t.max.x-s.x):(r=(t.max.x-s.x)*i,i*=t.min.x-s.x),0<=o?(n=(t.min.y-s.y)*o,o*=t.max.y-s.y):(n=(t.max.y-s.y)*o,o*=t.min.y-s.y),r>o||n>i?null:((n>r||r!==r)&&(r=n),(o<i||i!==i)&&(i=o),0<=a?(n=(t.min.z-s.z)*a,a*=t.max.z-s.z):(n=(t.max.z-s.z)*a,a*=t.min.z-s.z),r>a||n>i?null:((n>r||r!==r)&&(r=n),(a<i||i!==i)&&(i=a),0>i?null:this.at(0<=r?r:i,e)))},intersectTriangle:function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Vector3;return function(n,o,a,s,h){if(e.subVectors(o,n),r.subVectors(a,n),i.crossVectors(e,r),o=this.direction.dot(i),0<o){if(s)return null;s=1}else{if(!(0>o))return null;s=-1,o=-o}return t.subVectors(this.origin,n),n=s*this.direction.dot(r.crossVectors(t,r)),0>n?null:(a=s*this.direction.dot(e.cross(t)),0>a||n+a>o?null:(n=-s*t.dot(i),0>n?null:this.at(n/o,h)))}}(),applyMatrix4:function(t){return this.direction.add(this.origin).applyMatrix4(t),this.origin.applyMatrix4(t),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(t,e){this.center=void 0!==t?t:new THREE.Vector3,this.radius=void 0!==e?e:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t=new THREE.Box3;return function(e,r){var i=this.center;void 0!==r?i.copy(r):t.setFromPoints(e).center(i);for(var n=0,o=0,a=e.length;o<a;o++)n=Math.max(n,i.distanceToSquared(e[o]));return this.radius=Math.sqrt(n),this}}(),copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},clampPoint:function(t,e){var r=this.center.distanceToSquared(t),i=e||new THREE.Vector3;return i.copy(t),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(t){return t=t||new THREE.Box3,t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius*=t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(t,e,r,i,n,o){this.planes=[void 0!==t?t:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(t,e,r,i,n,o){var a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(r),a[3].copy(i),a[4].copy(n),a[5].copy(o),this},copy:function(t){for(var e=this.planes,r=0;6>r;r++)e[r].copy(t.planes[r]);return this},setFromMatrix:function(t){var e=this.planes,r=t.elements;t=r[0];var i=r[1],n=r[2],o=r[3],a=r[4],s=r[5],h=r[6],l=r[7],c=r[8],u=r[9],f=r[10],E=r[11],p=r[12],d=r[13],m=r[14],r=r[15];return e[0].setComponents(o-t,l-a,E-c,r-p).normalize(),e[1].setComponents(o+t,l+a,E+c,r+p).normalize(),e[2].setComponents(o+i,l+s,E+u,r+d).normalize(),e[3].setComponents(o-i,l-s,E-u,r-d).normalize(),e[4].setComponents(o-n,l-h,E-f,r-m).normalize(),e[5].setComponents(o+n,l+h,E+f,r+m).normalize(),this},intersectsObject:function(){var t=new THREE.Sphere;return function(e){var r=e.geometry;return null===r.boundingSphere&&r.computeBoundingSphere(),t.copy(r.boundingSphere),t.applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){var e=this.planes,r=t.center;t=-t.radius;for(var i=0;6>i;i++)if(e[i].distanceToPoint(r)<t)return!1;return!0},intersectsBox:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(r){for(var i=this.planes,n=0;6>n;n++){var o=i[n];t.x=0<o.normal.x?r.min.x:r.max.x,e.x=0<o.normal.x?r.max.x:r.min.x,t.y=0<o.normal.y?r.min.y:r.max.y,e.y=0<o.normal.y?r.max.y:r.min.y,t.z=0<o.normal.z?r.min.z:r.max.z,e.z=0<o.normal.z?r.max.z:r.min.z;var a=o.distanceToPoint(t),o=o.distanceToPoint(e);if(0>a&&0>o)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,r=0;6>r;r++)if(0>e[r].distanceToPoint(t))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(t,e){this.normal=void 0!==t?t:new THREE.Vector3(1,0,0),this.constant=void 0!==e?e:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,r,i){return this.normal.set(t,e,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(r,i,n){return i=t.subVectors(n,i).cross(e.subVectors(r,i)).normalize(),this.setFromNormalAndCoplanarPoint(i,r),this}}(),copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return this.orthoPoint(t,e).sub(t).negate()},orthoPoint:function(t,e){var r=this.distanceToPoint(t);return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(t){var e=this.distanceToPoint(t.start);return t=this.distanceToPoint(t.end),0>e&&0<t||0>t&&0<e},intersectLine:function(){var t=new THREE.Vector3;return function(e,r){var i=r||new THREE.Vector3,n=e.delta(t),o=this.normal.dot(n);return 0!=o?(o=-(e.start.dot(this.normal)+this.constant)/o,0>o||1<o?void 0:i.copy(n).multiplyScalar(o).add(e.start)):0==this.distanceToPoint(e.start)?i.copy(e.start):void 0}}(),coplanarPoint:function(t){return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Matrix3;return function(i,n){var o=n||r.getNormalMatrix(i),o=t.copy(this.normal).applyMatrix3(o),a=this.coplanarPoint(e);return a.applyMatrix4(i),this.setFromNormalAndCoplanarPoint(o,a),this}}(),translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={generateUUID:function(){var t,e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),r=Array(36),i=0;return function(){for(var n=0;36>n;n++)8==n||13==n||18==n||23==n?r[n]="-":14==n?r[n]="4":(2>=i&&(i=33554432+16777216*Math.random()|0),t=15&i,i>>=4,r[n]=e[19==n?3&t|8:t]);return r.join("")}}(),clamp:function(t,e,r){return t<e?e:t>r?r:t},clampBottom:function(t,e){return t<e?e:t},mapLinear:function(t,e,r,i,n){return i+(t-e)*(n-i)/(r-e)},smoothstep:function(t,e,r){return t<=e?0:t>=r?1:(t=(t-e)/(r-e),t*t*(3-2*t))},smootherstep:function(t,e,r){return t<=e?0:t>=r?1:(t=(t-e)/(r-e),t*t*t*(t*(6*t-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1));
},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},sign:function(t){return 0>t?-1:0<t?1:0},degToRad:function(){var t=Math.PI/180;return function(e){return e*t}}(),radToDeg:function(){var t=180/Math.PI;return function(e){return e*t}}(),isPowerOfTwo:function(t){return 0===(t&t-1)&&0!==t}},THREE.Spline=function(t){function e(t,e,r,i,n,o,a){return t=.5*(r-t),i=.5*(i-e),(2*(e-r)+t+i)*a+(-3*(e-r)-2*t-i)*o+t*n+e}this.points=t;var r,i,n,o,a,s,h,l,c,u=[],f={x:0,y:0,z:0};this.initFromArray=function(t){this.points=[];for(var e=0;e<t.length;e++)this.points[e]={x:t[e][0],y:t[e][1],z:t[e][2]}},this.getPoint=function(t){return r=(this.points.length-1)*t,i=Math.floor(r),n=r-i,u[0]=0===i?i:i-1,u[1]=i,u[2]=i>this.points.length-2?this.points.length-1:i+1,u[3]=i>this.points.length-3?this.points.length-1:i+2,s=this.points[u[0]],h=this.points[u[1]],l=this.points[u[2]],c=this.points[u[3]],o=n*n,a=n*o,f.x=e(s.x,h.x,l.x,c.x,n,o,a),f.y=e(s.y,h.y,l.y,c.y,n,o,a),f.z=e(s.z,h.z,l.z,c.z,n,o,a),f},this.getControlPointsArray=function(){var t,e,r=this.points.length,i=[];for(t=0;t<r;t++)e=this.points[t],i[t]=[e.x,e.y,e.z];return i},this.getLength=function(t){var e,r,i,n=e=e=0,o=new THREE.Vector3,a=new THREE.Vector3,s=[],h=0;for(s[0]=0,t||(t=100),r=this.points.length*t,o.copy(this.points[0]),t=1;t<r;t++)e=t/r,i=this.getPoint(e),a.copy(i),h+=a.distanceTo(o),o.copy(i),e*=this.points.length-1,e=Math.floor(e),e!=n&&(s[e]=h,n=e);return s[s.length]=h,{chunks:s,total:h}},this.reparametrizeByArcLength=function(t){var e,r,i,n,o,a,s=[],h=new THREE.Vector3,l=this.getLength();for(s.push(h.copy(this.points[0]).clone()),e=1;e<this.points.length;e++){for(r=l.chunks[e]-l.chunks[e-1],a=Math.ceil(t*r/l.total),n=(e-1)/(this.points.length-1),o=e/(this.points.length-1),r=1;r<a-1;r++)i=n+1/a*r*(o-n),i=this.getPoint(i),s.push(h.copy(i).clone());s.push(h.copy(this.points[e]).clone())}this.points=s}},THREE.Triangle=function(t,e,r){this.a=void 0!==t?t:new THREE.Vector3,this.b=void 0!==e?e:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(){var t=new THREE.Vector3;return function(e,r,i,n){return n=n||new THREE.Vector3,n.subVectors(i,r),t.subVectors(e,r),n.cross(t),e=n.lengthSq(),0<e?n.multiplyScalar(1/Math.sqrt(e)):n.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o,a,s){t.subVectors(a,n),e.subVectors(o,n),r.subVectors(i,n),i=t.dot(t),n=t.dot(e),o=t.dot(r);var h=e.dot(e);a=e.dot(r);var l=i*h-n*n;return s=s||new THREE.Vector3,0==l?s.set(-2,-1,-1):(l=1/l,h=(h*o-n*a)*l,i=(i*a-n*o)*l,s.set(1-h-i,i,h))}}(),THREE.Triangle.containsPoint=function(){var t=new THREE.Vector3;return function(e,r,i,n){return e=THREE.Triangle.barycoordFromPoint(e,r,i,n,t),0<=e.x&&0<=e.y&&1>=e.x+e.y}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(t,e,r){return this.a.copy(t),this.b.copy(e),this.c.copy(r),this},setFromPointsAndIndices:function(t,e,r,i){return this.a.copy(t[e]),this.b.copy(t[r]),this.c.copy(t[i]),this},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},area:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),.5*t.cross(e).length()}}(),midpoint:function(t){return(t||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(t){return THREE.Triangle.normal(this.a,this.b,this.c,t)},plane:function(t){return(t||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(t,e){return THREE.Triangle.barycoordFromPoint(t,this.a,this.b,this.c,e)},containsPoint:function(t){return THREE.Triangle.containsPoint(t,this.a,this.b,this.c)},equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Clock=function(t){this.autoStart=void 0===t||t,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running&&this.start(),this.running){var e=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),t=.001*(e-this.oldTime);this.oldTime=e,this.elapsedTime+=t}return t}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(t){t.addEventListener=THREE.EventDispatcher.prototype.addEventListener,t.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,t.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,t.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[t]&&(r[t]=[]),-1===r[t].indexOf(e)&&r[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[t]&&-1!==r[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){var r=this._listeners[t];if(void 0!==r){var i=r.indexOf(e);-1!==i&&r.splice(i,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var r=[],i=e.length,n=0;n<i;n++)r[n]=e[n];for(n=0;n<i;n++)r[n].call(this,t)}}}},function(t){t.Raycaster=function(e,r,i,n){this.ray=new t.Ray(e,r),this.near=i||0,this.far=n||1/0,this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var e=function(t,e){return t.distance-e.distance},r=function(t,e,i,n){if(t.raycast(e,i),!0===n){t=t.children,n=0;for(var o=t.length;n<o;n++)r(t[n],e,i,!0)}};t.Raycaster.prototype={constructor:t.Raycaster,precision:1e-4,linePrecision:1,set:function(t,e){this.ray.set(t,e)},intersectObject:function(t,i){var n=[];return r(t,this,n,i),n.sort(e),n},intersectObjects:function(t,i){for(var n=[],o=0,a=t.length;o<a;o++)r(t[o],this,n,i);return n.sort(e),n}}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=THREE.Object3D.DefaultUp.clone();var t=new THREE.Vector3,e=new THREE.Euler,r=new THREE.Quaternion,i=new THREE.Vector3(1,1,1);e.onChange(function(){r.setFromEuler(e,!1)}),r.onChange(function(){e.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:t},rotation:{enumerable:!0,value:e},quaternion:{enumerable:!0,value:r},scale:{enumerable:!0,value:i}}),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!1,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0),THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order},set eulerOrder(t){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order=t},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(t){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var t=new THREE.Quaternion;return function(e,r){return t.setFromAxisAngle(e,r),this.quaternion.multiply(t),this}}(),rotateX:function(){var t=new THREE.Vector3(1,0,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateY:function(){var t=new THREE.Vector3(0,1,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateZ:function(){var t=new THREE.Vector3(0,0,1);return function(e){return this.rotateOnAxis(t,e)}}(),translateOnAxis:function(){var t=new THREE.Vector3;return function(e,r){return t.copy(e).applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(r)),this}}(),translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},translateX:function(){var t=new THREE.Vector3(1,0,0);return function(e){return this.translateOnAxis(t,e)}}(),translateY:function(){var t=new THREE.Vector3(0,1,0);return function(e){return this.translateOnAxis(t,e)}}(),translateZ:function(){var t=new THREE.Vector3(0,0,1);return function(e){return this.translateOnAxis(t,e)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new THREE.Matrix4;return function(e){return e.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){var t=new THREE.Matrix4;return function(e){t.lookAt(e,this.position,this.up),this.quaternion.setFromRotationMatrix(t)}}(),add:function(t){if(1<arguments.length){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}if(t===this)return console.error("THREE.Object3D.add:",t,"can't be added as a child of itself."),this;if(t instanceof THREE.Object3D){for(void 0!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t),e=this;void 0!==e.parent;)e=e.parent;void 0!==e&&e instanceof THREE.Scene&&e.__addObject(t)}else console.error("THREE.Object3D.add:",t,"is not an instance of THREE.Object3D.");return this},remove:function(t){if(1<arguments.length)for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);if(e=this.children.indexOf(t),-1!==e){for(t.parent=void 0,t.dispatchEvent({type:"removed"}),this.children.splice(e,1),e=this;void 0!==e.parent;)e=e.parent;void 0!==e&&e instanceof THREE.Scene&&e.__removeObject(t)}},raycast:function(){},traverse:function(t){t(this);for(var e=0,r=this.children.length;e<r;e++)this.children[e].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=0,r=this.children.length;e<r;e++)this.children[e].traverseVisible(t)}},getObjectById:function(t,e){for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r];if(n.id===t||!0===e&&(n=n.getObjectById(t,e),void 0!==n))return n}},getObjectByName:function(t,e){for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r];if(n.name===t||!0===e&&(n=n.getObjectByName(t,e),void 0!==n))return n}},getChildByName:function(t,e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t,e)},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){!0===this.matrixAutoUpdate&&this.updateMatrix(),!0!==this.matrixWorldNeedsUpdate&&!0!==t||(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=0,r=this.children.length;e<r;e++)this.children[e].updateMatrixWorld(t)},clone:function(t,e){if(void 0===t&&(t=new THREE.Object3D),void 0===e&&(e=!0),t.name=this.name,t.up.copy(this.up),t.position.copy(this.position),t.quaternion.copy(this.quaternion),t.scale.copy(this.scale),t.renderDepth=this.renderDepth,t.rotationAutoUpdate=this.rotationAutoUpdate,t.matrix.copy(this.matrix),t.matrixWorld.copy(this.matrixWorld),t.matrixAutoUpdate=this.matrixAutoUpdate,t.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,t.visible=this.visible,t.castShadow=this.castShadow,t.receiveShadow=this.receiveShadow,t.frustumCulled=this.frustumCulled,t.userData=JSON.parse(JSON.stringify(this.userData)),!0===e)for(var r=0;r<this.children.length;r++)t.add(this.children[r].clone());return t}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){function t(){if(l===y){var t=new THREE.RenderableVertex;return v.push(t),y++,l++,t}return v[l++]}function e(){if(u===x){var t=new THREE.RenderableFace;return R.push(t),x++,u++,t}return R[u++]}function r(){if(E===_){var t=new THREE.RenderableLine;return H.push(t),_++,E++,t}return H[E++]}function i(){if(d===w){var t=new THREE.RenderableSprite;return b.push(t),w++,d++,t}return b[d++]}function n(t,e){return t.z!==e.z?e.z-t.z:t.id!==e.id?t.id-e.id:0}function o(t,e){var r=0,i=1,n=t.z+t.w,o=e.z+e.w,a=-t.z+t.w,s=-e.z+e.w;return 0<=n&&0<=o&&0<=a&&0<=s||!(0>n&&0>o||0>a&&0>s)&&(0>n?r=Math.max(r,n/(n-o)):0>o&&(i=Math.min(i,n/(n-o))),0>a?r=Math.max(r,a/(a-s)):0>s&&(i=Math.min(i,a/(a-s))),!(i<r)&&(t.lerp(e,r),e.lerp(t,1-i),!0))}var a,s,h,l,c,u,f,E,p,d,m,g=[],T=0,v=[],y=0,R=[],x=0,H=[],_=0,b=[],w=0,M={objects:[],lights:[],elements:[]},S=new THREE.Vector3,C=new THREE.Vector3,A=new THREE.Vector3,L=new THREE.Vector3,P=new THREE.Vector4,F=new THREE.Box3(new THREE.Vector3((-1),(-1),(-1)),new THREE.Vector3(1,1,1)),D=new THREE.Box3,U=Array(3),V=new THREE.Matrix4,z=new THREE.Matrix4,B=new THREE.Matrix4,k=new THREE.Matrix3,N=new THREE.Frustum,O=new THREE.Vector4,I=new THREE.Vector4;this.projectVector=function(t,e){return e.matrixWorldInverse.getInverse(e.matrixWorld),z.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),t.applyProjection(z)},this.unprojectVector=function(){var t=new THREE.Matrix4;return function(e,r){return t.getInverse(r.projectionMatrix),z.multiplyMatrices(r.matrixWorld,t),e.applyProjection(z)}}(),this.pickingRay=function(t,e){t.z=-1;var r=new THREE.Vector3(t.x,t.y,1);return this.unprojectVector(t,e),this.unprojectVector(r,e),r.sub(t).normalize(),new THREE.Raycaster(t,r)};var G=new function(){var i=[],n=[],o=null,a=null,s=new THREE.Matrix3,l=function(t){var e=t.positionWorld,r=t.positionScreen;e.copy(t.position).applyMatrix4(m),r.copy(e).applyMatrix4(z),e=1/r.w,r.x*=e,r.y*=e,r.z*=e,t.visible=-1<=r.x&&1>=r.x&&-1<=r.y&&1>=r.y&&-1<=r.z&&1>=r.z},u=function(t,e,r){return!0===t.visible||!0===e.visible||!0===r.visible||(U[0]=t.positionScreen,U[1]=e.positionScreen,U[2]=r.positionScreen,F.isIntersectionBox(D.setFromPoints(U)))},E=function(t,e,r){return 0>(r.positionScreen.x-t.positionScreen.x)*(e.positionScreen.y-t.positionScreen.y)-(r.positionScreen.y-t.positionScreen.y)*(e.positionScreen.x-t.positionScreen.x)};return{setObject:function(t){o=t,a=o.material,s.getNormalMatrix(o.matrixWorld),i.length=0,n.length=0},projectVertex:l,checkTriangleVisibility:u,checkBackfaceCulling:E,pushVertex:function(e,r,i){h=t(),h.position.set(e,r,i),l(h)},pushNormal:function(t,e,r){i.push(t,e,r)},pushUv:function(t,e){n.push(t,e)},pushLine:function(t,e){var i=v[t],n=v[e];f=r(),f.id=o.id,f.v1.copy(i),f.v2.copy(n),f.z=(i.positionScreen.z+n.positionScreen.z)/2,f.material=o.material,M.elements.push(f)},pushTriangle:function(t,r,h){var l=v[t],f=v[r],p=v[h];if(!1!==u(l,f,p)&&(a.side===THREE.DoubleSide||!0===E(l,f,p))){for(c=e(),c.id=o.id,c.v1.copy(l),c.v2.copy(f),c.v3.copy(p),c.z=(l.positionScreen.z+f.positionScreen.z+p.positionScreen.z)/3,l=0;3>l;l++)f=3*arguments[l],p=c.vertexNormalsModel[l],p.set(i[f],i[f+1],i[f+2]),p.applyMatrix3(s).normalize(),f=2*arguments[l],c.uvs[l].set(n[f],n[f+1]);c.vertexNormalsLength=3,c.material=o.material,M.elements.push(c)}}}};this.projectScene=function(h,y,R,x){for(d=E=u=0,M.elements.length=0,!0===h.autoUpdate&&h.updateMatrixWorld(),void 0===y.parent&&y.updateMatrixWorld(),V.copy(y.matrixWorldInverse.getInverse(y.matrixWorld)),z.multiplyMatrices(y.projectionMatrix,V),N.setFromMatrix(z),s=0,M.objects.length=0,M.lights.length=0,h.traverseVisible(function(t){if(t instanceof THREE.Light)M.lights.push(t);else if((t instanceof THREE.Mesh||t instanceof THREE.Line||t instanceof THREE.Sprite)&&(!1===t.frustumCulled||!0===N.intersectsObject(t))){if(s===T){var e=new THREE.RenderableObject;g.push(e),T++,s++,a=e}else a=g[s++];a.id=t.id,a.object=t,null!==t.renderDepth?a.z=t.renderDepth:(L.setFromMatrixPosition(t.matrixWorld),L.applyProjection(z),a.z=L.z),M.objects.push(a)}}),!0===R&&M.objects.sort(n),h=0,R=M.objects.length;h<R;h++){var H=M.objects[h].object,_=H.geometry;if(G.setObject(H),m=H.matrixWorld,l=0,H instanceof THREE.Mesh){if(_ instanceof THREE.BufferGeometry){var b=_.attributes,H=_.offsets;if(void 0!==b.position){for(var w=b.position.array,_=0,F=w.length;_<F;_+=3)G.pushVertex(w[_],w[_+1],w[_+2]);if(void 0!==b.normal)for(var D=b.normal.array,_=0,F=D.length;_<F;_+=3)G.pushNormal(D[_],D[_+1],D[_+2]);if(void 0!==b.uv)for(D=b.uv.array,_=0,F=D.length;_<F;_+=2)G.pushUv(D[_],D[_+1]);if(void 0!==b.index)if(b=b.index.array,0<H.length)for(h=0;h<H.length;h++)for(F=H[h],w=F.index,_=F.start,F=F.start+F.count;_<F;_+=3)G.pushTriangle(b[_]+w,b[_+1]+w,b[_+2]+w);else for(_=0,F=b.length;_<F;_+=3)G.pushTriangle(b[_],b[_+1],b[_+2]);else for(_=0,F=w.length/3;_<F;_+=3)G.pushTriangle(_,_+1,_+2)}}else if(_ instanceof THREE.Geometry){var U=_.vertices,F=_.faces,b=_.faceVertexUvs[0];k.getNormalMatrix(m);for(var w=H.material instanceof THREE.MeshFaceMaterial,D=!0===w?H.material:null,W=0,j=U.length;W<j;W++){var X=U[W];G.pushVertex(X.x,X.y,X.z)}for(U=0,W=F.length;U<W;U++){var j=F[U],Y=!0===w?D.materials[j.materialIndex]:H.material;if(void 0!==Y){var q=Y.side,X=v[j.a],K=v[j.b],Z=v[j.c];if(!0===Y.morphTargets){var Q=_.morphTargets,J=H.morphTargetInfluences,$=X.position,tt=K.position,et=Z.position;S.set(0,0,0),C.set(0,0,0),A.set(0,0,0);for(var rt=0,it=Q.length;rt<it;rt++){var nt=J[rt];if(0!==nt){var ot=Q[rt].vertices;S.x+=(ot[j.a].x-$.x)*nt,S.y+=(ot[j.a].y-$.y)*nt,S.z+=(ot[j.a].z-$.z)*nt,C.x+=(ot[j.b].x-tt.x)*nt,C.y+=(ot[j.b].y-tt.y)*nt,C.z+=(ot[j.b].z-tt.z)*nt,A.x+=(ot[j.c].x-et.x)*nt,A.y+=(ot[j.c].y-et.y)*nt,A.z+=(ot[j.c].z-et.z)*nt}}X.position.add(S),K.position.add(C),Z.position.add(A),G.projectVertex(X),G.projectVertex(K),G.projectVertex(Z)}if(!1!==G.checkTriangleVisibility(X,K,Z)){if(Q=G.checkBackfaceCulling(X,K,Z),q!==THREE.DoubleSide){if(q===THREE.FrontSide&&!1===Q)continue;if(q===THREE.BackSide&&!0===Q)continue}for(c=e(),c.id=H.id,c.v1.copy(X),c.v2.copy(K),c.v3.copy(Z),c.normalModel.copy(j.normal),!1!==Q||q!==THREE.BackSide&&q!==THREE.DoubleSide||c.normalModel.negate(),c.normalModel.applyMatrix3(k).normalize(),J=j.vertexNormals,$=0,tt=Math.min(J.length,3);$<tt;$++)et=c.vertexNormalsModel[$],et.copy(J[$]),!1!==Q||q!==THREE.BackSide&&q!==THREE.DoubleSide||et.negate(),et.applyMatrix3(k).normalize();if(c.vertexNormalsLength=J.length,q=b[U],void 0!==q)for(Q=0;3>Q;Q++)c.uvs[Q].copy(q[Q]);c.color=j.color,c.material=Y,c.z=(X.positionScreen.z+K.positionScreen.z+Z.positionScreen.z)/3,M.elements.push(c)}}}}}else if(H instanceof THREE.Line){if(_ instanceof THREE.BufferGeometry){if(b=_.attributes,void 0!==b.position){for(w=b.position.array,_=0,F=w.length;_<F;_+=3)G.pushVertex(w[_],w[_+1],w[_+2]);if(void 0!==b.index)for(b=b.index.array,_=0,F=b.length;_<F;_+=2)G.pushLine(b[_],b[_+1]);else for(b=H.type===THREE.LinePieces?2:1,_=0,F=w.length/3-1;_<F;_+=b)G.pushLine(_,_+1)}}else if(_ instanceof THREE.Geometry&&(B.multiplyMatrices(z,m),U=H.geometry.vertices,0!==U.length))for(X=t(),X.positionScreen.copy(U[0]).applyMatrix4(B),b=H.type===THREE.LinePieces?2:1,W=1,j=U.length;W<j;W++)X=t(),X.positionScreen.copy(U[W]).applyMatrix4(B),0<(W+1)%b||(K=v[l-2],O.copy(X.positionScreen),I.copy(K.positionScreen),!0===o(O,I)&&(O.multiplyScalar(1/O.w),I.multiplyScalar(1/I.w),f=r(),f.id=H.id,f.v1.positionScreen.copy(O),f.v2.positionScreen.copy(I),f.z=Math.max(O.z,I.z),f.material=H.material,H.material.vertexColors===THREE.VertexColors&&(f.vertexColors[0].copy(H.geometry.colors[W]),f.vertexColors[1].copy(H.geometry.colors[W-1])),M.elements.push(f)))}else H instanceof THREE.Sprite&&(P.set(m.elements[12],m.elements[13],m.elements[14],1),P.applyMatrix4(z),_=1/P.w,P.z*=_,-1<=P.z&&1>=P.z&&(p=i(),p.id=H.id,p.x=P.x*_,p.y=P.y*_,p.z=P.z,p.object=H,p.rotation=H.rotation,p.scale.x=H.scale.x*Math.abs(p.x-(P.x+y.projectionMatrix.elements[0])/(P.w+y.projectionMatrix.elements[12])),p.scale.y=H.scale.y*Math.abs(p.y-(P.y+y.projectionMatrix.elements[5])/(P.w+y.projectionMatrix.elements[13])),p.material=H.material,M.elements.push(p)))}return!0===x&&M.elements.sort(n),M}},THREE.Face3=function(t,e,r,i,n,o){this.a=t,this.b=e,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var t=new THREE.Face3(this.a,this.b,this.c);t.normal.copy(this.normal),t.color.copy(this.color),t.materialIndex=this.materialIndex;for(var e=0,r=this.vertexNormals.length;e<r;e++)t.vertexNormals[e]=this.vertexNormals[e].clone();for(e=0,r=this.vertexColors.length;e<r;e++)t.vertexColors[e]=this.vertexColors[e].clone();for(e=0,r=this.vertexTangents.length;e<r;e++)t.vertexTangents[e]=this.vertexTangents[e].clone();return t}},THREE.Face4=function(t,e,r,i,n,o,a){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(t,e,r,n,o,a)},THREE.BufferAttribute=function(t,e){this.array=t,this.itemSize=e},THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},set:function(t){return this.array.set(t),this},setX:function(t,e){return this.array[t*this.itemSize]=e,this},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},setXY:function(t,e,r){return t*=this.itemSize,this.array[t]=e,this.array[t+1]=r,this},setXYZ:function(t,e,r,i){return t*=this.itemSize,this.array[t]=e,this.array[t+1]=r,this.array[t+2]=i,this},setXYZW:function(t,e,r,i,n){return t*=this.itemSize,this.array[t]=e,this.array[t+1]=r,this.array[t+2]=i,this.array[t+3]=n,this}},THREE.Int8Attribute=function(t,e){return console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint8Attribute=function(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint8ClampedAttribute=function(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Int16Attribute=function(t,e){return console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint16Attribute=function(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Int32Attribute=function(t,e){return console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint32Attribute=function(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Float32Attribute=function(t,e){return console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Float64Attribute=function(t,e){return console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.offsets=this.drawcalls=[],this.boundingSphere=this.boundingBox=null},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(t,e,r){!1==e instanceof THREE.BufferAttribute?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.attributes[t]={array:e,itemSize:r}):this.attributes[t]=e},getAttribute:function(t){return this.attributes[t]},addDrawCall:function(t,e,r){this.drawcalls.push({start:t,count:e,index:void 0!==r?r:0})},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToVector3Array(e.array),e.needsUpdate=!0),e=this.attributes.normal,void 0!==e&&((new THREE.Matrix3).getNormalMatrix(t).applyToVector3Array(e.array),e.needsUpdate=!0)},fromGeometry:function(t,e){e=e||{vertexColors:THREE.NoColors};var r=t.vertices,i=t.faces,n=t.faceVertexUvs,o=e.vertexColors,a=0<n[0].length,s=3==i[0].vertexNormals.length,h=new Float32Array(9*i.length);this.addAttribute("position",new THREE.BufferAttribute(h,3));var l=new Float32Array(9*i.length);if(this.addAttribute("normal",new THREE.BufferAttribute(l,3)),o!==THREE.NoColors){var c=new Float32Array(9*i.length);this.addAttribute("color",new THREE.BufferAttribute(c,3))}if(!0===a){var u=new Float32Array(6*i.length);this.addAttribute("uvs",new THREE.BufferAttribute(u,2))}for(var f=0,E=0,p=0;f<i.length;f++,E+=6,p+=9){var d=i[f],m=r[d.a],g=r[d.b],T=r[d.c];h[p]=m.x,h[p+1]=m.y,h[p+2]=m.z,h[p+3]=g.x,h[p+4]=g.y,h[p+5]=g.z,h[p+6]=T.x,h[p+7]=T.y,h[p+8]=T.z,!0===s?(m=d.vertexNormals[0],g=d.vertexNormals[1],T=d.vertexNormals[2],l[p]=m.x,l[p+1]=m.y,l[p+2]=m.z,l[p+3]=g.x,l[p+4]=g.y,l[p+5]=g.z,l[p+6]=T.x,l[p+7]=T.y,l[p+8]=T.z):(m=d.normal,l[p]=m.x,l[p+1]=m.y,l[p+2]=m.z,l[p+3]=m.x,l[p+4]=m.y,l[p+5]=m.z,l[p+6]=m.x,l[p+7]=m.y,l[p+8]=m.z),o===THREE.FaceColors?(d=d.color,c[p]=d.r,c[p+1]=d.g,c[p+2]=d.b,c[p+3]=d.r,c[p+4]=d.g,c[p+5]=d.b,c[p+6]=d.r,c[p+7]=d.g,c[p+8]=d.b):o===THREE.VertexColors&&(m=d.vertexColors[0],g=d.vertexColors[1],d=d.vertexColors[2],c[p]=m.r,c[p+1]=m.g,c[p+2]=m.b,c[p+3]=g.r,c[p+4]=g.g,c[p+5]=g.b,c[p+6]=d.r,c[p+7]=d.g,c[p+8]=d.b),!0===a&&(d=n[0][f][0],m=n[0][f][1],g=n[0][f][2],u[E]=d.x,u[E+1]=d.y,u[E+2]=m.x,u[E+3]=m.y,u[E+4]=g.x,u[E+5]=g.y)}return this.computeBoundingSphere(),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var t=this.attributes.position.array;if(t){var e=this.boundingBox;3<=t.length&&(e.min.x=e.max.x=t[0],e.min.y=e.max.y=t[1],e.min.z=e.max.z=t[2]);for(var r=3,i=t.length;r<i;r+=3){var n=t[r],o=t[r+1],a=t[r+2];n<e.min.x?e.min.x=n:n>e.max.x&&(e.max.x=n),o<e.min.y?e.min.y=o:o>e.max.y&&(e.max.y=o),a<e.min.z?e.min.z=a:a>e.max.z&&(e.max.z=a)}}void 0!==t&&0!==t.length||(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')},computeBoundingSphere:function(){var t=new THREE.Box3,e=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var r=this.attributes.position.array;if(r){t.makeEmpty();for(var i=this.boundingSphere.center,n=0,o=r.length;n<o;n+=3)e.set(r[n],r[n+1],r[n+2]),t.expandByPoint(e);t.center(i);for(var a=0,n=0,o=r.length;n<o;n+=3)e.set(r[n],r[n+1],r[n+2]),a=Math.max(a,i.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){if(this.attributes.position){var t,e,r,i;if(t=this.attributes.position.array.length,void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(t)};else for(t=0,e=this.attributes.normal.array.length;t<e;t++)this.attributes.normal.array[t]=0;var n,o,a,s,h,l,c=this.attributes.position.array,u=this.attributes.normal.array,f=new THREE.Vector3,E=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3;if(this.attributes.index){var g=this.attributes.index.array,T=0<this.offsets.length?this.offsets:[{start:0,count:g.length,index:0}];for(r=0,i=T.length;r<i;++r){e=T[r].start,n=T[r].count;var v=T[r].index;for(t=e,e+=n;t<e;t+=3)n=v+g[t],o=v+g[t+1],a=v+g[t+2],s=c[3*n],h=c[3*n+1],l=c[3*n+2],f.set(s,h,l),s=c[3*o],h=c[3*o+1],l=c[3*o+2],E.set(s,h,l),s=c[3*a],h=c[3*a+1],l=c[3*a+2],p.set(s,h,l),d.subVectors(p,E),m.subVectors(f,E),d.cross(m),u[3*n]+=d.x,u[3*n+1]+=d.y,u[3*n+2]+=d.z,u[3*o]+=d.x,u[3*o+1]+=d.y,u[3*o+2]+=d.z,u[3*a]+=d.x,u[3*a+1]+=d.y,u[3*a+2]+=d.z}}else for(t=0,e=c.length;t<e;t+=9)s=c[t],h=c[t+1],l=c[t+2],f.set(s,h,l),s=c[t+3],h=c[t+4],l=c[t+5],E.set(s,h,l),s=c[t+6],h=c[t+7],l=c[t+8],p.set(s,h,l),d.subVectors(p,E),m.subVectors(f,E),d.cross(m),u[t]=d.x,u[t+1]=d.y,u[t+2]=d.z,u[t+3]=d.x,u[t+4]=d.y,u[t+5]=d.z,u[t+6]=d.x,u[t+7]=d.y,u[t+8]=d.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeTangents:function(){function t(t,e,r){u=i[3*t],f=i[3*t+1],E=i[3*t+2],p=i[3*e],d=i[3*e+1],m=i[3*e+2],g=i[3*r],T=i[3*r+1],v=i[3*r+2],y=o[2*t],R=o[2*t+1],x=o[2*e],H=o[2*e+1],_=o[2*r],b=o[2*r+1],w=p-u,M=g-u,S=d-f,C=T-f,A=m-E,L=v-E,P=x-y,F=_-y,D=H-R,U=b-R,V=1/(P*U-F*D),I.set((U*w-D*M)*V,(U*S-D*C)*V,(U*A-D*L)*V),G.set((P*M-F*w)*V,(P*C-F*S)*V,(P*L-F*A)*V),h[t].add(I),h[e].add(I),h[r].add(I),l[t].add(G),l[e].add(G),l[r].add(G)}function e(t){Q.x=n[3*t],Q.y=n[3*t+1],Q.z=n[3*t+2],J.copy(Q),Y=h[t],K.copy(Y),K.sub(Q.multiplyScalar(Q.dot(Y))).normalize(),Z.crossVectors(J,Y),q=Z.dot(l[t]),X=0>q?-1:1,s[4*t]=K.x,s[4*t+1]=K.y,s[4*t+2]=K.z,s[4*t+3]=X}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var r=this.attributes.index.array,i=this.attributes.position.array,n=this.attributes.normal.array,o=this.attributes.uv.array,a=i.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent={itemSize:4,array:new Float32Array(4*a)});for(var s=this.attributes.tangent.array,h=[],l=[],c=0;c<a;c++)h[c]=new THREE.Vector3,l[c]=new THREE.Vector3;var u,f,E,p,d,m,g,T,v,y,R,x,H,_,b,w,M,S,C,A,L,P,F,D,U,V,z,B,k,N,O,I=new THREE.Vector3,G=new THREE.Vector3,W=this.offsets,c=0;for(B=W.length;c<B;++c){z=W[c].start,k=W[c].count;var j=W[c].index,a=z;for(z+=k;a<z;a+=3)k=j+r[a],N=j+r[a+1],O=j+r[a+2],t(k,N,O)}var X,Y,q,K=new THREE.Vector3,Z=new THREE.Vector3,Q=new THREE.Vector3,J=new THREE.Vector3,c=0;for(B=W.length;c<B;++c)for(z=W[c].start,k=W[c].count,j=W[c].index,a=z,z+=k;a<z;a+=3)k=j+r[a],N=j+r[a+1],O=j+r[a+2],e(k),e(N),e(O)}},computeOffsets:function(t){var e=t;void 0===t&&(e=65535),Date.now(),t=this.attributes.index.array;for(var r=this.attributes.position.array,i=t.length/3,n=new Uint16Array(t.length),o=0,a=0,s=[{start:0,count:0,index:0}],h=s[0],l=0,c=0,u=new Int32Array(6),f=new Int32Array(r.length),E=new Int32Array(r.length),p=0;p<r.length;p++)f[p]=-1,E[p]=-1;for(r=0;r<i;r++){for(var d=c=0;3>d;d++)p=t[3*r+d],-1==f[p]?(u[2*d]=p,u[2*d+1]=-1,c++):f[p]<h.index?(u[2*d]=p,u[2*d+1]=-1,l++):(u[2*d]=p,u[2*d+1]=f[p]);if(a+c>h.index+e)for(h={start:o,count:0,index:a},s.push(h),c=0;6>c;c+=2)d=u[c+1],-1<d&&d<h.index&&(u[c+1]=-1);for(c=0;6>c;c+=2)p=u[c],d=u[c+1],-1===d&&(d=a++),f[p]=d,E[d]=p,n[o++]=d-h.index,h.count++}return this.reorderBuffers(n,E,a),this.offsets=s},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var t,e,r,i=this.attributes.normal.array,n=0,o=i.length;n<o;n+=3)t=i[n],e=i[n+1],r=i[n+2],t=1/Math.sqrt(t*t+e*e+r*r),i[n]*=t,i[n+1]*=t,i[n+2]*=t},reorderBuffers:function(t,e,r){var i,n={},o=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];
for(i in this.attributes)if("index"!=i)for(var a=this.attributes[i].array,s=0,h=o.length;s<h;s++){var l=o[s];if(a instanceof l){n[i]=new l(this.attributes[i].itemSize*r);break}}for(o=0;o<r;o++)for(i in a=e[o],this.attributes)if("index"!=i)for(var s=this.attributes[i].array,h=this.attributes[i].itemSize,l=n[i],c=0;c<h;c++)l[o*h+c]=s[a*h+c];this.attributes.index.array=t;for(i in this.attributes)"index"!=i&&(this.attributes[i].array=n[i],this.attributes[i].numItems=this.attributes[i].itemSize*r)},clone:function(){var t,e=new THREE.BufferGeometry,r=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(t in this.attributes){for(var i=this.attributes[t],n=i.array,o={itemSize:i.itemSize,array:null},i=0,a=r.length;i<a;i++){var s=r[i];if(n instanceof s){o.array=new s(n);break}}e.attributes[t]=o}for(i=0,a=this.offsets.length;i<a;i++)r=this.offsets[i],e.offsets.push({start:r.start,index:r.index,count:r.count});return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.dynamic=!0,this.groupsNeedUpdate=this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(t){for(var e=(new THREE.Matrix3).getNormalMatrix(t),r=0,i=this.vertices.length;r<i;r++)this.vertices[r].applyMatrix4(t);for(r=0,i=this.faces.length;r<i;r++){t=this.faces[r],t.normal.applyMatrix3(e).normalize();for(var n=0,o=t.vertexNormals.length;n<o;n++)t.vertexNormals[n].applyMatrix3(e).normalize()}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},center:function(){this.computeBoundingBox();var t=new THREE.Vector3;return t.addVectors(this.boundingBox.min,this.boundingBox.max),t.multiplyScalar(-.5),this.applyMatrix((new THREE.Matrix4).makeTranslation(t.x,t.y,t.z)),this.computeBoundingBox(),t},computeFaceNormals:function(){for(var t=new THREE.Vector3,e=new THREE.Vector3,r=0,i=this.faces.length;r<i;r++){var n=this.faces[r],o=this.vertices[n.a],a=this.vertices[n.b];t.subVectors(this.vertices[n.c],a),e.subVectors(o,a),t.cross(e),t.normalize(),n.normal.copy(t)}},computeVertexNormals:function(t){var e,r,i;for(i=Array(this.vertices.length),e=0,r=this.vertices.length;e<r;e++)i[e]=new THREE.Vector3;if(t){var n,o,a,s=new THREE.Vector3,h=new THREE.Vector3;for(new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,t=0,e=this.faces.length;t<e;t++)r=this.faces[t],n=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c],s.subVectors(a,o),h.subVectors(n,o),s.cross(h),i[r.a].add(s),i[r.b].add(s),i[r.c].add(s)}else for(t=0,e=this.faces.length;t<e;t++)r=this.faces[t],i[r.a].add(r.normal),i[r.b].add(r.normal),i[r.c].add(r.normal);for(e=0,r=this.vertices.length;e<r;e++)i[e].normalize();for(t=0,e=this.faces.length;t<e;t++)r=this.faces[t],r.vertexNormals[0]=i[r.a].clone(),r.vertexNormals[1]=i[r.b].clone(),r.vertexNormals[2]=i[r.c].clone()},computeMorphNormals:function(){var t,e,r,i,n;for(r=0,i=this.faces.length;r<i;r++)for(n=this.faces[r],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),t=0,e=n.vertexNormals.length;t<e;t++)n.__originalVertexNormals[t]?n.__originalVertexNormals[t].copy(n.vertexNormals[t]):n.__originalVertexNormals[t]=n.vertexNormals[t].clone();var o=new THREE.Geometry;for(o.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[],n=this.morphNormals[t].faceNormals;var a,s,h=this.morphNormals[t].vertexNormals;for(r=0,i=this.faces.length;r<i;r++)a=new THREE.Vector3,s={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(a),h.push(s)}for(h=this.morphNormals[t],o.vertices=this.morphTargets[t].vertices,o.computeFaceNormals(),o.computeVertexNormals(),r=0,i=this.faces.length;r<i;r++)n=this.faces[r],a=h.faceNormals[r],s=h.vertexNormals[r],a.copy(n.normal),s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2])}for(r=0,i=this.faces.length;r<i;r++)n=this.faces[r],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){var t,e,r,i,n,o,a,s,h,l,c,u,f,E,p,d,m,g=[],T=[];r=new THREE.Vector3;var v=new THREE.Vector3,y=new THREE.Vector3,R=new THREE.Vector3,x=new THREE.Vector3;for(t=0,e=this.vertices.length;t<e;t++)g[t]=new THREE.Vector3,T[t]=new THREE.Vector3;for(t=0,e=this.faces.length;t<e;t++)n=this.faces[t],o=this.faceVertexUvs[0][t],i=n.a,m=n.b,n=n.c,a=this.vertices[i],s=this.vertices[m],h=this.vertices[n],l=o[0],c=o[1],u=o[2],o=s.x-a.x,f=h.x-a.x,E=s.y-a.y,p=h.y-a.y,s=s.z-a.z,a=h.z-a.z,h=c.x-l.x,d=u.x-l.x,c=c.y-l.y,l=u.y-l.y,u=1/(h*l-d*c),r.set((l*o-c*f)*u,(l*E-c*p)*u,(l*s-c*a)*u),v.set((h*f-d*o)*u,(h*p-d*E)*u,(h*a-d*s)*u),g[i].add(r),g[m].add(r),g[n].add(r),T[i].add(v),T[m].add(v),T[n].add(v);for(v=["a","b","c","d"],t=0,e=this.faces.length;t<e;t++)for(n=this.faces[t],r=0;r<Math.min(n.vertexNormals.length,3);r++)x.copy(n.vertexNormals[r]),i=n[v[r]],m=g[i],y.copy(m),y.sub(x.multiplyScalar(x.dot(m))).normalize(),R.crossVectors(n.vertexNormals[r],m),i=R.dot(T[i]),i=0>i?-1:1,n.vertexTangents[r]=new THREE.Vector4(y.x,y.y,y.z,i);this.hasTangents=!0},computeLineDistances:function(){for(var t=0,e=this.vertices,r=0,i=e.length;r<i;r++)0<r&&(t+=e[r].distanceTo(e[r-1])),this.lineDistances[r]=t},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,r){if(!1==t instanceof THREE.Geometry)console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);else{var i,n=this.vertices.length,o=this.vertices,a=t.vertices,s=this.faces,h=t.faces,l=this.faceVertexUvs[0];t=t.faceVertexUvs[0],void 0===r&&(r=0),void 0!==e&&(i=(new THREE.Matrix3).getNormalMatrix(e));for(var c=0,u=a.length;c<u;c++){var f=a[c].clone();void 0!==e&&f.applyMatrix4(e),o.push(f)}for(c=0,u=h.length;c<u;c++){var E,a=h[c],p=a.vertexNormals,d=a.vertexColors,f=new THREE.Face3(a.a+n,a.b+n,a.c+n);for(f.normal.copy(a.normal),void 0!==i&&f.normal.applyMatrix3(i).normalize(),e=0,o=p.length;e<o;e++)E=p[e].clone(),void 0!==i&&E.applyMatrix3(i).normalize(),f.vertexNormals.push(E);for(f.color.copy(a.color),e=0,o=d.length;e<o;e++)E=d[e],f.vertexColors.push(E.clone());f.materialIndex=a.materialIndex+r,s.push(f)}for(c=0,u=t.length;c<u;c++)if(r=t[c],i=[],void 0!==r){for(e=0,o=r.length;e<o;e++)i.push(new THREE.Vector2(r[e].x,r[e].y));l.push(i)}}},mergeVertices:function(){var t,e,r,i={},n=[],o=[],a=Math.pow(10,4);for(e=0,r=this.vertices.length;e<r;e++)t=this.vertices[e],t=Math.round(t.x*a)+"_"+Math.round(t.y*a)+"_"+Math.round(t.z*a),void 0===i[t]?(i[t]=e,n.push(this.vertices[e]),o[e]=n.length-1):o[e]=o[i[t]];for(i=[],e=0,r=this.faces.length;e<r;e++)for(a=this.faces[e],a.a=o[a.a],a.b=o[a.b],a.c=o[a.c],a=[a.a,a.b,a.c],t=0;3>t;t++)if(a[t]==a[(t+1)%3]){i.push(e);break}for(e=i.length-1;0<=e;e--)for(a=i[e],this.faces.splice(a,1),o=0,r=this.faceVertexUvs.length;o<r;o++)this.faceVertexUvs[o].splice(a,1);return e=this.vertices.length-n.length,this.vertices=n,e},makeGroups:function(){var t=0;return function(e,r){var i,n,o,a,s,h={},l=this.morphTargets.length,c=this.morphNormals.length;for(this.geometryGroups={},this.geometryGroupsList=[],i=0,n=this.faces.length;i<n;i++)o=this.faces[i],o=e?o.materialIndex:0,o in h||(h[o]={hash:o,counter:0}),a=h[o].hash+"_"+h[o].counter,a in this.geometryGroups||(s={id:t++,faces3:[],materialIndex:o,vertices:0,numMorphTargets:l,numMorphNormals:c},this.geometryGroups[a]=s,this.geometryGroupsList.push(s)),this.geometryGroups[a].vertices+3>r&&(h[o].counter+=1,a=h[o].hash+"_"+h[o].counter,a in this.geometryGroups||(s={id:t++,faces3:[],materialIndex:o,vertices:0,numMorphTargets:l,numMorphNormals:c},this.geometryGroups[a]=s,this.geometryGroupsList.push(s))),this.geometryGroups[a].faces3.push(i),this.geometryGroups[a].vertices+=3}}(),clone:function(){for(var t=new THREE.Geometry,e=this.vertices,r=0,i=e.length;r<i;r++)t.vertices.push(e[r].clone());for(e=this.faces,r=0,i=e.length;r<i;r++)t.faces.push(e[r].clone());for(e=this.faceVertexUvs[0],r=0,i=e.length;r<i;r++){for(var n=e[r],o=[],a=0,s=n.length;a<s;a++)o.push(new THREE.Vector2(n[a].x,n[a].y));t.faceVertexUvs[0].push(o)}return t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var t=new THREE.Matrix4;return function(e){t.lookAt(this.position,e,this.up),this.quaternion.setFromRotationMatrix(t)}}(),THREE.Camera.prototype.clone=function(t){return void 0===t&&(t=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,t),t.matrixWorldInverse.copy(this.matrixWorldInverse),t.projectionMatrix.copy(this.projectionMatrix),t},THREE.CubeCamera=function(t,e,r){THREE.Object3D.call(this);var i=new THREE.PerspectiveCamera(90,1,t,e);i.up.set(0,-1,0),i.lookAt(new THREE.Vector3(1,0,0)),this.add(i);var n=new THREE.PerspectiveCamera(90,1,t,e);n.up.set(0,-1,0),n.lookAt(new THREE.Vector3((-1),0,0)),this.add(n);var o=new THREE.PerspectiveCamera(90,1,t,e);o.up.set(0,0,1),o.lookAt(new THREE.Vector3(0,1,0)),this.add(o);var a=new THREE.PerspectiveCamera(90,1,t,e);a.up.set(0,0,-1),a.lookAt(new THREE.Vector3(0,(-1),0)),this.add(a);var s=new THREE.PerspectiveCamera(90,1,t,e);s.up.set(0,-1,0),s.lookAt(new THREE.Vector3(0,0,1)),this.add(s);var h=new THREE.PerspectiveCamera(90,1,t,e);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,(-1))),this.add(h),this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(t,e){var r=this.renderTarget,l=r.generateMipmaps;r.generateMipmaps=!1,r.activeCubeFace=0,t.render(e,i,r),r.activeCubeFace=1,t.render(e,n,r),r.activeCubeFace=2,t.render(e,o,r),r.activeCubeFace=3,t.render(e,a,r),r.activeCubeFace=4,t.render(e,s,r),r.generateMipmaps=l,r.activeCubeFace=5,t.render(e,h,r)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.OrthographicCamera=function(t,e,r,i,n,o){THREE.Camera.call(this),this.left=t,this.right=e,this.top=r,this.bottom=i,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var t=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,t),t.left=this.left,t.right=this.right,t.top=this.top,t.bottom=this.bottom,t.near=this.near,t.far=this.far,t},THREE.PerspectiveCamera=function(t,e,r,i){THREE.Camera.call(this),this.fov=void 0!==t?t:50,this.aspect=void 0!==e?e:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(t,e){void 0===e&&(e=24),this.fov=2*THREE.Math.radToDeg(Math.atan(e/(2*t))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(t,e,r,i,n,o){this.fullWidth=t,this.fullHeight=e,this.x=r,this.y=i,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var t=this.fullWidth/this.fullHeight,e=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,r=-e,i=t*r,t=Math.abs(t*e-i),r=Math.abs(e-r);this.projectionMatrix.makeFrustum(i+this.x*t/this.fullWidth,i+(this.x+this.width)*t/this.fullWidth,e-(this.y+this.height)*r/this.fullHeight,e-this.y*r/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var t=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,t),t.fov=this.fov,t.aspect=this.aspect,t.near=this.near,t.far=this.far,t},THREE.Light=function(t){THREE.Object3D.call(this),this.color=new THREE.Color(t)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(t){return void 0===t&&(t=new THREE.Light),THREE.Object3D.prototype.clone.call(this,t),t.color.copy(this.color),t},THREE.AmbientLight=function(t){THREE.Light.call(this,t)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var t=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,t),t},THREE.AreaLight=function(t,e){THREE.Light.call(this,t),this.normal=new THREE.Vector3(0,(-1),0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==e?e:1,this.height=this.width=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(t,e){THREE.Light.call(this,t),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==e?e:1,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,(-1e3)),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var t=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,t),t.target=this.target.clone(),t.intensity=this.intensity,t.castShadow=this.castShadow,t.onlyShadow=this.onlyShadow,t.shadowCameraNear=this.shadowCameraNear,t.shadowCameraFar=this.shadowCameraFar,t.shadowCameraLeft=this.shadowCameraLeft,t.shadowCameraRight=this.shadowCameraRight,t.shadowCameraTop=this.shadowCameraTop,t.shadowCameraBottom=this.shadowCameraBottom,t.shadowCameraVisible=this.shadowCameraVisible,t.shadowBias=this.shadowBias,t.shadowDarkness=this.shadowDarkness,t.shadowMapWidth=this.shadowMapWidth,t.shadowMapHeight=this.shadowMapHeight,t.shadowCascade=this.shadowCascade,t.shadowCascadeOffset.copy(this.shadowCascadeOffset),t.shadowCascadeCount=this.shadowCascadeCount,t.shadowCascadeBias=this.shadowCascadeBias.slice(0),t.shadowCascadeWidth=this.shadowCascadeWidth.slice(0),t.shadowCascadeHeight=this.shadowCascadeHeight.slice(0),t.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0),t.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0),t},THREE.HemisphereLight=function(t,e,r){THREE.Light.call(this,t),this.position.set(0,100,0),this.groundColor=new THREE.Color(e),this.intensity=void 0!==r?r:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var t=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,t),t.groundColor.copy(this.groundColor),t.intensity=this.intensity,t},THREE.PointLight=function(t,e,r){THREE.Light.call(this,t),this.intensity=void 0!==e?e:1,this.distance=void 0!==r?r:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var t=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,t),t.intensity=this.intensity,t.distance=this.distance,t},THREE.SpotLight=function(t,e,r,i,n){THREE.Light.call(this,t),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==e?e:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/3,this.exponent=void 0!==n?n:10,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var t=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,t),t.target=this.target.clone(),t.intensity=this.intensity,t.distance=this.distance,t.angle=this.angle,t.exponent=this.exponent,t.castShadow=this.castShadow,t.onlyShadow=this.onlyShadow,t.shadowCameraNear=this.shadowCameraNear,t.shadowCameraFar=this.shadowCameraFar,t.shadowCameraFov=this.shadowCameraFov,t.shadowCameraVisible=this.shadowCameraVisible,t.shadowBias=this.shadowBias,t.shadowDarkness=this.shadowDarkness,t.shadowMapWidth=this.shadowMapWidth,t.shadowMapHeight=this.shadowMapHeight,t},THREE.Cache=function(){this.files={}},THREE.Cache.prototype={constructor:THREE.Cache,add:function(t,e){this.files[t]=e},get:function(t){return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}},THREE.Loader=function(t){this.statusDomElement=(this.showStatus=t)?THREE.Loader.prototype.addStatusElement():null,this.imageLoader=new THREE.ImageLoader,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var t=document.createElement("div");return t.style.position="absolute",t.style.right="0px",t.style.top="0px",t.style.fontSize="0.8em",t.style.textAlign="left",t.style.background="rgba(0,0,0,0.25)",t.style.color="#fff",t.style.width="120px",t.style.padding="0.5em 0.5em 0.5em 0.5em",t.style.zIndex=1e3,t.innerHTML="Loading ...",t},updateProgress:function(t){var e="Loaded ",e=t.total?e+((100*t.loaded/t.total).toFixed(0)+"%"):e+((t.loaded/1024).toFixed(2)+" KB");this.statusDomElement.innerHTML=e},extractUrlBase:function(t){return t=t.split("/"),1===t.length?"./":(t.pop(),t.join("/")+"/")},initMaterials:function(t,e){for(var r=[],i=0;i<t.length;++i)r[i]=this.createMaterial(t[i],e);return r},needsTangents:function(t){for(var e=0,r=t.length;e<r;e++)if(t[e]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(t,e){function r(t){return t=Math.log(t)/Math.LN2,Math.pow(2,Math.round(t))}function i(t,i,n,a,s,h,l){var c,u=e+n,f=THREE.Loader.Handlers.get(u);null!==f?c=f.load(u):(c=new THREE.Texture,f=o.imageLoader,f.crossOrigin=o.crossOrigin,f.load(u,function(t){if(!1===THREE.Math.isPowerOfTwo(t.width)||!1===THREE.Math.isPowerOfTwo(t.height)){var e=r(t.width),i=r(t.height),n=document.createElement("canvas");n.width=e,n.height=i,n.getContext("2d").drawImage(t,0,0,e,i),c.image=n}else c.image=t;c.needsUpdate=!0})),c.sourceFile=n,a&&(c.repeat.set(a[0],a[1]),1!==a[0]&&(c.wrapS=THREE.RepeatWrapping),1!==a[1]&&(c.wrapT=THREE.RepeatWrapping)),s&&c.offset.set(s[0],s[1]),h&&(n={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==n[h[0]]&&(c.wrapS=n[h[0]]),void 0!==n[h[1]]&&(c.wrapT=n[h[1]])),l&&(c.anisotropy=l),t[i]=c}function n(t){return(255*t[0]<<16)+(255*t[1]<<8)+255*t[2]}var o=this,a="MeshLambertMaterial",s={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(t.shading){var h=t.shading.toLowerCase();"phong"===h?a="MeshPhongMaterial":"basic"===h&&(a="MeshBasicMaterial")}return void 0!==t.blending&&void 0!==THREE[t.blending]&&(s.blending=THREE[t.blending]),(void 0!==t.transparent||1>t.opacity)&&(s.transparent=t.transparent),void 0!==t.depthTest&&(s.depthTest=t.depthTest),void 0!==t.depthWrite&&(s.depthWrite=t.depthWrite),void 0!==t.visible&&(s.visible=t.visible),void 0!==t.flipSided&&(s.side=THREE.BackSide),void 0!==t.doubleSided&&(s.side=THREE.DoubleSide),void 0!==t.wireframe&&(s.wireframe=t.wireframe),void 0!==t.vertexColors&&("face"===t.vertexColors?s.vertexColors=THREE.FaceColors:t.vertexColors&&(s.vertexColors=THREE.VertexColors)),t.colorDiffuse?s.color=n(t.colorDiffuse):t.DbgColor&&(s.color=t.DbgColor),t.colorSpecular&&(s.specular=n(t.colorSpecular)),t.colorAmbient&&(s.ambient=n(t.colorAmbient)),t.colorEmissive&&(s.emissive=n(t.colorEmissive)),t.transparency&&(s.opacity=t.transparency),t.specularCoef&&(s.shininess=t.specularCoef),t.mapDiffuse&&e&&i(s,"map",t.mapDiffuse,t.mapDiffuseRepeat,t.mapDiffuseOffset,t.mapDiffuseWrap,t.mapDiffuseAnisotropy),t.mapLight&&e&&i(s,"lightMap",t.mapLight,t.mapLightRepeat,t.mapLightOffset,t.mapLightWrap,t.mapLightAnisotropy),t.mapBump&&e&&i(s,"bumpMap",t.mapBump,t.mapBumpRepeat,t.mapBumpOffset,t.mapBumpWrap,t.mapBumpAnisotropy),t.mapNormal&&e&&i(s,"normalMap",t.mapNormal,t.mapNormalRepeat,t.mapNormalOffset,t.mapNormalWrap,t.mapNormalAnisotropy),t.mapSpecular&&e&&i(s,"specularMap",t.mapSpecular,t.mapSpecularRepeat,t.mapSpecularOffset,t.mapSpecularWrap,t.mapSpecularAnisotropy),t.mapAlpha&&e&&i(s,"alphaMap",t.mapAlpha,t.mapAlphaRepeat,t.mapAlphaOffset,t.mapAlphaWrap,t.mapAlphaAnisotropy),t.mapBumpScale&&(s.bumpScale=t.mapBumpScale),t.mapNormal?(a=THREE.ShaderLib.normalmap,h=THREE.UniformsUtils.clone(a.uniforms),h.tNormal.value=s.normalMap,t.mapNormalFactor&&h.uNormalScale.value.set(t.mapNormalFactor,t.mapNormalFactor),s.map&&(h.tDiffuse.value=s.map,h.enableDiffuse.value=!0),s.specularMap&&(h.tSpecular.value=s.specularMap,h.enableSpecular.value=!0),s.lightMap&&(h.tAO.value=s.lightMap,h.enableAO.value=!0),h.diffuse.value.setHex(s.color),h.specular.value.setHex(s.specular),h.ambient.value.setHex(s.ambient),h.shininess.value=s.shininess,void 0!==s.opacity&&(h.opacity.value=s.opacity),a=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:h,lights:!0,fog:!0}),s.transparent&&(a.transparent=!0)):a=new THREE[a](s),void 0!==t.DbgName&&(a.name=t.DbgName),a}},THREE.Loader.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=0,r=this.handlers.length;e<r;e+=2){var i=this.handlers[e+1];if(this.handlers[e].test(t))return i}return null}},THREE.XHRLoader=function(t){this.cache=new THREE.Cache,this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(t,e,r,i){var n=this,o=n.cache.get(t);void 0!==o?e&&e(o):(o=new XMLHttpRequest,o.open("GET",t,!0),o.addEventListener("load",function(r){n.cache.add(t,this.response),e&&e(this.response),n.manager.itemEnd(t)},!1),void 0!==r&&o.addEventListener("progress",function(t){r(t)},!1),void 0!==i&&o.addEventListener("error",function(t){i(t)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(o.responseType=this.responseType),o.send(null),n.manager.itemStart(t))},setResponseType:function(t){this.responseType=t},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.ImageLoader=function(t){this.cache=new THREE.Cache,this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(t,e,r,i){var n=this,o=n.cache.get(t);return void 0===o?(o=document.createElement("img"),void 0!==e&&o.addEventListener("load",function(r){n.cache.add(t,this),e(this),n.manager.itemEnd(t)},!1),void 0!==r&&o.addEventListener("progress",function(t){r(t)},!1),void 0!==i&&o.addEventListener("error",function(t){i(t)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),o.src=t,n.manager.itemStart(t),o):void e(o)},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.JSONLoader=function(t){THREE.Loader.call(this,t),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(t,e,r){r=r&&"string"==typeof r?r:this.extractUrlBase(t),this.onLoadStart(),this.loadAjaxJSON(this,t,e,r)},THREE.JSONLoader.prototype.loadAjaxJSON=function(t,e,r,i,n){var o=new XMLHttpRequest,a=0;o.onreadystatechange=function(){if(o.readyState===o.DONE)if(200===o.status||0===o.status){if(o.responseText){var s=JSON.parse(o.responseText);if(void 0!==s.metadata&&"scene"===s.metadata.type)return void console.error('THREE.JSONLoader: "'+e+'" seems to be a Scene. Use THREE.SceneLoader instead.');s=t.parse(s,i),r(s.geometry,s.materials)}else console.error('THREE.JSONLoader: "'+e+'" seems to be unreachable or the file is empty.');t.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load \""+e+'" ('+o.status+")");else o.readyState===o.LOADING?n&&(0===a&&(a=o.getResponseHeader("Content-Length")),n({total:a,loaded:o.responseText.length})):o.readyState===o.HEADERS_RECEIVED&&void 0!==n&&(a=o.getResponseHeader("Content-Length"))},o.open("GET",e,!0),o.withCredentials=this.withCredentials,o.send(null)},THREE.JSONLoader.prototype.parse=function(t,e){var r=new THREE.Geometry,i=void 0!==t.scale?1/t.scale:1;return function(e){var i,n,o,a,s,h,l,c,u,f,E,p,d,m=t.faces;h=t.vertices;var g=t.normals,T=t.colors,v=0;if(void 0!==t.uvs){for(i=0;i<t.uvs.length;i++)t.uvs[i].length&&v++;for(i=0;i<v;i++)r.faceVertexUvs[i]=[]}for(a=0,s=h.length;a<s;)i=new THREE.Vector3,i.x=h[a++]*e,i.y=h[a++]*e,i.z=h[a++]*e,r.vertices.push(i);for(a=0,s=m.length;a<s;)if(e=m[a++],u=1&e,o=2&e,i=8&e,l=16&e,f=32&e,h=64&e,e&=128,u){if(u=new THREE.Face3,u.a=m[a],u.b=m[a+1],u.c=m[a+3],E=new THREE.Face3,E.a=m[a+1],E.b=m[a+2],E.c=m[a+3],a+=4,o&&(o=m[a++],u.materialIndex=o,E.materialIndex=o),o=r.faces.length,i)for(i=0;i<v;i++)for(p=t.uvs[i],r.faceVertexUvs[i][o]=[],r.faceVertexUvs[i][o+1]=[],n=0;4>n;n++)c=m[a++],d=p[2*c],c=p[2*c+1],d=new THREE.Vector2(d,c),2!==n&&r.faceVertexUvs[i][o].push(d),0!==n&&r.faceVertexUvs[i][o+1].push(d);if(l&&(l=3*m[a++],u.normal.set(g[l++],g[l++],g[l]),E.normal.copy(u.normal)),f)for(i=0;4>i;i++)l=3*m[a++],f=new THREE.Vector3(g[l++],g[l++],g[l]),2!==i&&u.vertexNormals.push(f),0!==i&&E.vertexNormals.push(f);if(h&&(h=m[a++],h=T[h],u.color.setHex(h),E.color.setHex(h)),e)for(i=0;4>i;i++)h=m[a++],h=T[h],2!==i&&u.vertexColors.push(new THREE.Color(h)),0!==i&&E.vertexColors.push(new THREE.Color(h));r.faces.push(u),r.faces.push(E)}else{if(u=new THREE.Face3,u.a=m[a++],u.b=m[a++],u.c=m[a++],o&&(o=m[a++],u.materialIndex=o),o=r.faces.length,i)for(i=0;i<v;i++)for(p=t.uvs[i],r.faceVertexUvs[i][o]=[],n=0;3>n;n++)c=m[a++],d=p[2*c],c=p[2*c+1],d=new THREE.Vector2(d,c),r.faceVertexUvs[i][o].push(d);if(l&&(l=3*m[a++],u.normal.set(g[l++],g[l++],g[l])),f)for(i=0;3>i;i++)l=3*m[a++],f=new THREE.Vector3(g[l++],g[l++],g[l]),u.vertexNormals.push(f);if(h&&(h=m[a++],u.color.setHex(T[h])),e)for(i=0;3>i;i++)h=m[a++],u.vertexColors.push(new THREE.Color(T[h]));r.faces.push(u)}}(i),function(){var e=void 0!==t.influencesPerVertex?t.influencesPerVertex:2;if(t.skinWeights)for(var i=0,n=t.skinWeights.length;i<n;i+=e)r.skinWeights.push(new THREE.Vector4(t.skinWeights[i],1<e?t.skinWeights[i+1]:0,2<e?t.skinWeights[i+2]:0,3<e?t.skinWeights[i+3]:0));if(t.skinIndices)for(i=0,n=t.skinIndices.length;i<n;i+=e)r.skinIndices.push(new THREE.Vector4(t.skinIndices[i],1<e?t.skinIndices[i+1]:0,2<e?t.skinIndices[i+2]:0,3<e?t.skinIndices[i+3]:0));r.bones=t.bones,r.bones&&0<r.bones.length&&(r.skinWeights.length!==r.skinIndices.length||r.skinIndices.length!==r.vertices.length)&&console.warn("When skinning, number of vertices ("+r.vertices.length+"), skinIndices ("+r.skinIndices.length+"), and skinWeights ("+r.skinWeights.length+") should match."),r.animation=t.animation,r.animations=t.animations}(),function(e){if(void 0!==t.morphTargets){var i,n,o,a,s,h;for(i=0,n=t.morphTargets.length;i<n;i++)for(r.morphTargets[i]={},r.morphTargets[i].name=t.morphTargets[i].name,r.morphTargets[i].vertices=[],s=r.morphTargets[i].vertices,h=t.morphTargets[i].vertices,o=0,a=h.length;o<a;o+=3){var l=new THREE.Vector3;l.x=h[o]*e,l.y=h[o+1]*e,l.z=h[o+2]*e,s.push(l)}}if(void 0!==t.morphColors)for(i=0,n=t.morphColors.length;i<n;i++)for(r.morphColors[i]={},r.morphColors[i].name=t.morphColors[i].name,r.morphColors[i].colors=[],a=r.morphColors[i].colors,s=t.morphColors[i].colors,e=0,o=s.length;e<o;e+=3)h=new THREE.Color(16755200),h.setRGB(s[e],s[e+1],s[e+2]),a.push(h)}(i),r.computeFaceNormals(),r.computeBoundingSphere(),void 0===t.materials||0===t.materials.length?{geometry:r}:(i=this.initMaterials(t.materials,e),this.needsTangents(i)&&r.computeTangents(),{geometry:r,materials:i})},THREE.LoadingManager=function(t,e,r){var i=this,n=0,o=0;this.onLoad=t,this.onProgress=e,this.onError=r,this.itemStart=function(t){o++},this.itemEnd=function(t){n++,void 0!==i.onProgress&&i.onProgress(t,n,o),n===o&&void 0!==i.onLoad&&i.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager};THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(t,e,r,i){var n=this,o=new THREE.XHRLoader;o.setCrossOrigin(this.crossOrigin),o.load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t){var e,r=new THREE.BufferGeometry,i=t.attributes;for(e in i){var n=i[e];r.attributes[e]={itemSize:n.itemSize,array:new self[n.type](n.array)}}return i=t.offsets,void 0!==i&&(r.offsets=JSON.parse(JSON.stringify(i))),t=t.boundingSphere,void 0!==t&&(r.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==t.center?t.center:[0,0,0]),t.radius)),r}},THREE.MaterialLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(t,e,r,i){var n=this,o=new THREE.XHRLoader;o.setCrossOrigin(this.crossOrigin),o.load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t){var e=new THREE[t.type];if(void 0!==t.color&&e.color.setHex(t.color),void 0!==t.ambient&&e.ambient.setHex(t.ambient),void 0!==t.emissive&&e.emissive.setHex(t.emissive),void 0!==t.specular&&e.specular.setHex(t.specular),void 0!==t.shininess&&(e.shininess=t.shininess),void 0!==t.uniforms&&(e.uniforms=t.uniforms),void 0!==t.vertexShader&&(e.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(e.fragmentShader=t.fragmentShader),void 0!==t.vertexColors&&(e.vertexColors=t.vertexColors),void 0!==t.blending&&(e.blending=t.blending),void 0!==t.side&&(e.side=t.side),void 0!==t.opacity&&(e.opacity=t.opacity),void 0!==t.transparent&&(e.transparent=t.transparent),void 0!==t.wireframe&&(e.wireframe=t.wireframe),void 0!==t.materials)for(var r=0,i=t.materials.length;r<i;r++)e.materials.push(this.parse(t.materials[r]));return e}},THREE.ObjectLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(t,e,r,i){var n=this,o=new THREE.XHRLoader(n.manager);o.setCrossOrigin(this.crossOrigin),o.load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t){var e=this.parseGeometries(t.geometries),r=this.parseMaterials(t.materials);return this.parseObject(t.object,e,r)},parseGeometries:function(t){
var e={};if(void 0!==t)for(var r=new THREE.JSONLoader,i=new THREE.BufferGeometryLoader,n=0,o=t.length;n<o;n++){var a,s=t[n];switch(s.type){case"PlaneGeometry":a=new THREE.PlaneGeometry(s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"CubeGeometry":a=new THREE.BoxGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":a=new THREE.CircleGeometry(s.radius,s.segments);break;case"CylinderGeometry":a=new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded);break;case"SphereGeometry":a=new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"IcosahedronGeometry":a=new THREE.IcosahedronGeometry(s.radius,s.detail);break;case"TorusGeometry":a=new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":a=new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale);break;case"BufferGeometry":a=i.parse(s.data);break;case"Geometry":a=r.parse(s.data).geometry}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),e[s.uuid]=a}return e},parseMaterials:function(t){var e={};if(void 0!==t)for(var r=new THREE.MaterialLoader,i=0,n=t.length;i<n;i++){var o=t[i],a=r.parse(o);a.uuid=o.uuid,void 0!==o.name&&(a.name=o.name),e[o.uuid]=a}return e},parseObject:function(){var t=new THREE.Matrix4;return function(e,r,i){var n;switch(e.type){case"Scene":n=new THREE.Scene;break;case"PerspectiveCamera":n=new THREE.PerspectiveCamera(e.fov,e.aspect,e.near,e.far);break;case"OrthographicCamera":n=new THREE.OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far);break;case"AmbientLight":n=new THREE.AmbientLight(e.color);break;case"DirectionalLight":n=new THREE.DirectionalLight(e.color,e.intensity);break;case"PointLight":n=new THREE.PointLight(e.color,e.intensity,e.distance);break;case"SpotLight":n=new THREE.SpotLight(e.color,e.intensity,e.distance,e.angle,e.exponent);break;case"HemisphereLight":n=new THREE.HemisphereLight(e.color,e.groundColor,e.intensity);break;case"Mesh":n=r[e.geometry];var o=i[e.material];void 0===n&&console.error("THREE.ObjectLoader: Undefined geometry "+e.geometry),void 0===o&&console.error("THREE.ObjectLoader: Undefined material "+e.material),n=new THREE.Mesh(n,o);break;case"Sprite":o=i[e.material],void 0===o&&console.error("THREE.ObjectLoader: Undefined material "+e.material),n=new THREE.Sprite(o);break;default:n=new THREE.Object3D}if(n.uuid=e.uuid,void 0!==e.name&&(n.name=e.name),void 0!==e.matrix?(t.fromArray(e.matrix),t.decompose(n.position,n.quaternion,n.scale)):(void 0!==e.position&&n.position.fromArray(e.position),void 0!==e.rotation&&n.rotation.fromArray(e.rotation),void 0!==e.scale&&n.scale.fromArray(e.scale)),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.children)for(var a in e.children)n.add(this.parseObject(e.children[a],r,i));return n}}()},THREE.TextureLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(t,e,r,i){var n=new THREE.ImageLoader(this.manager);n.setCrossOrigin(this.crossOrigin),n.load(t,function(t){t=new THREE.Texture(t),t.needsUpdate=!0,void 0!==e&&e(t)},r,i)},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthWrite=this.depthTest=!0,this.polygonOffset=!1,this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this.needsUpdate=this.visible=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(t){if(void 0!==t)for(var e in t){var r=t[e];if(void 0===r)console.warn("THREE.Material: '"+e+"' parameter is undefined.");else if(e in this){var i=this[e];i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):this[e]="overdraw"==e?Number(r):r}}},clone:function(t){return void 0===t&&(t=new THREE.Material),t.name=this.name,t.side=this.side,t.opacity=this.opacity,t.transparent=this.transparent,t.blending=this.blending,t.blendSrc=this.blendSrc,t.blendDst=this.blendDst,t.blendEquation=this.blendEquation,t.depthTest=this.depthTest,t.depthWrite=this.depthWrite,t.polygonOffset=this.polygonOffset,t.polygonOffsetFactor=this.polygonOffsetFactor,t.polygonOffsetUnits=this.polygonOffsetUnits,t.alphaTest=this.alphaTest,t.overdraw=this.overdraw,t.visible=this.visible,t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linejoin=this.linecap="round",this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(t)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var t=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.linewidth=this.linewidth,t.linecap=this.linecap,t.linejoin=this.linejoin,t.vertexColors=this.vertexColors,t.fog=this.fog,t},THREE.LineDashedMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.scale=this.linewidth=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(t)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var t=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.linewidth=this.linewidth,t.scale=this.scale,t.dashSize=this.dashSize,t.gapSize=this.gapSize,t.vertexColors=this.vertexColors,t.fog=this.fog,t},THREE.MeshBasicMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphTargets=this.skinning=!1,this.setValues(t)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var t=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.map=this.map,t.lightMap=this.lightMap,t.specularMap=this.specularMap,t.alphaMap=this.alphaMap,t.envMap=this.envMap,t.combine=this.combine,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,t.fog=this.fog,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.wireframeLinecap=this.wireframeLinecap,t.wireframeLinejoin=this.wireframeLinejoin,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t},THREE.MeshLambertMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(t)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var t=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.ambient.copy(this.ambient),t.emissive.copy(this.emissive),t.wrapAround=this.wrapAround,t.wrapRGB.copy(this.wrapRGB),t.map=this.map,t.lightMap=this.lightMap,t.specularMap=this.specularMap,t.alphaMap=this.alphaMap,t.envMap=this.envMap,t.combine=this.combine,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,t.fog=this.fog,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.wireframeLinecap=this.wireframeLinecap,t.wireframeLinejoin=this.wireframeLinejoin,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t.morphNormals=this.morphNormals,t},THREE.MeshPhongMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.wrapAround=this.metal=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.bumpMap=this.lightMap=this.map=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.envMap=this.alphaMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(t)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var t=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.ambient.copy(this.ambient),t.emissive.copy(this.emissive),t.specular.copy(this.specular),t.shininess=this.shininess,t.metal=this.metal,t.wrapAround=this.wrapAround,t.wrapRGB.copy(this.wrapRGB),t.map=this.map,t.lightMap=this.lightMap,t.bumpMap=this.bumpMap,t.bumpScale=this.bumpScale,t.normalMap=this.normalMap,t.normalScale.copy(this.normalScale),t.specularMap=this.specularMap,t.alphaMap=this.alphaMap,t.envMap=this.envMap,t.combine=this.combine,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,t.fog=this.fog,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.wireframeLinecap=this.wireframeLinecap,t.wireframeLinejoin=this.wireframeLinejoin,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t.morphNormals=this.morphNormals,t},THREE.MeshDepthMaterial=function(t){THREE.Material.call(this),this.wireframe=this.morphTargets=!1,this.wireframeLinewidth=1,this.setValues(t)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var t=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,t),t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t},THREE.MeshNormalMaterial=function(t){THREE.Material.call(this,t),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(t)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var t=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,t),t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t},THREE.MeshFaceMaterial=function(t){this.materials=t instanceof Array?t:[]},THREE.MeshFaceMaterial.prototype.clone=function(){for(var t=new THREE.MeshFaceMaterial,e=0;e<this.materials.length;e++)t.materials.push(this.materials[e].clone());return t},THREE.PointCloudMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(t)},THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype),THREE.PointCloudMaterial.prototype.clone=function(){var t=new THREE.PointCloudMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.map=this.map,t.size=this.size,t.sizeAttenuation=this.sizeAttenuation,t.vertexColors=this.vertexColors,t.fog=this.fog,t},THREE.ParticleBasicMaterial=function(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(t)},THREE.ParticleSystemMaterial=function(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(t)},THREE.ShaderMaterial=function(t){THREE.Material.call(this),this.defines={},this.uniforms={},this.attributes=null,this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.setValues(t)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var t=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,t),t.fragmentShader=this.fragmentShader,t.vertexShader=this.vertexShader,t.uniforms=THREE.UniformsUtils.clone(this.uniforms),t.attributes=this.attributes,t.defines=this.defines,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.fog=this.fog,t.lights=this.lights,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t.morphNormals=this.morphNormals,t},THREE.RawShaderMaterial=function(t){THREE.ShaderMaterial.call(this,t)},THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.RawShaderMaterial.prototype.clone=function(){var t=new THREE.RawShaderMaterial;return THREE.ShaderMaterial.prototype.clone.call(this,t),t},THREE.SpriteMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(t)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var t=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.map=this.map,t.rotation=this.rotation,t.fog=this.fog,t},THREE.SpriteCanvasMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(t,e){},this.setValues(t)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.clone=function(){var t=new THREE.SpriteCanvasMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.program=this.program,t},THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial,THREE.Texture=function(t,e,r,i,n,o,a,s,h){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=void 0!==t?t:THREE.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:THREE.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this._needsUpdate=!1,this.onUpdate=null},THREE.Texture.DEFAULT_IMAGE=void 0,THREE.Texture.DEFAULT_MAPPING=new THREE.UVMapping,THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(t){!0===t&&this.update(),this._needsUpdate=t},clone:function(t){return void 0===t&&(t=new THREE.Texture),t.image=this.image,t.mipmaps=this.mipmaps.slice(0),t.mapping=this.mapping,t.wrapS=this.wrapS,t.wrapT=this.wrapT,t.magFilter=this.magFilter,t.minFilter=this.minFilter,t.anisotropy=this.anisotropy,t.format=this.format,t.type=this.type,t.offset.copy(this.offset),t.repeat.copy(this.repeat),t.generateMipmaps=this.generateMipmaps,t.premultiplyAlpha=this.premultiplyAlpha,t.flipY=this.flipY,t.unpackAlignment=this.unpackAlignment,t},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CubeTexture=function(t,e,r,i,n,o,a,s,h){THREE.Texture.call(this,t,e,r,i,n,o,a,s,h),this.images=t},THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CubeTexture.clone=function(t){return void 0===t&&(t=new THREE.CubeTexture),THREE.Texture.prototype.clone.call(this,t),t.images=this.images,t},THREE.CompressedTexture=function(t,e,r,i,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,i,n,c),this.image={width:e,height:r},this.mipmaps=t,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var t=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,t),t},THREE.DataTexture=function(t,e,r,i,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,i,n,c),this.image={data:t,width:e,height:r}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var t=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,t),t},THREE.PointCloud=function(t,e){THREE.Object3D.call(this),this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.PointCloudMaterial({color:16777215*Math.random()}),this.sortParticles=!1},THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype),THREE.PointCloud.prototype.raycast=function(){var t=new THREE.Matrix4,e=new THREE.Ray;return function(r,i){var n=this,o=n.geometry,a=r.params.PointCloud.threshold;if(t.getInverse(this.matrixWorld),e.copy(r.ray).applyMatrix4(t),null===o.boundingBox||!1!==e.isIntersectionBox(o.boundingBox)){var s=a/((this.scale.x+this.scale.y+this.scale.z)/3),h=new THREE.Vector3,a=function(t,o){var a=e.distanceToPoint(t);if(a<s){var h=e.closestPointToPoint(t);h.applyMatrix4(n.matrixWorld);var l=r.ray.origin.distanceTo(h);i.push({distance:l,distanceToRay:a,point:h.clone(),index:o,face:null,object:n})}};if(o instanceof THREE.BufferGeometry){var l=o.attributes,c=l.position.array;if(void 0!==l.index){var l=l.index.array,u=o.offsets;0===u.length&&(u=[{start:0,count:l.length,index:0}]);for(var f=0,E=u.length;f<E;++f)for(var p=u[f].start,d=u[f].index,o=p,p=p+u[f].count;o<p;o++){var m=d+l[o];h.set(c[3*m],c[3*m+1],c[3*m+2]),a(h,m)}}else for(l=c.length/3,o=0;o<l;o++)h.set(c[3*o],c[3*o+1],c[3*o+2]),a(h,o)}else for(h=this.geometry.vertices,o=0;o<h.length;o++)a(h[o],o)}}}(),THREE.PointCloud.prototype.clone=function(t){return void 0===t&&(t=new THREE.PointCloud(this.geometry,this.material)),t.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,t),t},THREE.ParticleSystem=function(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud."),new THREE.PointCloud(t,e)},THREE.Line=function(t,e,r){THREE.Object3D.call(this),this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==r?r:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.raycast=function(){var t=new THREE.Matrix4,e=new THREE.Ray,r=new THREE.Sphere;return function(i,n){var o=i.linePrecision,o=o*o,a=this.geometry;if(null===a.boundingSphere&&a.computeBoundingSphere(),r.copy(a.boundingSphere),r.applyMatrix4(this.matrixWorld),!1!==i.ray.isIntersectionSphere(r)&&(t.getInverse(this.matrixWorld),e.copy(i.ray).applyMatrix4(t),a instanceof THREE.Geometry))for(var a=a.vertices,s=a.length,h=new THREE.Vector3,l=new THREE.Vector3,c=this.type===THREE.LineStrip?1:2,u=0;u<s-1;u+=c)if(!(e.distanceSqToSegment(a[u],a[u+1],l,h)>o)){var f=e.origin.distanceTo(l);f<i.near||f>i.far||n.push({distance:f,point:h.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}(),THREE.Line.prototype.clone=function(t){return void 0===t&&(t=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,t),t},THREE.Mesh=function(t,e){THREE.Object3D.call(this),this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var t=0,e=this.geometry.morphTargets.length;t<e;t++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[t].name]=t}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(t){return void 0!==this.morphTargetDictionary[t]?this.morphTargetDictionary[t]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+t+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.raycast=function(){var t=new THREE.Matrix4,e=new THREE.Ray,r=new THREE.Sphere,i=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Vector3;return function(a,s){var h=this.geometry;if(null===h.boundingSphere&&h.computeBoundingSphere(),r.copy(h.boundingSphere),r.applyMatrix4(this.matrixWorld),!1!==a.ray.isIntersectionSphere(r)&&(t.getInverse(this.matrixWorld),e.copy(a.ray).applyMatrix4(t),null===h.boundingBox||!1!==e.isIntersectionBox(h.boundingBox)))if(h instanceof THREE.BufferGeometry){var l=this.material;if(void 0!==l){var c,u,f=h.attributes,E=a.precision;if(void 0!==f.index){var p=f.index.array,d=f.position.array,m=h.offsets;0===m.length&&(m=[{start:0,count:p.length,index:0}]);for(var g=0,T=m.length;g<T;++g)for(var f=m[g].start,v=m[g].index,h=f,y=f+m[g].count;h<y;h+=3){f=v+p[h],c=v+p[h+1],u=v+p[h+2],i.set(d[3*f],d[3*f+1],d[3*f+2]),n.set(d[3*c],d[3*c+1],d[3*c+2]),o.set(d[3*u],d[3*u+1],d[3*u+2]);var R=l.side===THREE.BackSide?e.intersectTriangle(o,n,i,!0):e.intersectTriangle(i,n,o,l.side!==THREE.DoubleSide);if(null!==R){R.applyMatrix4(this.matrixWorld);var x=a.ray.origin.distanceTo(R);x<E||x<a.near||x>a.far||s.push({distance:x,point:R,indices:[f,c,u],face:null,faceIndex:null,object:this})}}}else for(d=f.position.array,p=h=0,y=d.length;h<y;h+=3,p+=9)f=h,c=h+1,u=h+2,i.set(d[p],d[p+1],d[p+2]),n.set(d[p+3],d[p+4],d[p+5]),o.set(d[p+6],d[p+7],d[p+8]),R=l.side===THREE.BackSide?e.intersectTriangle(o,n,i,!0):e.intersectTriangle(i,n,o,l.side!==THREE.DoubleSide),null!==R&&(R.applyMatrix4(this.matrixWorld),x=a.ray.origin.distanceTo(R),x<E||x<a.near||x>a.far||s.push({distance:x,point:R,indices:[f,c,u],face:null,faceIndex:null,object:this}))}}else if(h instanceof THREE.Geometry)for(p=this.material instanceof THREE.MeshFaceMaterial,d=!0===p?this.material.materials:null,E=a.precision,m=h.vertices,g=0,T=h.faces.length;g<T;g++)if(v=h.faces[g],l=!0===p?d[v.materialIndex]:this.material,void 0!==l){if(f=m[v.a],c=m[v.b],u=m[v.c],!0===l.morphTargets){R=h.morphTargets,x=this.morphTargetInfluences,i.set(0,0,0),n.set(0,0,0),o.set(0,0,0);for(var y=0,H=R.length;y<H;y++){var _=x[y];if(0!==_){var b=R[y].vertices;i.x+=(b[v.a].x-f.x)*_,i.y+=(b[v.a].y-f.y)*_,i.z+=(b[v.a].z-f.z)*_,n.x+=(b[v.b].x-c.x)*_,n.y+=(b[v.b].y-c.y)*_,n.z+=(b[v.b].z-c.z)*_,o.x+=(b[v.c].x-u.x)*_,o.y+=(b[v.c].y-u.y)*_,o.z+=(b[v.c].z-u.z)*_}}i.add(f),n.add(c),o.add(u),f=i,c=n,u=o}R=l.side===THREE.BackSide?e.intersectTriangle(u,c,f,!0):e.intersectTriangle(f,c,u,l.side!==THREE.DoubleSide),null!==R&&(R.applyMatrix4(this.matrixWorld),x=a.ray.origin.distanceTo(R),x<E||x<a.near||x>a.far||s.push({distance:x,point:R,face:v,faceIndex:g,object:this}))}}}(),THREE.Mesh.prototype.clone=function(t,e){return void 0===t&&(t=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,t,e),t},THREE.Bone=function(t){THREE.Object3D.call(this),this.skin=t,this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.updateMatrixWorld=function(t){THREE.Object3D.prototype.updateMatrixWorld.call(this,t),this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0},THREE.Skeleton=function(t,e,r){if(this.useVertexTexture=void 0===r||r,this.identityMatrix=new THREE.Matrix4,t=t||[],this.bones=t.slice(0),this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=t=256<this.bones.length?64:64<this.bones.length?32:16<this.bones.length?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*this.bones.length),void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else for(console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[],e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new THREE.Matrix4)},THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var r=new THREE.Matrix4;this.bones[t]&&r.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(r)}},THREE.Skeleton.prototype.pose=function(){for(var t,e=0,r=this.bones.length;e<r;e++)(t=this.bones[e])&&t.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,r=this.bones.length;e<r;e++)(t=this.bones[e])&&(t.parent?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},THREE.Skeleton.prototype.update=function(){for(var t=new THREE.Matrix4,e=0,r=this.bones.length;e<r;e++)t.multiplyMatrices(this.bones[e]?this.bones[e].matrixWorld:this.identityMatrix,this.boneInverses[e]),t.flattenToArrayOffset(this.boneMatrices,16*e);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh=function(t,e,r){if(THREE.Mesh.call(this,t,e),this.bindMode="attached",this.bindMatrix=new THREE.Matrix4,this.bindMatrixInverse=new THREE.Matrix4,t=[],this.geometry&&void 0!==this.geometry.bones){for(var i,n,o,a,s=0,h=this.geometry.bones.length;s<h;++s)i=this.geometry.bones[s],n=i.pos,o=i.rotq,a=i.scl,e=new THREE.Bone(this),t.push(e),e.name=i.name,e.position.set(n[0],n[1],n[2]),e.quaternion.set(o[0],o[1],o[2],o[3]),void 0!==a?e.scale.set(a[0],a[1],a[2]):e.scale.set(1,1,1);for(s=0,h=this.geometry.bones.length;s<h;++s)i=this.geometry.bones[s],-1!==i.parent?t[i.parent].add(t[s]):this.add(t[s])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new THREE.Skeleton(t,(void 0),r))},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.bind=function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var t=0;t<this.geometry.skinIndices.length;t++){var e=this.geometry.skinWeights[t],r=1/e.lengthManhattan();1/0!==r?e.multiplyScalar(r):e.set(1)}},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(t){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)},THREE.SkinnedMesh.prototype.clone=function(t){return void 0===t&&(t=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,t),t},THREE.MorphAnimMesh=function(t,e){THREE.Mesh.call(this,t,e),this.duration=1e3,this.mirroredLoop=!1,this.currentKeyframe=this.lastKeyframe=this.time=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(t,e){this.startKeyframe=t,this.endKeyframe=e,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var t=this.geometry;t.animations||(t.animations={});for(var e,r=t.animations,i=/([a-z]+)_?(\d+)/,n=0,o=t.morphTargets.length;n<o;n++){var a=t.morphTargets[n].name.match(i);if(a&&1<a.length){a=a[1],r[a]||(r[a]={start:1/0,end:-(1/0)});var s=r[a];n<s.start&&(s.start=n),n>s.end&&(s.end=n),e||(e=a)}}t.firstAnimation=e},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(t,e,r){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[t]={start:e,end:r}},THREE.MorphAnimMesh.prototype.playAnimation=function(t,e){var r=this.geometry.animations[t];r?(this.setFrameRange(r.start,r.end),this.duration=(r.end-r.start)/e*1e3,this.time=0):console.warn("animation["+t+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(t){var e=this.duration/this.length;this.time+=this.direction*t,this.mirroredLoop?(this.time>this.duration||0>this.time)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)):(this.time%=this.duration,0>this.time&&(this.time+=this.duration)),t=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/e),0,this.length-1),t!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[t]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=t),e=this.time%e/e,this.directionBackwards&&(e=1-e),this.morphTargetInfluences[this.currentKeyframe]=e,this.morphTargetInfluences[this.lastKeyframe]=1-e},THREE.MorphAnimMesh.prototype.interpolateTargets=function(t,e,r){for(var i=this.morphTargetInfluences,n=0,o=i.length;n<o;n++)i[n]=0;-1<t&&(i[t]=1-r),-1<e&&(i[e]=r)},THREE.MorphAnimMesh.prototype.clone=function(t){return void 0===t&&(t=new THREE.MorphAnimMesh(this.geometry,this.material)),t.duration=this.duration,t.mirroredLoop=this.mirroredLoop,t.time=this.time,t.lastKeyframe=this.lastKeyframe,t.currentKeyframe=this.currentKeyframe,t.direction=this.direction,t.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,t),t},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var r=0;r<this.objects.length&&!(e<this.objects[r].distance);r++);this.objects.splice(r,0,{distance:e,object:t}),this.add(t)},THREE.LOD.prototype.getObjectForDistance=function(t){for(var e=1,r=this.objects.length;e<r&&!(t<this.objects[e].distance);e++);
return this.objects[e-1].object},THREE.LOD.prototype.raycast=function(){var t=new THREE.Vector3;return function(e,r){t.setFromMatrixPosition(this.matrixWorld);var i=e.ray.origin.distanceTo(t);this.getObjectForDistance(i).raycast(e,r)}}(),THREE.LOD.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(r){if(1<this.objects.length){t.setFromMatrixPosition(r.matrixWorld),e.setFromMatrixPosition(this.matrixWorld),r=t.distanceTo(e),this.objects[0].object.visible=!0;for(var i=1,n=this.objects.length;i<n&&r>=this.objects[i].distance;i++)this.objects[i-1].object.visible=!1,this.objects[i].object.visible=!0;for(;i<n;i++)this.objects[i].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(t){void 0===t&&(t=new THREE.LOD),THREE.Object3D.prototype.clone.call(this,t);for(var e=0,r=this.objects.length;e<r;e++){var i=this.objects[e].object.clone();i.visible=0===e,t.addLevel(i,this.objects[e].distance)}return t},THREE.Sprite=function(){var t=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0]),e=new THREE.BufferGeometry;return e.addAttribute("position",new THREE.BufferAttribute(t,3)),function(t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.SpriteMaterial}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.raycast=function(){var t=new THREE.Vector3;return function(e,r){t.setFromMatrixPosition(this.matrixWorld);var i=e.ray.distanceToPoint(t);i>this.scale.x||r.push({distance:i,point:this.position,face:null,object:this})}}(),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(t){return void 0===t&&(t=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,t),t},THREE.Particle=THREE.Sprite,THREE.Scene=function(){THREE.Object3D.call(this),this.overrideMaterial=this.fog=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(t){if(t instanceof THREE.Light)-1===this.__lights.indexOf(t)&&this.__lights.push(t),t.target&&void 0===t.target.parent&&this.add(t.target);else if(!(t instanceof THREE.Camera||t instanceof THREE.Bone)){this.__objectsAdded.push(t);var e=this.__objectsRemoved.indexOf(t);-1!==e&&this.__objectsRemoved.splice(e,1)}for(this.dispatchEvent({type:"objectAdded",object:t}),t.dispatchEvent({type:"addedToScene",scene:this}),e=0;e<t.children.length;e++)this.__addObject(t.children[e])},THREE.Scene.prototype.__removeObject=function(t){if(t instanceof THREE.Light){var e=this.__lights.indexOf(t);if(-1!==e&&this.__lights.splice(e,1),t.shadowCascadeArray)for(e=0;e<t.shadowCascadeArray.length;e++)this.__removeObject(t.shadowCascadeArray[e])}else t instanceof THREE.Camera||(this.__objectsRemoved.push(t),e=this.__objectsAdded.indexOf(t),-1!==e&&this.__objectsAdded.splice(e,1));for(this.dispatchEvent({type:"objectRemoved",object:t}),t.dispatchEvent({type:"removedFromScene",scene:this}),e=0;e<t.children.length;e++)this.__removeObject(t.children[e])},THREE.Scene.prototype.clone=function(t){return void 0===t&&(t=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,t),null!==this.fog&&(t.fog=this.fog.clone()),null!==this.overrideMaterial&&(t.overrideMaterial=this.overrideMaterial.clone()),t.autoUpdate=this.autoUpdate,t.matrixAutoUpdate=this.matrixAutoUpdate,t},THREE.Fog=function(t,e,r){this.name="",this.color=new THREE.Color(t),this.near=void 0!==e?e:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(t,e){this.name="",this.color=new THREE.Color(t),this.density=void 0!==e?e:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(t){function e(t,e,r,i){l(e),c(r),u(i),f(t.getStyle()),D.stroke(),ut.expandByScalar(2*e)}function r(t){E(t.getStyle()),D.fill()}function i(t){n(t.target)}function n(t){if(!(t instanceof THREE.CompressedTexture)){var e=t.wrapS===THREE.RepeatWrapping,r=t.wrapT===THREE.RepeatWrapping,i=t.image,n=document.createElement("canvas");n.width=i.width,n.height=i.height;var o=n.getContext("2d");o.setTransform(1,0,0,-1,0,i.height),o.drawImage(i,0,0),ht[t.id]=D.createPattern(n,!0===e&&!0===r?"repeat":!0===e&&!1===r?"repeat-x":!1===e&&!0===r?"repeat-y":"no-repeat")}}function o(t,e,r,o,a,s,h,l,c,u,f,p,d){if(!(d instanceof THREE.DataTexture)){!1===d.hasEventListener("update",i)&&(void 0!==d.image&&0<d.image.width&&n(d),d.addEventListener("update",i));var m=ht[d.id];if(void 0!==m){E(m);var m=d.offset.x/d.repeat.x,g=d.offset.y/d.repeat.y,T=d.image.width*d.repeat.x;d=d.image.height*d.repeat.y,h=(h+m)*T,l=(l+g)*d,r-=t,o-=e,a-=t,s-=e,c=(c+m)*T-h,u=(u+g)*d-l,f=(f+m)*T-h,p=(p+g)*d-l,d=c*p-f*u,0!==d&&(m=1/d,d=(p*r-u*a)*m,u=(p*o-u*s)*m,r=(c*a-f*r)*m,o=(c*s-f*o)*m,t=t-d*h-r*l,e=e-u*h-o*l,D.save(),D.transform(d,u,r,o,t,e),D.fill(),D.restore())}else E("rgba(0,0,0,1)"),D.fill()}}function a(t,e,r){var i=e.x-t.x,n=e.y-t.y,o=i*i+n*n;0!==o&&(r/=Math.sqrt(o),i*=r,n*=r,e.x+=i,e.y+=n,t.x-=i,t.y-=n)}function s(t){z!==t&&(z=D.globalAlpha=t)}function h(t){B!==t&&(t===THREE.NormalBlending?D.globalCompositeOperation="source-over":t===THREE.AdditiveBlending?D.globalCompositeOperation="lighter":t===THREE.SubtractiveBlending&&(D.globalCompositeOperation="darker"),B=t)}function l(t){O!==t&&(O=D.lineWidth=t)}function c(t){I!==t&&(I=D.lineCap=t)}function u(t){G!==t&&(G=D.lineJoin=t)}function f(t){k!==t&&(k=D.strokeStyle=t)}function E(t){N!==t&&(N=D.fillStyle=t)}function p(t){W.length!==t.length&&(D.setLineDash(t),W=t)}console.log("THREE.CanvasRenderer",THREE.REVISION);var d=THREE.Math.smoothstep;t=t||{};var m,g,T,v,y,R,x,H=this,_=new THREE.Projector,b=void 0!==t.canvas?t.canvas:document.createElement("canvas"),w=b.width,M=b.height,S=Math.floor(w/2),C=Math.floor(M/2),A=0,L=0,P=w,F=M,D=b.getContext("2d",{alpha:!0===t.alpha}),U=new THREE.Color(0),V=0,z=1,B=0,k=null,N=null,O=null,I=null,G=null,W=[];new THREE.RenderableVertex,new THREE.RenderableVertex;var j,X,Y,q,K,Z,Q=new THREE.Color;new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color;var J,$,tt,et,rt,it,nt,ot=new THREE.Color,at=new THREE.Color,st=new THREE.Color,ht={},lt=new THREE.Box2,ct=new THREE.Box2,ut=new THREE.Box2,ft=new THREE.Color,Et=new THREE.Color,pt=new THREE.Color,dt=new THREE.Vector3,mt=new THREE.Vector3,gt=new THREE.Vector3,Tt=new THREE.Matrix3;void 0===D.setLineDash&&(D.setLineDash=function(){}),this.domElement=b,this.devicePixelRatio=void 0!==t.devicePixelRatio?t.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.sortElements=this.sortObjects=this.autoClear=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(t,e,r){w=t*this.devicePixelRatio,M=e*this.devicePixelRatio,b.width=w,b.height=M,S=Math.floor(w/2),C=Math.floor(M/2),!1!==r&&(b.style.width=t+"px",b.style.height=e+"px"),lt.min.set(-S,-C),lt.max.set(S,C),ct.min.set(-S,-C),ct.max.set(S,C),z=1,B=0,G=I=O=N=k=null,this.setViewport(0,0,t,e)},this.setViewport=function(t,e,r,i){A=t*this.devicePixelRatio,L=e*this.devicePixelRatio,P=r*this.devicePixelRatio,F=i*this.devicePixelRatio},this.setScissor=function(){},this.enableScissorTest=function(){},this.setClearColor=function(t,e){U.set(t),V=void 0!==e?e:1,ct.min.set(-S,-C),ct.max.set(S,C)},this.setClearColorHex=function(t,e){console.warn("THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(t,e)},this.getClearColor=function(){return U},this.getClearAlpha=function(){return V},this.getMaxAnisotropy=function(){return 0},this.clear=function(){!1===ct.empty()&&(ct.intersect(lt),ct.expandByScalar(2),ct.min.x+=S,ct.min.y=-ct.min.y+C,ct.max.x+=S,ct.max.y=-ct.max.y+C,1>V&&D.clearRect(0|ct.min.x,0|ct.min.y,ct.max.x-ct.min.x|0,ct.max.y-ct.min.y|0),0<V&&(h(THREE.NormalBlending),s(1),E("rgba("+Math.floor(255*U.r)+","+Math.floor(255*U.g)+","+Math.floor(255*U.b)+","+V+")"),D.fillRect(0|ct.min.x,0|ct.min.y,ct.max.x-ct.min.x|0,ct.max.y-ct.min.y|0)),ct.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(t,b){if(!1==b instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===this.autoClear&&this.clear(),H.info.render.vertices=0,H.info.render.faces=0,D.setTransform(P/w,0,0,-F/M,A,M-L),D.translate(S,C),m=_.projectScene(t,b,this.sortObjects,this.sortElements),g=m.elements,T=m.lights,v=b,Tt.getNormalMatrix(b.matrixWorldInverse),ft.setRGB(0,0,0),Et.setRGB(0,0,0),pt.setRGB(0,0,0);for(var U=0,V=T.length;U<V;U++){var z=T[U],B=z.color;z instanceof THREE.AmbientLight?ft.add(B):z instanceof THREE.DirectionalLight?Et.add(B):z instanceof THREE.PointLight&&pt.add(B)}for(U=0,V=g.length;U<V;U++){var k=g[U],N=k.material;if(void 0!==N&&0!==N.opacity){if(ut.makeEmpty(),k instanceof THREE.RenderableSprite){y=k,y.x*=S,y.y*=C;var z=y,O=k,B=N;s(B.opacity),h(B.blending);var I=O.scale.x*S,O=O.scale.y*C,k=.5*Math.sqrt(I*I+O*O);if(ut.min.set(z.x-k,z.y-k),ut.max.set(z.x+k,z.y+k),B instanceof THREE.SpriteMaterial){var G=B.map;if(null!==G&&void 0!==G.image){!1===G.hasEventListener("update",i)&&(0<G.image.width&&n(G),G.addEventListener("update",i)),k=ht[G.id],E(void 0!==k?k:"rgba( 0, 0, 0, 1 )");var W=G.image,k=W.width*G.offset.x,N=W.height*G.offset.y,vt=W.width*G.repeat.x,G=W.height*G.repeat.y,W=I/vt,yt=O/G;D.save(),D.translate(z.x,z.y),0!==B.rotation&&D.rotate(B.rotation),D.translate(-I/2,-O/2),D.scale(W,yt),D.translate(-k,-N),D.fillRect(k,N,vt,G)}else E(B.color.getStyle()),D.save(),D.translate(z.x,z.y),0!==B.rotation&&D.rotate(B.rotation),D.scale(I,-O),D.fillRect(-.5,-.5,1,1);D.restore()}else B instanceof THREE.SpriteCanvasMaterial&&(f(B.color.getStyle()),E(B.color.getStyle()),D.save(),D.translate(z.x,z.y),0!==B.rotation&&D.rotate(B.rotation),D.scale(I,O),B.program(D),D.restore())}else if(k instanceof THREE.RenderableLine){if(y=k.v1,R=k.v2,y.positionScreen.x*=S,y.positionScreen.y*=C,R.positionScreen.x*=S,R.positionScreen.y*=C,ut.setFromPoints([y.positionScreen,R.positionScreen]),!0===lt.isIntersectionBox(ut))if(z=y,B=R,I=k,O=N,s(O.opacity),h(O.blending),D.beginPath(),D.moveTo(z.positionScreen.x,z.positionScreen.y),D.lineTo(B.positionScreen.x,B.positionScreen.y),O instanceof THREE.LineBasicMaterial){if(l(O.linewidth),c(O.linecap),u(O.linejoin),O.vertexColors!==THREE.VertexColors)f(O.color.getStyle());else if(k=I.vertexColors[0].getStyle(),I=I.vertexColors[1].getStyle(),k===I)f(k);else{try{var Rt=D.createLinearGradient(z.positionScreen.x,z.positionScreen.y,B.positionScreen.x,B.positionScreen.y);Rt.addColorStop(0,k),Rt.addColorStop(1,I)}catch(t){Rt=k}f(Rt)}D.stroke(),ut.expandByScalar(2*O.linewidth)}else O instanceof THREE.LineDashedMaterial&&(l(O.linewidth),c(O.linecap),u(O.linejoin),f(O.color.getStyle()),p([O.dashSize,O.gapSize]),D.stroke(),ut.expandByScalar(2*O.linewidth),p([]))}else if(k instanceof THREE.RenderableFace){if(y=k.v1,R=k.v2,x=k.v3,-1>y.positionScreen.z||1<y.positionScreen.z)continue;if(-1>R.positionScreen.z||1<R.positionScreen.z)continue;if(-1>x.positionScreen.z||1<x.positionScreen.z)continue;if(y.positionScreen.x*=S,y.positionScreen.y*=C,R.positionScreen.x*=S,R.positionScreen.y*=C,x.positionScreen.x*=S,x.positionScreen.y*=C,0<N.overdraw&&(a(y.positionScreen,R.positionScreen,N.overdraw),a(R.positionScreen,x.positionScreen,N.overdraw),a(x.positionScreen,y.positionScreen,N.overdraw)),ut.setFromPoints([y.positionScreen,R.positionScreen,x.positionScreen]),!0===lt.isIntersectionBox(ut)){B=y,I=R,O=x,z=N,H.info.render.vertices+=3,H.info.render.faces++,s(z.opacity),h(z.blending),j=B.positionScreen.x,X=B.positionScreen.y,Y=I.positionScreen.x,q=I.positionScreen.y,K=O.positionScreen.x,Z=O.positionScreen.y;var N=j,vt=X,G=Y,W=q,yt=K,xt=Z;if(D.beginPath(),D.moveTo(N,vt),D.lineTo(G,W),D.lineTo(yt,xt),D.closePath(),(z instanceof THREE.MeshLambertMaterial||z instanceof THREE.MeshPhongMaterial)&&null===z.map){for(ot.copy(z.color),at.copy(z.emissive),z.vertexColors===THREE.FaceColors&&ot.multiply(k.color),Q.copy(ft),mt.copy(B.positionWorld).add(I.positionWorld).add(O.positionWorld).divideScalar(3),B=mt,I=k.normalModel,O=Q,k=0,N=T.length;k<N;k++)vt=T[k],st.copy(vt.color),vt instanceof THREE.DirectionalLight?(G=dt.setFromMatrixPosition(vt.matrixWorld).normalize(),W=I.dot(G),0>=W||(W*=vt.intensity,O.add(st.multiplyScalar(W)))):vt instanceof THREE.PointLight&&(G=dt.setFromMatrixPosition(vt.matrixWorld),W=I.dot(dt.subVectors(G,B).normalize()),0>=W||(W*=0==vt.distance?1:1-Math.min(B.distanceTo(G)/vt.distance,1),0!=W&&(W*=vt.intensity,O.add(st.multiplyScalar(W)))));Q.multiply(ot).add(at),!0===z.wireframe?e(Q,z.wireframeLinewidth,z.wireframeLinecap,z.wireframeLinejoin):r(Q)}else z instanceof THREE.MeshBasicMaterial||z instanceof THREE.MeshLambertMaterial||z instanceof THREE.MeshPhongMaterial?null!==z.map?z.map.mapping instanceof THREE.UVMapping&&(J=k.uvs,o(j,X,Y,q,K,Z,J[0].x,J[0].y,J[1].x,J[1].y,J[2].x,J[2].y,z.map)):null!==z.envMap?z.envMap.mapping instanceof THREE.SphericalReflectionMapping?(gt.copy(k.vertexNormalsModel[0]).applyMatrix3(Tt),$=.5*gt.x+.5,tt=.5*gt.y+.5,gt.copy(k.vertexNormalsModel[1]).applyMatrix3(Tt),et=.5*gt.x+.5,rt=.5*gt.y+.5,gt.copy(k.vertexNormalsModel[2]).applyMatrix3(Tt),it=.5*gt.x+.5,nt=.5*gt.y+.5,o(j,X,Y,q,K,Z,$,tt,et,rt,it,nt,z.envMap)):z.envMap.mapping instanceof THREE.SphericalRefractionMapping&&(gt.copy(k.vertexNormalsModel[0]).applyMatrix3(Tt),$=-.5*gt.x+.5,tt=-.5*gt.y+.5,gt.copy(k.vertexNormalsModel[1]).applyMatrix3(Tt),et=-.5*gt.x+.5,rt=-.5*gt.y+.5,gt.copy(k.vertexNormalsModel[2]).applyMatrix3(Tt),it=-.5*gt.x+.5,nt=-.5*gt.y+.5,o(j,X,Y,q,K,Z,$,tt,et,rt,it,nt,z.envMap)):(Q.copy(z.color),z.vertexColors===THREE.FaceColors&&Q.multiply(k.color),!0===z.wireframe?e(Q,z.wireframeLinewidth,z.wireframeLinecap,z.wireframeLinejoin):r(Q)):(z instanceof THREE.MeshDepthMaterial?Q.r=Q.g=Q.b=1-d(B.positionScreen.z*B.positionScreen.w,v.near,v.far):z instanceof THREE.MeshNormalMaterial?(gt.copy(k.normalModel).applyMatrix3(Tt),Q.setRGB(gt.x,gt.y,gt.z).multiplyScalar(.5).addScalar(.5)):Q.setRGB(1,1,1),!0===z.wireframe?e(Q,z.wireframeLinewidth,z.wireframeLinecap,z.wireframeLinejoin):r(Q))}}ct.union(ut)}}D.setTransform(1,0,0,1,0,0)}}},THREE.ShaderChunk={},THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n",THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\tvec3 dirVector = normalize( lDirection.xyz );\n\n\tfloat dotProduct = dot( transformedNormal, dirVector );\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t#endif\n\n\t#endif\n\n\t#ifdef WRAP_AROUND\n\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n\t\t#endif\n\n\t#endif\n\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n\t#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\tfloat lDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\t\tlVector = normalize( lVector );\n\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n\t\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n\t\t\t#endif\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n\t\t#endif\n\n\t}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif",THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif",THREE.ShaderChunk.default_vertex="vec4 mvPosition;\n\n#ifdef USE_SKINNING\n\n\tmvPosition = modelViewMatrix * skinned;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\n\tmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\n\tmvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif",THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\t#ifdef USE_MORPHNORMALS\n\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n\t#else\n\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif",THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\n#endif",THREE.ShaderChunk.lights_phong_fragment="vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tvec3 pointDiffuse = vec3( 0.0 );\n\tvec3 pointSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tpointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n\t\t\t\t// specular\n\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tvec3 spotDiffuse = vec3( 0.0 );\n\tvec3 spotSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\t\t\t// diffuse\n\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n\t\t\t#else\n\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t\t#endif\n\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n\t\t\t\t\t// specular\n\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tvec3 dirDiffuse = vec3( 0.0 );\n\tvec3 dirSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\tvec3 dirVector = normalize( lDirection.xyz );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, dirVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tdirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n\t\t// specular\n\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n\t\t/*\n\t\t// fresnel term from skin shader\n\t\tconst float F0 = 0.128;\n\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\n\t\tfloat exponential = pow( base, 5.0 );\n\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\n\t\t*/\n\n\t\t/*\n\t\t// fresnel term from fresnel shader\n\t\tconst float mFresnelBias = 0.08;\n\t\tconst float mFresnelScale = 0.3;\n\t\tconst float mFresnelPower = 5.0;\n\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n\t\t*/\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tvec3 hemiDiffuse = vec3( 0.0 );\n\tvec3 hemiSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\themiDiffuse += diffuse * hemiColor;\n\n\t\t// specular (sky light)\n\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n\t\t// specular (ground light)\n\n\t\tvec3 lVectorGround = -lVector;\n\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n\t}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n\ttotalDiffuse += dirDiffuse;\n\ttotalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\ttotalDiffuse += hemiDiffuse;\n\ttotalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\ttotalDiffuse += pointDiffuse;\n\ttotalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\ttotalDiffuse += spotDiffuse;\n\ttotalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif",THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif",THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tvec3 morphedNormal = vec3( 0.0 );\n\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n\tmorphedNormal += normal;\n\n#endif",THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\tuniform samplerCube envMap;\n\tuniform float flipEnvMap;\n\tuniform int combine;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n\t\tuniform bool useRefract;\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t\t\t// Per-Pixel Tangent Space Normal Mapping\n\t\t\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n",
THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n",THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\tuniform sampler2D lightMap;\n\n#endif",THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif",THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif",THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\t#ifdef GAMMA_INPUT\n\n\t\ttexelColor.xyz *= texelColor.xyz;\n\n\t#endif\n\n\tgl_FragColor = gl_FragColor * texelColor;\n\n#endif",THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n\tvUv2 = uv2;\n\n#endif",THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n\tgl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif",THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n\t#ifdef GAMMA_INPUT\n\n\t\tvColor = color * color;\n\n\t#else\n\n\t\tvColor = color;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n\t#ifdef USE_MORPHTARGETS\n\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n\t#else\n\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n",THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\tuniform bool useRefract;\n\n#endif\n",THREE.ShaderChunk.linear_to_gamma_fragment="#ifdef GAMMA_OUTPUT\n\n\tgl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif",THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif",THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n",THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n",THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\tvec3 reflectVec;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\n\t\tvec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n\t\tif ( useRefract ) {\n\n\t\t\treflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t} else { \n\n\t\t\treflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t}\n\n\t#else\n\n\t\treflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t\tvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#else\n\n\t\tvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#endif\n\n\t#ifdef GAMMA_INPUT\n\n\t\tcubeColor.xyz *= cubeColor.xyz;\n\n\t#endif\n\n\tif ( combine == 1 ) {\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n\n\t} else if ( combine == 2 ) {\n\n\t\tgl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n\n\t} else {\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n\n\t}\n\n#endif",THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif",THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif",THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif",THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tconst float LOG2 = 1.442695;\n\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif",THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t\t\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n\t\t\t//\thttp://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n\t\t\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif",THREE.ShaderChunk.defaultnormal_vertex="vec3 objectNormal;\n\n#ifdef USE_SKINNING\n\n\tobjectNormal = skinnedNormal.xyz;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n\n\tobjectNormal = morphedNormal;\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n\n\tobjectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;",THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n\tgl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif",THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif",THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n\tgl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif",THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\tvec3 morphed = vec3( 0.0 );\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n\tmorphed += position;\n\n#endif",THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n\tvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n\tworldNormal = normalize( worldNormal );\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\tif ( useRefract ) {\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t} else {\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t}\n\n#endif",THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n\t#ifdef SHADOWMAP_DEBUG\n\n\t\tvec3 frustumColors[3];\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n\t#endif\n\n\t#ifdef SHADOWMAP_CASCADE\n\n\t\tint inFrustumCount = 0;\n\n\t#endif\n\n\tfloat fDepth;\n\tvec3 shadowColor = vec3( 1.0 );\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\t\t\t// don't shadow pixels outside of light frustum\n\t\t\t\t// use just first frustum (for cascades)\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\n\n\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\tinFrustumCount += int( inFrustum );\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n\t\t#else\n\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\t#endif\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t/*\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n\t\t\t\t\t\t// must enroll loop manually\n\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\t\t\tshadow += 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tshadow /= 9.0;\n\n\t\t*/\n\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\n\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#else\n\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\n\t\t// spot with multiple shadows is darker\n\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n\t\t// spot with multiple shadows has the same color as single shadow spot\n\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n\t\t\t#endif\n\n\t\t}\n\n\n\t\t#ifdef SHADOWMAP_DEBUG\n\n\t\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#else\n\n\t\t\t\tif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t}\n\n\t#ifdef GAMMA_OUTPUT\n\n\t\tshadowColor *= shadowColor;\n\n\t#endif\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n",THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#endif\n\n\t#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n\t#endif\n\n\t#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n#endif",THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n#endif",THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\t#extension GL_EXT_frag_depth : enable\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tgl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",THREE.UniformsUtils={merge:function(t){var e,r,i,n={};for(e=0;e<t.length;e++)for(r in i=this.clone(t[e]))n[r]=i[r];return n},clone:function(t){var e,r,i,n={};for(e in t)for(r in n[e]={},t[e])i=t[e][r],n[e][r]=i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?i.clone():i instanceof Array?i.slice():i;return n}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"\t#ifdef DOUBLE_SIDED\n\t\tif ( gl_FrontFacing )\n\t\t\tgl_FragColor.xyz *= vLightFront;\n\t\telse\n\t\t\tgl_FragColor.xyz *= vLightBack;\n\t#else\n\t\tgl_FragColor.xyz *= vLightFront;\n\t#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\tvNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),
fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\n\tgl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n\tuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\n\tvec3 specularTex = vec3( 1.0 );\n\tvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\n\tnormalTex.xy *= uNormalScale;\n\tnormalTex = normalize( normalTex );\n\tif( enableDiffuse ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 texelColor = texture2D( tDiffuse, vUv );\n\t\t\ttexelColor.xyz *= texelColor.xyz;\n\t\t\tgl_FragColor = gl_FragColor * texelColor;\n\t\t#else\n\t\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n\t\t#endif\n\t}\n\tif( enableAO ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 aoColor = texture2D( tAO, vUv );\n\t\t\taoColor.xyz *= aoColor.xyz;\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n\t\t#else\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n\t\t#endif\n\t}",THREE.ShaderChunk.alphatest_fragment,"\tif( enableSpecular )\n\t\tspecularTex = texture2D( tSpecular, vUv ).xyz;\n\tmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\n\tvec3 finalNormal = tsb * normalTex;\n\t#ifdef FLIP_SIDED\n\t\tfinalNormal = -finalNormal;\n\t#endif\n\tvec3 normal = normalize( finalNormal );\n\tvec3 viewPosition = normalize( vViewPosition );\n\t#if MAX_POINT_LIGHTS > 0\n\t\tvec3 pointDiffuse = vec3( 0.0 );\n\t\tvec3 pointSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\t\tvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat pointDistance = 1.0;\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\t\tpointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\n\t\t\tpointVector = normalize( pointVector );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\n\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n\t\t\t#endif\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\n\t\t\tvec3 pointHalfVector = normalize( pointVector + viewPosition );\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n\t\t}\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\tvec3 spotDiffuse = vec3( 0.0 );\n\t\tvec3 spotSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\t\tvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat spotDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\n\t\t\tspotVector = normalize( spotVector );\n\t\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\t\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\t\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\t\t\t\t#ifdef WRAP_AROUND\n\t\t\t\t\tfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\n\t\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\t\t\t\t#else\n\t\t\t\t\tfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t#endif\n\t\t\t\tspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\n\t\t\t\tvec3 spotHalfVector = normalize( spotVector + viewPosition );\n\t\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\t\tfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\t\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n\t\t\t}\n\t\t}\n\t#endif\n\t#if MAX_DIR_LIGHTS > 0\n\t\tvec3 dirDiffuse = vec3( 0.0 );\n\t\tvec3 dirSpecular = vec3( 0.0 );\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\n\t\t\t\tfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n\t\t\t#endif\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\t\t}\n\t#endif\n\t#if MAX_HEMI_LIGHTS > 0\n\t\tvec3 hemiDiffuse = vec3( 0.0 );\n\t\tvec3 hemiSpecular = vec3( 0.0 );\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\t\t\themiDiffuse += diffuse * hemiColor;\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\t\tfloat hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\t\t\tvec3 lVectorGround = -lVector;\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\t\tfloat hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\t\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\t\t}\n\t#endif\n\tvec3 totalDiffuse = vec3( 0.0 );\n\tvec3 totalSpecular = vec3( 0.0 );\n\t#if MAX_DIR_LIGHTS > 0\n\t\ttotalDiffuse += dirDiffuse;\n\t\ttotalSpecular += dirSpecular;\n\t#endif\n\t#if MAX_HEMI_LIGHTS > 0\n\t\ttotalDiffuse += hemiDiffuse;\n\t\ttotalSpecular += hemiSpecular;\n\t#endif\n\t#if MAX_POINT_LIGHTS > 0\n\t\ttotalDiffuse += pointDiffuse;\n\t\ttotalSpecular += pointSpecular;\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\ttotalDiffuse += spotDiffuse;\n\t\ttotalSpecular += spotSpecular;\n\t#endif\n\t#ifdef METAL\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\t#else\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\t#endif\n\tif ( enableReflection ) {\n\t\tvec3 vReflect;\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tif ( useRefract ) {\n\t\t\tvReflect = refract( cameraToVertex, normal, refractionRatio );\n\t\t} else {\n\t\t\tvReflect = reflect( cameraToVertex, normal );\n\t\t}\n\t\tvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n\t\t#ifdef GAMMA_INPUT\n\t\t\tcubeColor.xyz *= cubeColor.xyz;\n\t\t#endif\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n\t}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\n\tuniform sampler2D tDisplacement;\n\tuniform float uDisplacementScale;\n\tuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"\t#ifdef USE_SKINNING\n\t\tvNormal = normalize( normalMatrix * skinnedNormal.xyz );\n\t\tvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\n\t\tvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n\t#else\n\t\tvNormal = normalize( normalMatrix * normal );\n\t\tvTangent = normalize( normalMatrix * tangent.xyz );\n\t#endif\n\tvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\n\tvUv = uv * uRepeat + uOffset;\n\tvec3 displacedPosition;\n\t#ifdef VERTEX_TEXTURES\n\t\tif ( enableDisplacement ) {\n\t\t\tvec3 dv = texture2D( tDisplacement, uv ).xyz;\n\t\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\n\t\t\tdisplacedPosition = position + normalize( normal ) * df;\n\t\t} else {\n\t\t\t#ifdef USE_SKINNING\n\t\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\t\t\t\tvec4 skinned = vec4( 0.0 );\n\t\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\n\t\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\n\t\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\t\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\n\t\t\t\tskinned  = bindMatrixInverse * skinned;\n\t\t\t\tdisplacedPosition = skinned.xyz;\n\t\t\t#else\n\t\t\t\tdisplacedPosition = position;\n\t\t\t#endif\n\t\t}\n\t#else\n\t\t#ifdef USE_SKINNING\n\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\t\t\tvec4 skinned = vec4( 0.0 );\n\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\n\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\n\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\n\t\t\tskinned  = bindMatrixInverse * skinned;\n\t\t\tdisplacedPosition = skinned.xyz;\n\t\t#else\n\t\t\tdisplacedPosition = position;\n\t\t#endif\n\t#endif\n\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"\tvWorldPosition = worldPosition.xyz;\n\tvViewPosition = -mvPosition.xyz;\n\t#ifdef USE_SHADOWMAP\n\t\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\t\t}\n\t#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\tvWorldPosition = worldPosition.xyz;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n\t#else\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n\t#endif\n}"].join("\n")}},THREE.WebGLRenderer=function(t){function e(t,e){var r=t.vertices.length,i=e.material;if(i.attributes){void 0===t.__webglCustomAttributesList&&(t.__webglCustomAttributesList=[]);for(var n in i.attributes){var o=i.attributes[n];if(!o.__webglInitialized||o.createUniqueBuffers){o.__webglInitialized=!0;var a=1;"v2"===o.type?a=2:"v3"===o.type?a=3:"v4"===o.type?a=4:"c"===o.type&&(a=3),o.size=a,o.array=new Float32Array(r*a),o.buffer=Q.createBuffer(),o.buffer.belongsToAttribute=n,o.needsUpdate=!0}t.__webglCustomAttributesList.push(o)}}}function r(t,e){var r=e.geometry,a=t.faces3,s=3*a.length,h=1*a.length,l=3*a.length,a=i(e,t),c=o(a),u=n(a),f=!!a.vertexColors&&a.vertexColors;if(t.__vertexArray=new Float32Array(3*s),u&&(t.__normalArray=new Float32Array(3*s)),r.hasTangents&&(t.__tangentArray=new Float32Array(4*s)),f&&(t.__colorArray=new Float32Array(3*s)),c&&(0<r.faceVertexUvs.length&&(t.__uvArray=new Float32Array(2*s)),1<r.faceVertexUvs.length&&(t.__uv2Array=new Float32Array(2*s))),e.geometry.skinWeights.length&&e.geometry.skinIndices.length&&(t.__skinIndexArray=new Float32Array(4*s),t.__skinWeightArray=new Float32Array(4*s)),r=null!==rt&&21845<h?Uint32Array:Uint16Array,t.__typeArray=r,t.__faceArray=new r(3*h),t.__lineArray=new r(2*l),t.numMorphTargets)for(t.__morphTargetsArrays=[],r=0,c=t.numMorphTargets;r<c;r++)t.__morphTargetsArrays.push(new Float32Array(3*s));if(t.numMorphNormals)for(t.__morphNormalsArrays=[],r=0,c=t.numMorphNormals;r<c;r++)t.__morphNormalsArrays.push(new Float32Array(3*s));if(t.__webglFaceCount=3*h,t.__webglLineCount=2*l,a.attributes){void 0===t.__webglCustomAttributesList&&(t.__webglCustomAttributesList=[]);for(var E in a.attributes){var p,h=a.attributes[E],l={};for(p in h)l[p]=h[p];l.__webglInitialized&&!l.createUniqueBuffers||(l.__webglInitialized=!0,r=1,"v2"===l.type?r=2:"v3"===l.type?r=3:"v4"===l.type?r=4:"c"===l.type&&(r=3),l.size=r,l.array=new Float32Array(s*r),l.buffer=Q.createBuffer(),l.buffer.belongsToAttribute=E,h.needsUpdate=!0,l.__original=h),t.__webglCustomAttributesList.push(l)}}t.__inittedArrays=!0}function i(t,e){return t.material instanceof THREE.MeshFaceMaterial?t.material.materials[e.materialIndex]:t.material}function n(t){return!(t instanceof THREE.MeshBasicMaterial&&!t.envMap||t instanceof THREE.MeshDepthMaterial)&&(t&&void 0!==t.shading&&t.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading)}function o(t){return!!(t.map||t.lightMap||t.bumpMap||t.normalMap||t.specularMap||t.alphaMap||t instanceof THREE.ShaderMaterial)}function a(t){for(var e in t.attributes){var r="index"===e?Q.ELEMENT_ARRAY_BUFFER:Q.ARRAY_BUFFER,i=t.attributes[e];i.buffer=Q.createBuffer(),Q.bindBuffer(r,i.buffer),Q.bufferData(r,i.array,Q.STATIC_DRAW)}}function s(t,e,r,i){for(var n in e){var o=e[n],a=r[n];if(0<=o)if(a){var s=a.itemSize;Q.bindBuffer(Q.ARRAY_BUFFER,a.buffer),l(o),Q.vertexAttribPointer(o,s,Q.FLOAT,!1,0,i*s*4)}else t.defaultAttributeValues&&(2===t.defaultAttributeValues[n].length?Q.vertexAttrib2fv(o,t.defaultAttributeValues[n]):3===t.defaultAttributeValues[n].length&&Q.vertexAttrib3fv(o,t.defaultAttributeValues[n]))}c()}function h(){for(var t=0,e=Ct.length;t<e;t++)Ct[t]=0}function l(t){Ct[t]=1,0===At[t]&&(Q.enableVertexAttribArray(t),At[t]=1)}function c(){for(var t=0,e=At.length;t<e;t++)At[t]!==Ct[t]&&(Q.disableVertexAttribArray(t),At[t]=0)}function u(t,e){return t.z!==e.z?e.z-t.z:t.id-e.id}function f(t,e){return t.z!==e.z?t.z-e.z:t.id-e.id}function E(t,e){return e[0]-t[0]}function p(t,e,s){if(!1!==e.visible){var h=t.__webglObjects[e.id];if(h&&(!1===e.frustumCulled||!0===Lt.intersectsObject(e))){var l,c,u,f=e.geometry;if(f instanceof THREE.BufferGeometry){var d,m,g=Q.DYNAMIC_DRAW,T=f.attributes;for(d in T)m=T[d],m.needsUpdate&&("index"===d?(Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,m.buffer),Q.bufferData(Q.ELEMENT_ARRAY_BUFFER,m.array,g)):(Q.bindBuffer(Q.ARRAY_BUFFER,m.buffer),Q.bufferData(Q.ARRAY_BUFFER,m.array,g)),m.needsUpdate=!1)}else if(e instanceof THREE.Mesh){(f.buffersNeedUpdate||f.groupsNeedUpdate)&&(f instanceof THREE.BufferGeometry?a(f):e instanceof THREE.Mesh&&v(t,e,f));for(var y=0,H=f.geometryGroupsList.length;y<H;y++)if(l=f.geometryGroupsList[y],u=i(e,l),(f.buffersNeedUpdate||f.groupsNeedUpdate)&&r(l,e),c=u.attributes&&R(u),f.verticesNeedUpdate||f.morphTargetsNeedUpdate||f.elementsNeedUpdate||f.uvsNeedUpdate||f.normalsNeedUpdate||f.colorsNeedUpdate||f.tangentsNeedUpdate||c){var _=l,b=e,w=Q.DYNAMIC_DRAW,M=!f.dynamic,S=u;if(_.__inittedArrays){var C=n(S),A=!!S.vertexColors&&S.vertexColors,L=o(S),P=C===THREE.SmoothShading,F=void 0,D=void 0,U=void 0,V=void 0,z=void 0,B=void 0,k=void 0,N=void 0,O=void 0,I=void 0,G=void 0,W=void 0,j=void 0,X=void 0,Y=void 0,q=void 0,J=void 0,$=void 0,tt=void 0,et=void 0,rt=void 0,nt=void 0,ot=void 0,at=void 0,st=void 0,ht=void 0,lt=void 0,ct=void 0,ut=void 0,ft=void 0,Et=void 0,pt=void 0,dt=void 0,mt=void 0,gt=void 0,Tt=void 0,vt=void 0,yt=void 0,Rt=void 0,xt=void 0,Ht=0,_t=0,bt=0,wt=0,Mt=0,St=0,Ct=0,At=0,Ut=0,Vt=0,zt=0,Bt=0,kt=void 0,Nt=_.__vertexArray,Ot=_.__uvArray,It=_.__uv2Array,Gt=_.__normalArray,Wt=_.__tangentArray,jt=_.__colorArray,Xt=_.__skinIndexArray,Yt=_.__skinWeightArray,qt=_.__morphTargetsArrays,Kt=_.__morphNormalsArrays,Zt=_.__webglCustomAttributesList,Qt=void 0,Jt=_.__faceArray,$t=_.__lineArray,te=b.geometry,ee=te.elementsNeedUpdate,re=te.uvsNeedUpdate,ie=te.normalsNeedUpdate,ne=te.tangentsNeedUpdate,oe=te.colorsNeedUpdate,ae=te.morphTargetsNeedUpdate,se=te.vertices,he=_.faces3,le=te.faces,ce=te.faceVertexUvs[0],ue=te.faceVertexUvs[1],fe=te.skinIndices,Ee=te.skinWeights,pe=te.morphTargets,de=te.morphNormals;if(te.verticesNeedUpdate){for(F=0,D=he.length;F<D;F++)V=le[he[F]],W=se[V.a],j=se[V.b],X=se[V.c],Nt[_t]=W.x,Nt[_t+1]=W.y,Nt[_t+2]=W.z,Nt[_t+3]=j.x,Nt[_t+4]=j.y,Nt[_t+5]=j.z,Nt[_t+6]=X.x,Nt[_t+7]=X.y,Nt[_t+8]=X.z,_t+=9;Q.bindBuffer(Q.ARRAY_BUFFER,_.__webglVertexBuffer),Q.bufferData(Q.ARRAY_BUFFER,Nt,w)}if(ae)for(gt=0,Tt=pe.length;gt<Tt;gt++){for(F=zt=0,D=he.length;F<D;F++)Rt=he[F],V=le[Rt],W=pe[gt].vertices[V.a],j=pe[gt].vertices[V.b],X=pe[gt].vertices[V.c],vt=qt[gt],vt[zt]=W.x,vt[zt+1]=W.y,vt[zt+2]=W.z,vt[zt+3]=j.x,vt[zt+4]=j.y,vt[zt+5]=j.z,vt[zt+6]=X.x,vt[zt+7]=X.y,vt[zt+8]=X.z,S.morphNormals&&(P?(xt=de[gt].vertexNormals[Rt],$=xt.a,tt=xt.b,et=xt.c):et=tt=$=de[gt].faceNormals[Rt],yt=Kt[gt],yt[zt]=$.x,yt[zt+1]=$.y,yt[zt+2]=$.z,yt[zt+3]=tt.x,yt[zt+4]=tt.y,yt[zt+5]=tt.z,yt[zt+6]=et.x,yt[zt+7]=et.y,yt[zt+8]=et.z),zt+=9;Q.bindBuffer(Q.ARRAY_BUFFER,_.__webglMorphTargetsBuffers[gt]),Q.bufferData(Q.ARRAY_BUFFER,qt[gt],w),S.morphNormals&&(Q.bindBuffer(Q.ARRAY_BUFFER,_.__webglMorphNormalsBuffers[gt]),Q.bufferData(Q.ARRAY_BUFFER,Kt[gt],w))}if(Ee.length){for(F=0,D=he.length;F<D;F++)V=le[he[F]],at=Ee[V.a],st=Ee[V.b],ht=Ee[V.c],Yt[Vt]=at.x,Yt[Vt+1]=at.y,Yt[Vt+2]=at.z,Yt[Vt+3]=at.w,Yt[Vt+4]=st.x,Yt[Vt+5]=st.y,Yt[Vt+6]=st.z,Yt[Vt+7]=st.w,Yt[Vt+8]=ht.x,Yt[Vt+9]=ht.y,Yt[Vt+10]=ht.z,Yt[Vt+11]=ht.w,lt=fe[V.a],ct=fe[V.b],ut=fe[V.c],Xt[Vt]=lt.x,Xt[Vt+1]=lt.y,Xt[Vt+2]=lt.z,Xt[Vt+3]=lt.w,Xt[Vt+4]=ct.x,Xt[Vt+5]=ct.y,Xt[Vt+6]=ct.z,Xt[Vt+7]=ct.w,Xt[Vt+8]=ut.x,Xt[Vt+9]=ut.y,Xt[Vt+10]=ut.z,Xt[Vt+11]=ut.w,Vt+=12;0<Vt&&(Q.bindBuffer(Q.ARRAY_BUFFER,_.__webglSkinIndicesBuffer),Q.bufferData(Q.ARRAY_BUFFER,Xt,w),Q.bindBuffer(Q.ARRAY_BUFFER,_.__webglSkinWeightsBuffer),Q.bufferData(Q.ARRAY_BUFFER,Yt,w))}if(oe&&A){for(F=0,D=he.length;F<D;F++)V=le[he[F]],k=V.vertexColors,N=V.color,3===k.length&&A===THREE.VertexColors?(rt=k[0],nt=k[1],ot=k[2]):ot=nt=rt=N,jt[Ut]=rt.r,jt[Ut+1]=rt.g,jt[Ut+2]=rt.b,jt[Ut+3]=nt.r,jt[Ut+4]=nt.g,jt[Ut+5]=nt.b,jt[Ut+6]=ot.r,jt[Ut+7]=ot.g,jt[Ut+8]=ot.b,Ut+=9;0<Ut&&(Q.bindBuffer(Q.ARRAY_BUFFER,_.__webglColorBuffer),Q.bufferData(Q.ARRAY_BUFFER,jt,w))}if(ne&&te.hasTangents){for(F=0,D=he.length;F<D;F++)V=le[he[F]],O=V.vertexTangents,Y=O[0],q=O[1],J=O[2],Wt[Ct]=Y.x,Wt[Ct+1]=Y.y,Wt[Ct+2]=Y.z,Wt[Ct+3]=Y.w,Wt[Ct+4]=q.x,Wt[Ct+5]=q.y,Wt[Ct+6]=q.z,Wt[Ct+7]=q.w,Wt[Ct+8]=J.x,Wt[Ct+9]=J.y,Wt[Ct+10]=J.z,Wt[Ct+11]=J.w,Ct+=12;Q.bindBuffer(Q.ARRAY_BUFFER,_.__webglTangentBuffer),Q.bufferData(Q.ARRAY_BUFFER,Wt,w)}if(ie&&C){for(F=0,D=he.length;F<D;F++)if(V=le[he[F]],z=V.vertexNormals,B=V.normal,3===z.length&&P)for(ft=0;3>ft;ft++)pt=z[ft],Gt[St]=pt.x,Gt[St+1]=pt.y,Gt[St+2]=pt.z,St+=3;else for(ft=0;3>ft;ft++)Gt[St]=B.x,Gt[St+1]=B.y,Gt[St+2]=B.z,St+=3;Q.bindBuffer(Q.ARRAY_BUFFER,_.__webglNormalBuffer),Q.bufferData(Q.ARRAY_BUFFER,Gt,w)}if(re&&ce&&L){for(F=0,D=he.length;F<D;F++)if(U=he[F],I=ce[U],void 0!==I)for(ft=0;3>ft;ft++)dt=I[ft],Ot[bt]=dt.x,Ot[bt+1]=dt.y,bt+=2;0<bt&&(Q.bindBuffer(Q.ARRAY_BUFFER,_.__webglUVBuffer),Q.bufferData(Q.ARRAY_BUFFER,Ot,w))}if(re&&ue&&L){for(F=0,D=he.length;F<D;F++)if(U=he[F],G=ue[U],void 0!==G)for(ft=0;3>ft;ft++)mt=G[ft],It[wt]=mt.x,It[wt+1]=mt.y,wt+=2;0<wt&&(Q.bindBuffer(Q.ARRAY_BUFFER,_.__webglUV2Buffer),Q.bufferData(Q.ARRAY_BUFFER,It,w))}if(ee){for(F=0,D=he.length;F<D;F++)Jt[Mt]=Ht,Jt[Mt+1]=Ht+1,Jt[Mt+2]=Ht+2,Mt+=3,$t[At]=Ht,$t[At+1]=Ht+1,$t[At+2]=Ht,$t[At+3]=Ht+2,$t[At+4]=Ht+1,$t[At+5]=Ht+2,At+=6,Ht+=3;Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,_.__webglFaceBuffer),Q.bufferData(Q.ELEMENT_ARRAY_BUFFER,Jt,w),Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,_.__webglLineBuffer),Q.bufferData(Q.ELEMENT_ARRAY_BUFFER,$t,w)}if(Zt)for(ft=0,Et=Zt.length;ft<Et;ft++)if(Qt=Zt[ft],Qt.__original.needsUpdate){if(Bt=0,1===Qt.size){if(void 0===Qt.boundTo||"vertices"===Qt.boundTo)for(F=0,D=he.length;F<D;F++)V=le[he[F]],Qt.array[Bt]=Qt.value[V.a],Qt.array[Bt+1]=Qt.value[V.b],Qt.array[Bt+2]=Qt.value[V.c],Bt+=3;else if("faces"===Qt.boundTo)for(F=0,D=he.length;F<D;F++)kt=Qt.value[he[F]],Qt.array[Bt]=kt,Qt.array[Bt+1]=kt,Qt.array[Bt+2]=kt,Bt+=3}else if(2===Qt.size){if(void 0===Qt.boundTo||"vertices"===Qt.boundTo)for(F=0,D=he.length;F<D;F++)V=le[he[F]],W=Qt.value[V.a],j=Qt.value[V.b],X=Qt.value[V.c],Qt.array[Bt]=W.x,Qt.array[Bt+1]=W.y,Qt.array[Bt+2]=j.x,Qt.array[Bt+3]=j.y,Qt.array[Bt+4]=X.x,Qt.array[Bt+5]=X.y,Bt+=6;else if("faces"===Qt.boundTo)for(F=0,D=he.length;F<D;F++)X=j=W=kt=Qt.value[he[F]],Qt.array[Bt]=W.x,Qt.array[Bt+1]=W.y,Qt.array[Bt+2]=j.x,Qt.array[Bt+3]=j.y,Qt.array[Bt+4]=X.x,Qt.array[Bt+5]=X.y,Bt+=6}else if(3===Qt.size){var me;if(me="c"===Qt.type?["r","g","b"]:["x","y","z"],void 0===Qt.boundTo||"vertices"===Qt.boundTo)for(F=0,D=he.length;F<D;F++)V=le[he[F]],W=Qt.value[V.a],j=Qt.value[V.b],X=Qt.value[V.c],Qt.array[Bt]=W[me[0]],Qt.array[Bt+1]=W[me[1]],Qt.array[Bt+2]=W[me[2]],Qt.array[Bt+3]=j[me[0]],Qt.array[Bt+4]=j[me[1]],Qt.array[Bt+5]=j[me[2]],Qt.array[Bt+6]=X[me[0]],Qt.array[Bt+7]=X[me[1]],Qt.array[Bt+8]=X[me[2]],Bt+=9;else if("faces"===Qt.boundTo)for(F=0,D=he.length;F<D;F++)X=j=W=kt=Qt.value[he[F]],Qt.array[Bt]=W[me[0]],Qt.array[Bt+1]=W[me[1]],Qt.array[Bt+2]=W[me[2]],Qt.array[Bt+3]=j[me[0]],Qt.array[Bt+4]=j[me[1]],Qt.array[Bt+5]=j[me[2]],Qt.array[Bt+6]=X[me[0]],Qt.array[Bt+7]=X[me[1]],Qt.array[Bt+8]=X[me[2]],Bt+=9;else if("faceVertices"===Qt.boundTo)for(F=0,D=he.length;F<D;F++)kt=Qt.value[he[F]],W=kt[0],j=kt[1],X=kt[2],Qt.array[Bt]=W[me[0]],Qt.array[Bt+1]=W[me[1]],Qt.array[Bt+2]=W[me[2]],Qt.array[Bt+3]=j[me[0]],Qt.array[Bt+4]=j[me[1]],Qt.array[Bt+5]=j[me[2]],Qt.array[Bt+6]=X[me[0]],Qt.array[Bt+7]=X[me[1]],Qt.array[Bt+8]=X[me[2]],Bt+=9}else if(4===Qt.size)if(void 0===Qt.boundTo||"vertices"===Qt.boundTo)for(F=0,D=he.length;F<D;F++)V=le[he[F]],W=Qt.value[V.a],j=Qt.value[V.b],X=Qt.value[V.c],Qt.array[Bt]=W.x,Qt.array[Bt+1]=W.y,Qt.array[Bt+2]=W.z,Qt.array[Bt+3]=W.w,Qt.array[Bt+4]=j.x,Qt.array[Bt+5]=j.y,Qt.array[Bt+6]=j.z,Qt.array[Bt+7]=j.w,Qt.array[Bt+8]=X.x,Qt.array[Bt+9]=X.y,Qt.array[Bt+10]=X.z,Qt.array[Bt+11]=X.w,Bt+=12;else if("faces"===Qt.boundTo)for(F=0,D=he.length;F<D;F++)X=j=W=kt=Qt.value[he[F]],Qt.array[Bt]=W.x,Qt.array[Bt+1]=W.y,Qt.array[Bt+2]=W.z,Qt.array[Bt+3]=W.w,Qt.array[Bt+4]=j.x,Qt.array[Bt+5]=j.y,Qt.array[Bt+6]=j.z,Qt.array[Bt+7]=j.w,Qt.array[Bt+8]=X.x,Qt.array[Bt+9]=X.y,Qt.array[Bt+10]=X.z,Qt.array[Bt+11]=X.w,Bt+=12;else if("faceVertices"===Qt.boundTo)for(F=0,D=he.length;F<D;F++)kt=Qt.value[he[F]],W=kt[0],j=kt[1],X=kt[2],Qt.array[Bt]=W.x,Qt.array[Bt+1]=W.y,Qt.array[Bt+2]=W.z,Qt.array[Bt+3]=W.w,Qt.array[Bt+4]=j.x,Qt.array[Bt+5]=j.y,Qt.array[Bt+6]=j.z,Qt.array[Bt+7]=j.w,Qt.array[Bt+8]=X.x,Qt.array[Bt+9]=X.y,Qt.array[Bt+10]=X.z,Qt.array[Bt+11]=X.w,Bt+=12;Q.bindBuffer(Q.ARRAY_BUFFER,Qt.buffer),Q.bufferData(Q.ARRAY_BUFFER,Qt.array,w)}M&&(delete _.__inittedArrays,
delete _.__colorArray,delete _.__normalArray,delete _.__tangentArray,delete _.__uvArray,delete _.__uv2Array,delete _.__faceArray,delete _.__vertexArray,delete _.__lineArray,delete _.__skinIndexArray,delete _.__skinWeightArray)}}f.verticesNeedUpdate=!1,f.morphTargetsNeedUpdate=!1,f.elementsNeedUpdate=!1,f.uvsNeedUpdate=!1,f.normalsNeedUpdate=!1,f.colorsNeedUpdate=!1,f.tangentsNeedUpdate=!1,f.buffersNeedUpdate=!1,u.attributes&&x(u)}else if(e instanceof THREE.Line){if(u=i(e,f),c=u.attributes&&R(u),f.verticesNeedUpdate||f.colorsNeedUpdate||f.lineDistancesNeedUpdate||c){var ge,Te,ve,ye,Re,xe,He,_e,be,we,Me,Se,Ce=Q.DYNAMIC_DRAW,Ae=f.vertices,Le=f.colors,Pe=f.lineDistances,Fe=Ae.length,De=Le.length,Ue=Pe.length,Ve=f.__vertexArray,ze=f.__colorArray,Be=f.__lineDistanceArray,ke=f.colorsNeedUpdate,Ne=f.lineDistancesNeedUpdate,Oe=f.__webglCustomAttributesList;if(f.verticesNeedUpdate){for(ge=0;ge<Fe;ge++)ye=Ae[ge],Re=3*ge,Ve[Re]=ye.x,Ve[Re+1]=ye.y,Ve[Re+2]=ye.z;Q.bindBuffer(Q.ARRAY_BUFFER,f.__webglVertexBuffer),Q.bufferData(Q.ARRAY_BUFFER,Ve,Ce)}if(ke){for(Te=0;Te<De;Te++)xe=Le[Te],Re=3*Te,ze[Re]=xe.r,ze[Re+1]=xe.g,ze[Re+2]=xe.b;Q.bindBuffer(Q.ARRAY_BUFFER,f.__webglColorBuffer),Q.bufferData(Q.ARRAY_BUFFER,ze,Ce)}if(Ne){for(ve=0;ve<Ue;ve++)Be[ve]=Pe[ve];Q.bindBuffer(Q.ARRAY_BUFFER,f.__webglLineDistanceBuffer),Q.bufferData(Q.ARRAY_BUFFER,Be,Ce)}if(Oe)for(He=0,_e=Oe.length;He<_e;He++)if(Se=Oe[He],Se.needsUpdate&&(void 0===Se.boundTo||"vertices"===Se.boundTo)){if(Re=0,we=Se.value.length,1===Se.size)for(be=0;be<we;be++)Se.array[be]=Se.value[be];else if(2===Se.size)for(be=0;be<we;be++)Me=Se.value[be],Se.array[Re]=Me.x,Se.array[Re+1]=Me.y,Re+=2;else if(3===Se.size)if("c"===Se.type)for(be=0;be<we;be++)Me=Se.value[be],Se.array[Re]=Me.r,Se.array[Re+1]=Me.g,Se.array[Re+2]=Me.b,Re+=3;else for(be=0;be<we;be++)Me=Se.value[be],Se.array[Re]=Me.x,Se.array[Re+1]=Me.y,Se.array[Re+2]=Me.z,Re+=3;else if(4===Se.size)for(be=0;be<we;be++)Me=Se.value[be],Se.array[Re]=Me.x,Se.array[Re+1]=Me.y,Se.array[Re+2]=Me.z,Se.array[Re+3]=Me.w,Re+=4;Q.bindBuffer(Q.ARRAY_BUFFER,Se.buffer),Q.bufferData(Q.ARRAY_BUFFER,Se.array,Ce)}}f.verticesNeedUpdate=!1,f.colorsNeedUpdate=!1,f.lineDistancesNeedUpdate=!1,u.attributes&&x(u)}else if(e instanceof THREE.PointCloud){if(u=i(e,f),c=u.attributes&&R(u),f.verticesNeedUpdate||f.colorsNeedUpdate||e.sortParticles||c){var Ie,Ge,We,je,Xe,Ye,qe,Ke,Ze,Qe,Je,$e,tr=Q.DYNAMIC_DRAW,er=f.vertices,rr=er.length,ir=f.colors,nr=ir.length,or=f.__vertexArray,ar=f.__colorArray,sr=f.__sortArray,hr=f.verticesNeedUpdate,lr=f.colorsNeedUpdate,cr=f.__webglCustomAttributesList;if(e.sortParticles){for(Ft.copy(Pt),Ft.multiply(e.matrixWorld),Ie=0;Ie<rr;Ie++)We=er[Ie],Dt.copy(We),Dt.applyProjection(Ft),sr[Ie]=[Dt.z,Ie];for(sr.sort(E),Ie=0;Ie<rr;Ie++)We=er[sr[Ie][1]],je=3*Ie,or[je]=We.x,or[je+1]=We.y,or[je+2]=We.z;for(Ge=0;Ge<nr;Ge++)je=3*Ge,Ye=ir[sr[Ge][1]],ar[je]=Ye.r,ar[je+1]=Ye.g,ar[je+2]=Ye.b;if(cr)for(qe=0,Ke=cr.length;qe<Ke;qe++)if($e=cr[qe],void 0===$e.boundTo||"vertices"===$e.boundTo)if(je=0,Qe=$e.value.length,1===$e.size)for(Ze=0;Ze<Qe;Ze++)Xe=sr[Ze][1],$e.array[Ze]=$e.value[Xe];else if(2===$e.size)for(Ze=0;Ze<Qe;Ze++)Xe=sr[Ze][1],Je=$e.value[Xe],$e.array[je]=Je.x,$e.array[je+1]=Je.y,je+=2;else if(3===$e.size)if("c"===$e.type)for(Ze=0;Ze<Qe;Ze++)Xe=sr[Ze][1],Je=$e.value[Xe],$e.array[je]=Je.r,$e.array[je+1]=Je.g,$e.array[je+2]=Je.b,je+=3;else for(Ze=0;Ze<Qe;Ze++)Xe=sr[Ze][1],Je=$e.value[Xe],$e.array[je]=Je.x,$e.array[je+1]=Je.y,$e.array[je+2]=Je.z,je+=3;else if(4===$e.size)for(Ze=0;Ze<Qe;Ze++)Xe=sr[Ze][1],Je=$e.value[Xe],$e.array[je]=Je.x,$e.array[je+1]=Je.y,$e.array[je+2]=Je.z,$e.array[je+3]=Je.w,je+=4}else{if(hr)for(Ie=0;Ie<rr;Ie++)We=er[Ie],je=3*Ie,or[je]=We.x,or[je+1]=We.y,or[je+2]=We.z;if(lr)for(Ge=0;Ge<nr;Ge++)Ye=ir[Ge],je=3*Ge,ar[je]=Ye.r,ar[je+1]=Ye.g,ar[je+2]=Ye.b;if(cr)for(qe=0,Ke=cr.length;qe<Ke;qe++)if($e=cr[qe],$e.needsUpdate&&(void 0===$e.boundTo||"vertices"===$e.boundTo))if(Qe=$e.value.length,je=0,1===$e.size)for(Ze=0;Ze<Qe;Ze++)$e.array[Ze]=$e.value[Ze];else if(2===$e.size)for(Ze=0;Ze<Qe;Ze++)Je=$e.value[Ze],$e.array[je]=Je.x,$e.array[je+1]=Je.y,je+=2;else if(3===$e.size)if("c"===$e.type)for(Ze=0;Ze<Qe;Ze++)Je=$e.value[Ze],$e.array[je]=Je.r,$e.array[je+1]=Je.g,$e.array[je+2]=Je.b,je+=3;else for(Ze=0;Ze<Qe;Ze++)Je=$e.value[Ze],$e.array[je]=Je.x,$e.array[je+1]=Je.y,$e.array[je+2]=Je.z,je+=3;else if(4===$e.size)for(Ze=0;Ze<Qe;Ze++)Je=$e.value[Ze],$e.array[je]=Je.x,$e.array[je+1]=Je.y,$e.array[je+2]=Je.z,$e.array[je+3]=Je.w,je+=4}if((hr||e.sortParticles)&&(Q.bindBuffer(Q.ARRAY_BUFFER,f.__webglVertexBuffer),Q.bufferData(Q.ARRAY_BUFFER,or,tr)),(lr||e.sortParticles)&&(Q.bindBuffer(Q.ARRAY_BUFFER,f.__webglColorBuffer),Q.bufferData(Q.ARRAY_BUFFER,ar,tr)),cr)for(qe=0,Ke=cr.length;qe<Ke;qe++)$e=cr[qe],($e.needsUpdate||e.sortParticles)&&(Q.bindBuffer(Q.ARRAY_BUFFER,$e.buffer),Q.bufferData(Q.ARRAY_BUFFER,$e.array,tr))}f.verticesNeedUpdate=!1,f.colorsNeedUpdate=!1,u.attributes&&x(u)}for(var ur=0,fr=h.length;ur<fr;ur++){var Er=h[ur],pr=Er,dr=pr.object,mr=pr.buffer,gr=dr.geometry,Tr=dr.material;Tr instanceof THREE.MeshFaceMaterial?(Tr=Tr.materials[gr instanceof THREE.BufferGeometry?0:mr.materialIndex],Tr.transparent?(pr.material=Tr,Z.push(pr)):(pr.material=Tr,K.push(pr))):Tr&&(Tr.transparent?(pr.material=Tr,Z.push(pr)):(pr.material=Tr,K.push(pr))),Er.render=!0,!0===it.sortObjects&&(null!==e.renderDepth?Er.z=e.renderDepth:(Dt.setFromMatrixPosition(e.matrixWorld),Dt.applyProjection(Pt),Er.z=Dt.z))}}for(ur=0,fr=e.children.length;ur<fr;ur++)p(t,e.children[ur],s)}}function d(t,e,r){if(0!==t.length)for(var i=0,n=t.length;i<n;i++)lt=ot=null,st=ht=ft=ut=Tt=gt=Et=-1,Vt=!0,t[i].render(e,r,Mt,St),lt=ot=null,st=ht=ft=ut=Tt=gt=Et=-1,Vt=!0}function m(t,e,r,i,n,o){for(var a,s,h,l=t.length-1;-1!==l;l--){if(a=t[l],s=a.object,h=a.buffer,M(s,e),o)a=o;else{if(a=a.material,!a)continue;n&&it.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst),it.setDepthTest(a.depthTest),it.setDepthWrite(a.depthWrite),L(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}it.setMaterialFaces(a),h instanceof THREE.BufferGeometry?it.renderBufferDirect(e,r,i,a,h,s):it.renderBuffer(e,r,i,a,h,s)}}function g(t,e,r,i,n,o,a){for(var s,h,l=0,c=t.length;l<c;l++)if(s=t[l],h=s.object,h.visible){if(a)s=a;else{if(s=s[e],!s)continue;o&&it.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst),it.setDepthTest(s.depthTest),it.setDepthWrite(s.depthWrite),L(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits)}it.renderImmediateObject(r,i,n,s,h)}}function T(t){var e=t.object.material;e.transparent?(t.transparent=e,t.opaque=null):(t.opaque=e,t.transparent=null)}function v(t,e,i){var n,o=!1;n=e.material,(void 0===i.geometryGroups||i.groupsNeedUpdate)&&(delete t.__webglObjects[e.id],i.makeGroups(n instanceof THREE.MeshFaceMaterial,rt?4294967296:65535),i.groupsNeedUpdate=!1);for(var a=0,s=i.geometryGroupsList.length;a<s;a++){if(n=i.geometryGroupsList[a],n.__webglVertexBuffer)o=!1;else{o=n,o.__webglVertexBuffer=Q.createBuffer(),o.__webglNormalBuffer=Q.createBuffer(),o.__webglTangentBuffer=Q.createBuffer(),o.__webglColorBuffer=Q.createBuffer(),o.__webglUVBuffer=Q.createBuffer(),o.__webglUV2Buffer=Q.createBuffer(),o.__webglSkinIndicesBuffer=Q.createBuffer(),o.__webglSkinWeightsBuffer=Q.createBuffer(),o.__webglFaceBuffer=Q.createBuffer(),o.__webglLineBuffer=Q.createBuffer();var h=void 0,l=void 0;if(o.numMorphTargets)for(o.__webglMorphTargetsBuffers=[],h=0,l=o.numMorphTargets;h<l;h++)o.__webglMorphTargetsBuffers.push(Q.createBuffer());if(o.numMorphNormals)for(o.__webglMorphNormalsBuffers=[],h=0,l=o.numMorphNormals;h<l;h++)o.__webglMorphNormalsBuffers.push(Q.createBuffer());it.info.memory.geometries++,r(n,e),i.verticesNeedUpdate=!0,i.morphTargetsNeedUpdate=!0,i.elementsNeedUpdate=!0,i.uvsNeedUpdate=!0,i.normalsNeedUpdate=!0,i.tangentsNeedUpdate=!0,o=i.colorsNeedUpdate=!0}(o||void 0===e.__webglActive)&&y(t.__webglObjects,n,e)}e.__webglActive=!0}function y(t,e,r){var i=r.id;t[i]=t[i]||[],t[i].push({id:i,buffer:e,object:r,material:null,z:0})}function R(t){for(var e in t.attributes)if(t.attributes[e].needsUpdate)return!0;return!1}function x(t){for(var e in t.attributes)t.attributes[e].needsUpdate=!1}function H(t,e){if(t instanceof THREE.Mesh||t instanceof THREE.PointCloud||t instanceof THREE.Line)delete e.__webglObjects[t.id];else if(t instanceof THREE.ImmediateRenderObject||t.immediateRenderCallback)for(var r=e.__webglObjectsImmediate,i=r.length-1;0<=i;i--)r[i].object===t&&r.splice(i,1);delete t.__webglActive}function _(t,e,r,i,n){ct=0,i.needsUpdate&&(i.program&&ee(i),it.initMaterial(i,e,r,n),i.needsUpdate=!1),i.morphTargets&&!n.__webglMorphTargetInfluences&&(n.__webglMorphTargetInfluences=new Float32Array(it.maxMorphTargets));var o=!1,a=!1,s=!1,h=i.program,l=h.uniforms,c=i.__webglShader.uniforms;if(h.id!==ot&&(Q.useProgram(h.program),ot=h.id,s=a=o=!0),i.id!==st&&(-1===st&&(s=!0),st=i.id,a=!0),(o||t!==lt)&&(Q.uniformMatrix4fv(l.projectionMatrix,!1,t.projectionMatrix.elements),X&&Q.uniform1f(l.logDepthBufFC,2/(Math.log(t.far+1)/Math.LN2)),t!==lt&&(lt=t),(i instanceof THREE.ShaderMaterial||i instanceof THREE.MeshPhongMaterial||i.envMap)&&null!==l.cameraPosition&&(Dt.setFromMatrixPosition(t.matrixWorld),Q.uniform3f(l.cameraPosition,Dt.x,Dt.y,Dt.z)),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.ShaderMaterial||i.skinning)&&null!==l.viewMatrix&&Q.uniformMatrix4fv(l.viewMatrix,!1,t.matrixWorldInverse.elements)),i.skinning&&(n.bindMatrix&&null!==l.bindMatrix&&Q.uniformMatrix4fv(l.bindMatrix,!1,n.bindMatrix.elements),n.bindMatrixInverse&&null!==l.bindMatrixInverse&&Q.uniformMatrix4fv(l.bindMatrixInverse,!1,n.bindMatrixInverse.elements),Gt&&n.skeleton&&n.skeleton.useVertexTexture?(null!==l.boneTexture&&(o=w(),Q.uniform1i(l.boneTexture,o),it.setTexture(n.skeleton.boneTexture,o)),null!==l.boneTextureWidth&&Q.uniform1i(l.boneTextureWidth,n.skeleton.boneTextureWidth),null!==l.boneTextureHeight&&Q.uniform1i(l.boneTextureHeight,n.skeleton.boneTextureHeight)):n.skeleton&&n.skeleton.boneMatrices&&null!==l.boneGlobalMatrices&&Q.uniformMatrix4fv(l.boneGlobalMatrices,!1,n.skeleton.boneMatrices)),a){if(r&&i.fog&&(c.fogColor.value=r.color,r instanceof THREE.Fog?(c.fogNear.value=r.near,c.fogFar.value=r.far):r instanceof THREE.FogExp2&&(c.fogDensity.value=r.density)),i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i.lights){if(Vt){var u,f,E,p,s=!0,d=o=0,m=0,g=zt,T=g.directional.colors,v=g.directional.positions,y=g.point.colors,R=g.point.positions,x=g.point.distances,H=g.spot.colors,_=g.spot.positions,M=g.spot.distances,A=g.spot.directions,L=g.spot.anglesCos,F=g.spot.exponents,D=g.hemi.skyColors,U=g.hemi.groundColors,B=g.hemi.positions,k=0,N=0,O=0,I=0,G=0,W=0,j=0,Y=0,q=u=0;for(r=p=q=0,a=e.length;r<a;r++)u=e[r],u.onlyShadow||(f=u.color,E=u.intensity,p=u.distance,u instanceof THREE.AmbientLight?u.visible&&(it.gammaInput?(o+=f.r*f.r,d+=f.g*f.g,m+=f.b*f.b):(o+=f.r,d+=f.g,m+=f.b)):u instanceof THREE.DirectionalLight?(G+=1,u.visible&&(Ut.setFromMatrixPosition(u.matrixWorld),Dt.setFromMatrixPosition(u.target.matrixWorld),Ut.sub(Dt),Ut.normalize(),u=3*k,v[u]=Ut.x,v[u+1]=Ut.y,v[u+2]=Ut.z,it.gammaInput?S(T,u,f,E*E):C(T,u,f,E),k+=1)):u instanceof THREE.PointLight?(W+=1,u.visible&&(q=3*N,it.gammaInput?S(y,q,f,E*E):C(y,q,f,E),Dt.setFromMatrixPosition(u.matrixWorld),R[q]=Dt.x,R[q+1]=Dt.y,R[q+2]=Dt.z,x[N]=p,N+=1)):u instanceof THREE.SpotLight?(j+=1,u.visible&&(q=3*O,it.gammaInput?S(H,q,f,E*E):C(H,q,f,E),Dt.setFromMatrixPosition(u.matrixWorld),_[q]=Dt.x,_[q+1]=Dt.y,_[q+2]=Dt.z,M[O]=p,Ut.copy(Dt),Dt.setFromMatrixPosition(u.target.matrixWorld),Ut.sub(Dt),Ut.normalize(),A[q]=Ut.x,A[q+1]=Ut.y,A[q+2]=Ut.z,L[O]=Math.cos(u.angle),F[O]=u.exponent,O+=1)):u instanceof THREE.HemisphereLight&&(Y+=1,u.visible&&(Ut.setFromMatrixPosition(u.matrixWorld),Ut.normalize(),p=3*I,B[p]=Ut.x,B[p+1]=Ut.y,B[p+2]=Ut.z,f=u.color,u=u.groundColor,it.gammaInput?(E*=E,S(D,p,f,E),S(U,p,u,E)):(C(D,p,f,E),C(U,p,u,E)),I+=1)));for(r=3*k,a=Math.max(T.length,3*G);r<a;r++)T[r]=0;for(r=3*N,a=Math.max(y.length,3*W);r<a;r++)y[r]=0;for(r=3*O,a=Math.max(H.length,3*j);r<a;r++)H[r]=0;for(r=3*I,a=Math.max(D.length,3*Y);r<a;r++)D[r]=0;for(r=3*I,a=Math.max(U.length,3*Y);r<a;r++)U[r]=0;g.directional.length=k,g.point.length=N,g.spot.length=O,g.hemi.length=I,g.ambient[0]=o,g.ambient[1]=d,g.ambient[2]=m,Vt=!1}s?(s=zt,c.ambientLightColor.value=s.ambient,c.directionalLightColor.value=s.directional.colors,c.directionalLightDirection.value=s.directional.positions,c.pointLightColor.value=s.point.colors,c.pointLightPosition.value=s.point.positions,c.pointLightDistance.value=s.point.distances,c.spotLightColor.value=s.spot.colors,c.spotLightPosition.value=s.spot.positions,c.spotLightDistance.value=s.spot.distances,c.spotLightDirection.value=s.spot.directions,c.spotLightAngleCos.value=s.spot.anglesCos,c.spotLightExponent.value=s.spot.exponents,c.hemisphereLightSkyColor.value=s.hemi.skyColors,c.hemisphereLightGroundColor.value=s.hemi.groundColors,c.hemisphereLightDirection.value=s.hemi.positions,b(c,!0)):b(c,!1)}if(i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial){c.opacity.value=i.opacity,it.gammaInput?c.diffuse.value.copyGammaToLinear(i.color):c.diffuse.value=i.color,c.map.value=i.map,c.lightMap.value=i.lightMap,c.specularMap.value=i.specularMap,c.alphaMap.value=i.alphaMap,i.bumpMap&&(c.bumpMap.value=i.bumpMap,c.bumpScale.value=i.bumpScale),i.normalMap&&(c.normalMap.value=i.normalMap,c.normalScale.value.copy(i.normalScale));var K;i.map?K=i.map:i.specularMap?K=i.specularMap:i.normalMap?K=i.normalMap:i.bumpMap?K=i.bumpMap:i.alphaMap&&(K=i.alphaMap),void 0!==K&&(s=K.offset,K=K.repeat,c.offsetRepeat.value.set(s.x,s.y,K.x,K.y)),c.envMap.value=i.envMap,c.flipEnvMap.value=i.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,c.reflectivity.value=i.reflectivity,c.refractionRatio.value=i.refractionRatio,c.combine.value=i.combine,c.useRefract.value=i.envMap&&i.envMap.mapping instanceof THREE.CubeRefractionMapping}if(i instanceof THREE.LineBasicMaterial?(c.diffuse.value=i.color,c.opacity.value=i.opacity):i instanceof THREE.LineDashedMaterial?(c.diffuse.value=i.color,c.opacity.value=i.opacity,c.dashSize.value=i.dashSize,c.totalSize.value=i.dashSize+i.gapSize,c.scale.value=i.scale):i instanceof THREE.PointCloudMaterial?(c.psColor.value=i.color,c.opacity.value=i.opacity,c.size.value=i.size,c.scale.value=z.height/2,c.map.value=i.map):i instanceof THREE.MeshPhongMaterial?(c.shininess.value=i.shininess,it.gammaInput?(c.ambient.value.copyGammaToLinear(i.ambient),c.emissive.value.copyGammaToLinear(i.emissive),c.specular.value.copyGammaToLinear(i.specular)):(c.ambient.value=i.ambient,c.emissive.value=i.emissive,c.specular.value=i.specular),i.wrapAround&&c.wrapRGB.value.copy(i.wrapRGB)):i instanceof THREE.MeshLambertMaterial?(it.gammaInput?(c.ambient.value.copyGammaToLinear(i.ambient),c.emissive.value.copyGammaToLinear(i.emissive)):(c.ambient.value=i.ambient,c.emissive.value=i.emissive),i.wrapAround&&c.wrapRGB.value.copy(i.wrapRGB)):i instanceof THREE.MeshDepthMaterial?(c.mNear.value=t.near,c.mFar.value=t.far,c.opacity.value=i.opacity):i instanceof THREE.MeshNormalMaterial&&(c.opacity.value=i.opacity),n.receiveShadow&&!i._shadowPass&&c.shadowMatrix)for(K=t=0,s=e.length;K<s;K++)r=e[K],r.castShadow&&(r instanceof THREE.SpotLight||r instanceof THREE.DirectionalLight&&!r.shadowCascade)&&(c.shadowMap.value[t]=r.shadowMap,c.shadowMapSize.value[t]=r.shadowMapSize,c.shadowMatrix.value[t]=r.shadowMatrix,c.shadowDarkness.value[t]=r.shadowDarkness,c.shadowBias.value[t]=r.shadowBias,t++);for(e=i.uniformsList,i=0,c=e.length;i<c;i++)if(t=e[i][0],!1!==t.needsUpdate)switch(r=t.type,s=t.value,K=e[i][1],r){case"1i":Q.uniform1i(K,s);break;case"1f":Q.uniform1f(K,s);break;case"2f":Q.uniform2f(K,s[0],s[1]);break;case"3f":Q.uniform3f(K,s[0],s[1],s[2]);break;case"4f":Q.uniform4f(K,s[0],s[1],s[2],s[3]);break;case"1iv":Q.uniform1iv(K,s);break;case"3iv":Q.uniform3iv(K,s);break;case"1fv":Q.uniform1fv(K,s);break;case"2fv":Q.uniform2fv(K,s);break;case"3fv":Q.uniform3fv(K,s);break;case"4fv":Q.uniform4fv(K,s);break;case"Matrix3fv":Q.uniformMatrix3fv(K,!1,s);break;case"Matrix4fv":Q.uniformMatrix4fv(K,!1,s);break;case"i":Q.uniform1i(K,s);break;case"f":Q.uniform1f(K,s);break;case"v2":Q.uniform2f(K,s.x,s.y);break;case"v3":Q.uniform3f(K,s.x,s.y,s.z);break;case"v4":Q.uniform4f(K,s.x,s.y,s.z,s.w);break;case"c":Q.uniform3f(K,s.r,s.g,s.b);break;case"iv1":Q.uniform1iv(K,s);break;case"iv":Q.uniform3iv(K,s);break;case"fv1":Q.uniform1fv(K,s);break;case"fv":Q.uniform3fv(K,s);break;case"v2v":for(void 0===t._array&&(t._array=new Float32Array(2*s.length)),r=0,a=s.length;r<a;r++)o=2*r,t._array[o]=s[r].x,t._array[o+1]=s[r].y;Q.uniform2fv(K,t._array);break;case"v3v":for(void 0===t._array&&(t._array=new Float32Array(3*s.length)),r=0,a=s.length;r<a;r++)o=3*r,t._array[o]=s[r].x,t._array[o+1]=s[r].y,t._array[o+2]=s[r].z;Q.uniform3fv(K,t._array);break;case"v4v":for(void 0===t._array&&(t._array=new Float32Array(4*s.length)),r=0,a=s.length;r<a;r++)o=4*r,t._array[o]=s[r].x,t._array[o+1]=s[r].y,t._array[o+2]=s[r].z,t._array[o+3]=s[r].w;Q.uniform4fv(K,t._array);break;case"m3":Q.uniformMatrix3fv(K,!1,s.elements);break;case"m3v":for(void 0===t._array&&(t._array=new Float32Array(9*s.length)),r=0,a=s.length;r<a;r++)s[r].flattenToArrayOffset(t._array,9*r);Q.uniformMatrix3fv(K,!1,t._array);break;case"m4":Q.uniformMatrix4fv(K,!1,s.elements);break;case"m4v":for(void 0===t._array&&(t._array=new Float32Array(16*s.length)),r=0,a=s.length;r<a;r++)s[r].flattenToArrayOffset(t._array,16*r);Q.uniformMatrix4fv(K,!1,t._array);break;case"t":if(o=s,s=w(),Q.uniform1i(K,s),!o)continue;if(o instanceof THREE.CubeTexture||o.image instanceof Array&&6===o.image.length){if(t=o,K=s,6===t.image.length)if(t.needsUpdate){for(t.image.__webglTextureCube||(t.addEventListener("dispose",Qt),t.image.__webglTextureCube=Q.createTexture(),it.info.memory.textures++),Q.activeTexture(Q.TEXTURE0+K),Q.bindTexture(Q.TEXTURE_CUBE_MAP,t.image.__webglTextureCube),Q.pixelStorei(Q.UNPACK_FLIP_Y_WEBGL,t.flipY),K=t instanceof THREE.CompressedTexture,s=[],r=0;6>r;r++)it.autoScaleCubemaps&&!K?(a=s,o=r,d=t.image[r],g=Nt,d.width<=g&&d.height<=g||(T=Math.max(d.width,d.height),m=Math.floor(d.width*g/T),g=Math.floor(d.height*g/T),T=document.createElement("canvas"),T.width=m,T.height=g,T.getContext("2d").drawImage(d,0,0,d.width,d.height,0,0,m,g),d=T),a[o]=d):s[r]=t.image[r];for(r=s[0],a=THREE.Math.isPowerOfTwo(r.width)&&THREE.Math.isPowerOfTwo(r.height),o=V(t.format),d=V(t.type),P(Q.TEXTURE_CUBE_MAP,t,a),r=0;6>r;r++)if(K)for(g=s[r].mipmaps,T=0,v=g.length;T<v;T++)m=g[T],t.format!==THREE.RGBAFormat?Q.compressedTexImage2D(Q.TEXTURE_CUBE_MAP_POSITIVE_X+r,T,o,m.width,m.height,0,m.data):Q.texImage2D(Q.TEXTURE_CUBE_MAP_POSITIVE_X+r,T,o,m.width,m.height,0,o,d,m.data);else Q.texImage2D(Q.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,o,o,d,s[r]);t.generateMipmaps&&a&&Q.generateMipmap(Q.TEXTURE_CUBE_MAP),t.needsUpdate=!1,t.onUpdate&&t.onUpdate()}else Q.activeTexture(Q.TEXTURE0+K),Q.bindTexture(Q.TEXTURE_CUBE_MAP,t.image.__webglTextureCube)}else o instanceof THREE.WebGLRenderTargetCube?(t=o,Q.activeTexture(Q.TEXTURE0+s),Q.bindTexture(Q.TEXTURE_CUBE_MAP,t.__webglTexture)):it.setTexture(o,s);break;case"tv":for(void 0===t._array&&(t._array=[]),r=0,a=t.value.length;r<a;r++)t._array[r]=w();for(Q.uniform1iv(K,t._array),r=0,a=t.value.length;r<a;r++)o=t.value[r],s=t._array[r],o&&it.setTexture(o,s);break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+r)}}return Q.uniformMatrix4fv(l.modelViewMatrix,!1,n._modelViewMatrix.elements),l.normalMatrix&&Q.uniformMatrix3fv(l.normalMatrix,!1,n._normalMatrix.elements),null!==l.modelMatrix&&Q.uniformMatrix4fv(l.modelMatrix,!1,n.matrixWorld.elements),h}function b(t,e){t.ambientLightColor.needsUpdate=e,t.directionalLightColor.needsUpdate=e,t.directionalLightDirection.needsUpdate=e,t.pointLightColor.needsUpdate=e,t.pointLightPosition.needsUpdate=e,t.pointLightDistance.needsUpdate=e,t.spotLightColor.needsUpdate=e,t.spotLightPosition.needsUpdate=e,t.spotLightDistance.needsUpdate=e,t.spotLightDirection.needsUpdate=e,t.spotLightAngleCos.needsUpdate=e,t.spotLightExponent.needsUpdate=e,t.hemisphereLightSkyColor.needsUpdate=e,t.hemisphereLightGroundColor.needsUpdate=e,t.hemisphereLightDirection.needsUpdate=e}function w(){var t=ct;return t>=Bt&&console.warn("WebGLRenderer: trying to use "+t+" texture units while this GPU supports only "+Bt),ct+=1,t}function M(t,e){t._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,t.matrixWorld),t._normalMatrix.getNormalMatrix(t._modelViewMatrix)}function S(t,e,r,i){t[e]=r.r*r.r*i,t[e+1]=r.g*r.g*i,t[e+2]=r.b*r.b*i}function C(t,e,r,i){t[e]=r.r*i,t[e+1]=r.g*i,t[e+2]=r.b*i}function A(t){t!==xt&&(Q.lineWidth(t),xt=t)}function L(t,e,r){vt!==t&&(t?Q.enable(Q.POLYGON_OFFSET_FILL):Q.disable(Q.POLYGON_OFFSET_FILL),vt=t),!t||yt===e&&Rt===r||(Q.polygonOffset(e,r),yt=e,Rt=r)}function P(t,e,r){r?(Q.texParameteri(t,Q.TEXTURE_WRAP_S,V(e.wrapS)),Q.texParameteri(t,Q.TEXTURE_WRAP_T,V(e.wrapT)),Q.texParameteri(t,Q.TEXTURE_MAG_FILTER,V(e.magFilter)),Q.texParameteri(t,Q.TEXTURE_MIN_FILTER,V(e.minFilter))):(Q.texParameteri(t,Q.TEXTURE_WRAP_S,Q.CLAMP_TO_EDGE),Q.texParameteri(t,Q.TEXTURE_WRAP_T,Q.CLAMP_TO_EDGE),Q.texParameteri(t,Q.TEXTURE_MAG_FILTER,U(e.magFilter)),Q.texParameteri(t,Q.TEXTURE_MIN_FILTER,U(e.minFilter))),tt&&e.type!==THREE.FloatType&&(1<e.anisotropy||e.__oldAnisotropy)&&(Q.texParameterf(t,tt.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e.anisotropy,Ot)),e.__oldAnisotropy=e.anisotropy)}function F(t,e){Q.bindRenderbuffer(Q.RENDERBUFFER,t),e.depthBuffer&&!e.stencilBuffer?(Q.renderbufferStorage(Q.RENDERBUFFER,Q.DEPTH_COMPONENT16,e.width,e.height),Q.framebufferRenderbuffer(Q.FRAMEBUFFER,Q.DEPTH_ATTACHMENT,Q.RENDERBUFFER,t)):e.depthBuffer&&e.stencilBuffer?(Q.renderbufferStorage(Q.RENDERBUFFER,Q.DEPTH_STENCIL,e.width,e.height),Q.framebufferRenderbuffer(Q.FRAMEBUFFER,Q.DEPTH_STENCIL_ATTACHMENT,Q.RENDERBUFFER,t)):Q.renderbufferStorage(Q.RENDERBUFFER,Q.RGBA4,e.width,e.height)}function D(t){t instanceof THREE.WebGLRenderTargetCube?(Q.bindTexture(Q.TEXTURE_CUBE_MAP,t.__webglTexture),Q.generateMipmap(Q.TEXTURE_CUBE_MAP),Q.bindTexture(Q.TEXTURE_CUBE_MAP,null)):(Q.bindTexture(Q.TEXTURE_2D,t.__webglTexture),Q.generateMipmap(Q.TEXTURE_2D),Q.bindTexture(Q.TEXTURE_2D,null))}function U(t){return t===THREE.NearestFilter||t===THREE.NearestMipMapNearestFilter||t===THREE.NearestMipMapLinearFilter?Q.NEAREST:Q.LINEAR}function V(t){if(t===THREE.RepeatWrapping)return Q.REPEAT;if(t===THREE.ClampToEdgeWrapping)return Q.CLAMP_TO_EDGE;if(t===THREE.MirroredRepeatWrapping)return Q.MIRRORED_REPEAT;if(t===THREE.NearestFilter)return Q.NEAREST;if(t===THREE.NearestMipMapNearestFilter)return Q.NEAREST_MIPMAP_NEAREST;if(t===THREE.NearestMipMapLinearFilter)return Q.NEAREST_MIPMAP_LINEAR;if(t===THREE.LinearFilter)return Q.LINEAR;if(t===THREE.LinearMipMapNearestFilter)return Q.LINEAR_MIPMAP_NEAREST;if(t===THREE.LinearMipMapLinearFilter)return Q.LINEAR_MIPMAP_LINEAR;if(t===THREE.UnsignedByteType)return Q.UNSIGNED_BYTE;if(t===THREE.UnsignedShort4444Type)return Q.UNSIGNED_SHORT_4_4_4_4;if(t===THREE.UnsignedShort5551Type)return Q.UNSIGNED_SHORT_5_5_5_1;if(t===THREE.UnsignedShort565Type)return Q.UNSIGNED_SHORT_5_6_5;if(t===THREE.ByteType)return Q.BYTE;if(t===THREE.ShortType)return Q.SHORT;if(t===THREE.UnsignedShortType)return Q.UNSIGNED_SHORT;if(t===THREE.IntType)return Q.INT;if(t===THREE.UnsignedIntType)return Q.UNSIGNED_INT;if(t===THREE.FloatType)return Q.FLOAT;if(t===THREE.AlphaFormat)return Q.ALPHA;if(t===THREE.RGBFormat)return Q.RGB;if(t===THREE.RGBAFormat)return Q.RGBA;if(t===THREE.LuminanceFormat)return Q.LUMINANCE;if(t===THREE.LuminanceAlphaFormat)return Q.LUMINANCE_ALPHA;if(t===THREE.AddEquation)return Q.FUNC_ADD;if(t===THREE.SubtractEquation)return Q.FUNC_SUBTRACT;if(t===THREE.ReverseSubtractEquation)return Q.FUNC_REVERSE_SUBTRACT;if(t===THREE.ZeroFactor)return Q.ZERO;if(t===THREE.OneFactor)return Q.ONE;if(t===THREE.SrcColorFactor)return Q.SRC_COLOR;if(t===THREE.OneMinusSrcColorFactor)return Q.ONE_MINUS_SRC_COLOR;if(t===THREE.SrcAlphaFactor)return Q.SRC_ALPHA;if(t===THREE.OneMinusSrcAlphaFactor)return Q.ONE_MINUS_SRC_ALPHA;if(t===THREE.DstAlphaFactor)return Q.DST_ALPHA;if(t===THREE.OneMinusDstAlphaFactor)return Q.ONE_MINUS_DST_ALPHA;if(t===THREE.DstColorFactor)return Q.DST_COLOR;if(t===THREE.OneMinusDstColorFactor)return Q.ONE_MINUS_DST_COLOR;if(t===THREE.SrcAlphaSaturateFactor)return Q.SRC_ALPHA_SATURATE;if(void 0!==et){if(t===THREE.RGB_S3TC_DXT1_Format)return et.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===THREE.RGBA_S3TC_DXT1_Format)return et.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===THREE.RGBA_S3TC_DXT3_Format)return et.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===THREE.RGBA_S3TC_DXT5_Format)return et.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION),t=t||{};var z=void 0!==t.canvas?t.canvas:document.createElement("canvas"),B=void 0!==t.context?t.context:null,k=void 0!==t.precision?t.precision:"highp",N=void 0!==t.alpha&&t.alpha,O=void 0===t.depth||t.depth,I=void 0===t.stencil||t.stencil,G=void 0!==t.antialias&&t.antialias,W=void 0===t.premultipliedAlpha||t.premultipliedAlpha,j=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,X=void 0!==t.logarithmicDepthBuffer&&t.logarithmicDepthBuffer,Y=new THREE.Color(0),q=0,K=[],Z=[];this.domElement=z,this.context=null,this.devicePixelRatio=void 0!==t.devicePixelRatio?t.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Q,J,$,tt,et,rt,it=this,nt=[],ot=null,at=null,st=-1,ht=null,lt=null,ct=0,ut=-1,ft=-1,Et=-1,pt=-1,dt=-1,mt=-1,gt=-1,Tt=-1,vt=null,yt=null,Rt=null,xt=null,Ht=0,_t=0,bt=z.width,wt=z.height,Mt=0,St=0,Ct=new Uint8Array(16),At=new Uint8Array(16),Lt=new THREE.Frustum,Pt=new THREE.Matrix4,Ft=new THREE.Matrix4,Dt=new THREE.Vector3,Ut=new THREE.Vector3,Vt=!0,zt={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};!function(){try{var t={alpha:N,depth:O,stencil:I,antialias:G,premultipliedAlpha:W,preserveDrawingBuffer:j};if(Q=B||z.getContext("webgl",t)||z.getContext("experimental-webgl",t),null===Q)throw"Error creating WebGL context."}catch(t){console.error(t)}J=Q.getExtension("OES_texture_float"),Q.getExtension("OES_texture_float_linear"),$=Q.getExtension("OES_standard_derivatives"),tt=Q.getExtension("EXT_texture_filter_anisotropic")||Q.getExtension("MOZ_EXT_texture_filter_anisotropic")||Q.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),et=Q.getExtension("WEBGL_compressed_texture_s3tc")||Q.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||Q.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),rt=Q.getExtension("OES_element_index_uint"),null===J&&console.log("THREE.WebGLRenderer: Float textures not supported."),null===$&&console.log("THREE.WebGLRenderer: Standard derivatives not supported."),null===tt&&console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),null===et&&console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),null===rt&&console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported."),void 0===Q.getShaderPrecisionFormat&&(Q.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),X&&Q.getExtension("EXT_frag_depth")}(),Q.clearColor(0,0,0,1),Q.clearDepth(1),Q.clearStencil(0),Q.enable(Q.DEPTH_TEST),Q.depthFunc(Q.LEQUAL),Q.frontFace(Q.CCW),Q.cullFace(Q.BACK),Q.enable(Q.CULL_FACE),Q.enable(Q.BLEND),Q.blendEquation(Q.FUNC_ADD),Q.blendFunc(Q.SRC_ALPHA,Q.ONE_MINUS_SRC_ALPHA),Q.viewport(Ht,_t,bt,wt),Q.clearColor(Y.r,Y.g,Y.b,q),this.context=Q;var Bt=Q.getParameter(Q.MAX_TEXTURE_IMAGE_UNITS),kt=Q.getParameter(Q.MAX_VERTEX_TEXTURE_IMAGE_UNITS);Q.getParameter(Q.MAX_TEXTURE_SIZE);var Nt=Q.getParameter(Q.MAX_CUBE_MAP_TEXTURE_SIZE),Ot=tt?Q.getParameter(tt.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,It=0<kt,Gt=It&&J;et&&Q.getParameter(Q.COMPRESSED_TEXTURE_FORMATS);var Wt=Q.getShaderPrecisionFormat(Q.VERTEX_SHADER,Q.HIGH_FLOAT),jt=Q.getShaderPrecisionFormat(Q.VERTEX_SHADER,Q.MEDIUM_FLOAT);Q.getShaderPrecisionFormat(Q.VERTEX_SHADER,Q.LOW_FLOAT);var Xt=Q.getShaderPrecisionFormat(Q.FRAGMENT_SHADER,Q.HIGH_FLOAT),Yt=Q.getShaderPrecisionFormat(Q.FRAGMENT_SHADER,Q.MEDIUM_FLOAT);Q.getShaderPrecisionFormat(Q.FRAGMENT_SHADER,Q.LOW_FLOAT);var qt=0<Wt.precision&&0<Xt.precision,Kt=0<jt.precision&&0<Yt.precision;"highp"!==k||qt||(Kt?(k="mediump",console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(k="lowp",console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp."))),"mediump"!==k||Kt||(k="lowp",console.warn("THREE.WebGLRenderer: mediump not supported, using lowp.")),this.getContext=function(){return Q},this.supportsVertexTextures=function(){return It},this.supportsFloatTextures=function(){return J},this.supportsStandardDerivatives=function(){return $},this.supportsCompressedTextureS3TC=function(){return et},this.getMaxAnisotropy=function(){return Ot},this.getPrecision=function(){return k},this.setSize=function(t,e,r){z.width=t*this.devicePixelRatio,z.height=e*this.devicePixelRatio,!1!==r&&(z.style.width=t+"px",z.style.height=e+"px"),this.setViewport(0,0,t,e)},this.setViewport=function(t,e,r,i){Ht=t*this.devicePixelRatio,_t=e*this.devicePixelRatio,bt=r*this.devicePixelRatio,wt=i*this.devicePixelRatio,Q.viewport(Ht,_t,bt,wt)},this.setScissor=function(t,e,r,i){Q.scissor(t*this.devicePixelRatio,e*this.devicePixelRatio,r*this.devicePixelRatio,i*this.devicePixelRatio)},this.enableScissorTest=function(t){t?Q.enable(Q.SCISSOR_TEST):Q.disable(Q.SCISSOR_TEST)},this.setClearColor=function(t,e){Y.set(t),q=void 0!==e?e:1,Q.clearColor(Y.r,Y.g,Y.b,q)},this.setClearColorHex=function(t,e){console.warn("THREE.WebGLRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(t,e)},this.getClearColor=function(){return Y},this.getClearAlpha=function(){return q},this.clear=function(t,e,r){var i=0;(void 0===t||t)&&(i|=Q.COLOR_BUFFER_BIT),(void 0===e||e)&&(i|=Q.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=Q.STENCIL_BUFFER_BIT),Q.clear(i)},this.clearColor=function(){Q.clear(Q.COLOR_BUFFER_BIT)},this.clearDepth=function(){Q.clear(Q.DEPTH_BUFFER_BIT)},this.clearStencil=function(){Q.clear(Q.STENCIL_BUFFER_BIT)},this.clearTarget=function(t,e,r,i){this.setRenderTarget(t),this.clear(e,r,i)},this.addPostPlugin=function(t){t.init(this),this.renderPluginsPost.push(t)},this.addPrePlugin=function(t){t.init(this),this.renderPluginsPre.push(t)},this.updateShadowMap=function(t,e){ot=null,st=ht=Tt=gt=Et=-1,Vt=!0,ft=ut=-1,re(t),this.shadowMapPlugin.update(t,e)};var Zt=function(t){if(t=t.target,t.removeEventListener("dispose",Zt),t.__webglInit=void 0,t instanceof THREE.BufferGeometry){t=t.attributes;for(var e in t)void 0!==t[e].buffer&&Q.deleteBuffer(t[e].buffer);it.info.memory.geometries--}else if(void 0!==t.geometryGroups){e=0;for(var r=t.geometryGroupsList.length;e<r;e++){var i=t.geometryGroupsList[e];if(void 0!==i.numMorphTargets)for(var n=0,o=i.numMorphTargets;n<o;n++)Q.deleteBuffer(i.__webglMorphTargetsBuffers[n]);if(void 0!==i.numMorphNormals)for(n=0,o=i.numMorphNormals;n<o;n++)Q.deleteBuffer(i.__webglMorphNormalsBuffers[n]);te(i)}}else te(t)},Qt=function(t){t=t.target,t.removeEventListener("dispose",Qt),t.image&&t.image.__webglTextureCube?Q.deleteTexture(t.image.__webglTextureCube):t.__webglInit&&(t.__webglInit=!1,
Q.deleteTexture(t.__webglTexture)),it.info.memory.textures--},Jt=function(t){if(t=t.target,t.removeEventListener("dispose",Jt),t&&t.__webglTexture)if(Q.deleteTexture(t.__webglTexture),t instanceof THREE.WebGLRenderTargetCube)for(var e=0;6>e;e++)Q.deleteFramebuffer(t.__webglFramebuffer[e]),Q.deleteRenderbuffer(t.__webglRenderbuffer[e]);else Q.deleteFramebuffer(t.__webglFramebuffer),Q.deleteRenderbuffer(t.__webglRenderbuffer);it.info.memory.textures--},$t=function(t){t=t.target,t.removeEventListener("dispose",$t),ee(t)},te=function(t){if(void 0!==t.__webglVertexBuffer&&Q.deleteBuffer(t.__webglVertexBuffer),void 0!==t.__webglNormalBuffer&&Q.deleteBuffer(t.__webglNormalBuffer),void 0!==t.__webglTangentBuffer&&Q.deleteBuffer(t.__webglTangentBuffer),void 0!==t.__webglColorBuffer&&Q.deleteBuffer(t.__webglColorBuffer),void 0!==t.__webglUVBuffer&&Q.deleteBuffer(t.__webglUVBuffer),void 0!==t.__webglUV2Buffer&&Q.deleteBuffer(t.__webglUV2Buffer),void 0!==t.__webglSkinIndicesBuffer&&Q.deleteBuffer(t.__webglSkinIndicesBuffer),void 0!==t.__webglSkinWeightsBuffer&&Q.deleteBuffer(t.__webglSkinWeightsBuffer),void 0!==t.__webglFaceBuffer&&Q.deleteBuffer(t.__webglFaceBuffer),void 0!==t.__webglLineBuffer&&Q.deleteBuffer(t.__webglLineBuffer),void 0!==t.__webglLineDistanceBuffer&&Q.deleteBuffer(t.__webglLineDistanceBuffer),void 0!==t.__webglCustomAttributesList)for(var e in t.__webglCustomAttributesList)Q.deleteBuffer(t.__webglCustomAttributesList[e].buffer);it.info.memory.geometries--},ee=function(t){var e=t.program.program;if(void 0!==e){t.program=void 0;var r,i,n=!1;for(t=0,r=nt.length;t<r;t++)if(i=nt[t],i.program===e){i.usedTimes--,0===i.usedTimes&&(n=!0);break}if(!0===n){for(n=[],t=0,r=nt.length;t<r;t++)i=nt[t],i.program!==e&&n.push(i);nt=n,Q.deleteProgram(e),it.info.memory.programs--}}};this.renderBufferImmediate=function(t,e,r){if(h(),t.hasPositions&&!t.__webglVertexBuffer&&(t.__webglVertexBuffer=Q.createBuffer()),t.hasNormals&&!t.__webglNormalBuffer&&(t.__webglNormalBuffer=Q.createBuffer()),t.hasUvs&&!t.__webglUvBuffer&&(t.__webglUvBuffer=Q.createBuffer()),t.hasColors&&!t.__webglColorBuffer&&(t.__webglColorBuffer=Q.createBuffer()),t.hasPositions&&(Q.bindBuffer(Q.ARRAY_BUFFER,t.__webglVertexBuffer),Q.bufferData(Q.ARRAY_BUFFER,t.positionArray,Q.DYNAMIC_DRAW),l(e.attributes.position),Q.vertexAttribPointer(e.attributes.position,3,Q.FLOAT,!1,0,0)),t.hasNormals){if(Q.bindBuffer(Q.ARRAY_BUFFER,t.__webglNormalBuffer),r.shading===THREE.FlatShading){var i,n,o,a,s,u,f,E,p,d,m,g=3*t.count;for(m=0;m<g;m+=9)d=t.normalArray,i=d[m],n=d[m+1],o=d[m+2],a=d[m+3],u=d[m+4],E=d[m+5],s=d[m+6],f=d[m+7],p=d[m+8],i=(i+a+s)/3,n=(n+u+f)/3,o=(o+E+p)/3,d[m]=i,d[m+1]=n,d[m+2]=o,d[m+3]=i,d[m+4]=n,d[m+5]=o,d[m+6]=i,d[m+7]=n,d[m+8]=o}Q.bufferData(Q.ARRAY_BUFFER,t.normalArray,Q.DYNAMIC_DRAW),l(e.attributes.normal),Q.vertexAttribPointer(e.attributes.normal,3,Q.FLOAT,!1,0,0)}t.hasUvs&&r.map&&(Q.bindBuffer(Q.ARRAY_BUFFER,t.__webglUvBuffer),Q.bufferData(Q.ARRAY_BUFFER,t.uvArray,Q.DYNAMIC_DRAW),l(e.attributes.uv),Q.vertexAttribPointer(e.attributes.uv,2,Q.FLOAT,!1,0,0)),t.hasColors&&r.vertexColors!==THREE.NoColors&&(Q.bindBuffer(Q.ARRAY_BUFFER,t.__webglColorBuffer),Q.bufferData(Q.ARRAY_BUFFER,t.colorArray,Q.DYNAMIC_DRAW),l(e.attributes.color),Q.vertexAttribPointer(e.attributes.color,3,Q.FLOAT,!1,0,0)),c(),Q.drawArrays(Q.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,r,i,n,o){if(!1!==i.visible){var a=_(t,e,r,i,o);if(t=a.attributes,e=n.attributes,r=!1,a=16777215*n.id+2*a.id+(i.wireframe?1:0),a!==ht&&(ht=a,r=!0),r&&h(),o instanceof THREE.Mesh)if(a=e.index){var l,c;if(a.array instanceof Uint32Array?(l=Q.UNSIGNED_INT,c=4):(l=Q.UNSIGNED_SHORT,c=2),n=n.offsets,0===n.length)r&&(s(i,t,e,0),Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,a.buffer)),Q.drawElements(Q.TRIANGLES,a.array.length,l,0),it.info.render.calls++,it.info.render.vertices+=a.array.length,it.info.render.faces+=a.array.length/3;else{r=!0;for(var u=0,f=n.length;u<f;u++){var E=n[u].index;r&&(s(i,t,e,E),Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,a.buffer)),Q.drawElements(Q.TRIANGLES,n[u].count,l,n[u].start*c),it.info.render.calls++,it.info.render.vertices+=n[u].count,it.info.render.faces+=n[u].count/3}}}else r&&s(i,t,e,0),i=n.attributes.position,Q.drawArrays(Q.TRIANGLES,0,i.array.length/3),it.info.render.calls++,it.info.render.vertices+=i.array.length/3,it.info.render.faces+=i.array.length/9;else if(o instanceof THREE.PointCloud)r&&s(i,t,e,0),i=e.position,Q.drawArrays(Q.POINTS,0,i.array.length/3),it.info.render.calls++,it.info.render.points+=i.array.length/3;else if(o instanceof THREE.Line)if(o=o.type===THREE.LineStrip?Q.LINE_STRIP:Q.LINES,A(i.linewidth),a=e.index)if(a.array instanceof Uint32Array?(l=Q.UNSIGNED_INT,c=4):(l=Q.UNSIGNED_SHORT,c=2),n=n.offsets,0===n.length)r&&(s(i,t,e,0),Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,a.buffer)),Q.drawElements(o,a.array.length,l,0),it.info.render.calls++,it.info.render.vertices+=a.array.length;else for(1<n.length&&(r=!0),u=0,f=n.length;u<f;u++)E=n[u].index,r&&(s(i,t,e,E),Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,a.buffer)),Q.drawElements(o,n[u].count,l,n[u].start*c),it.info.render.calls++,it.info.render.vertices+=n[u].count;else r&&s(i,t,e,0),i=e.position,Q.drawArrays(o,0,i.array.length/3),it.info.render.calls++,it.info.render.points+=i.array.length/3}},this.renderBuffer=function(t,e,r,i,n,o){if(!1!==i.visible){var a,s;if(r=_(t,e,r,i,o),e=r.attributes,t=!1,r=16777215*n.id+2*r.id+(i.wireframe?1:0),r!==ht&&(ht=r,t=!0),t&&h(),!i.morphTargets&&0<=e.position)t&&(Q.bindBuffer(Q.ARRAY_BUFFER,n.__webglVertexBuffer),l(e.position),Q.vertexAttribPointer(e.position,3,Q.FLOAT,!1,0,0));else if(o.morphTargetBase){if(r=i.program.attributes,-1!==o.morphTargetBase&&0<=r.position?(Q.bindBuffer(Q.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[o.morphTargetBase]),l(r.position),Q.vertexAttribPointer(r.position,3,Q.FLOAT,!1,0,0)):0<=r.position&&(Q.bindBuffer(Q.ARRAY_BUFFER,n.__webglVertexBuffer),l(r.position),Q.vertexAttribPointer(r.position,3,Q.FLOAT,!1,0,0)),o.morphTargetForcedOrder.length){var u=0;for(s=o.morphTargetForcedOrder,a=o.morphTargetInfluences;u<i.numSupportedMorphTargets&&u<s.length;)0<=r["morphTarget"+u]&&(Q.bindBuffer(Q.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[s[u]]),l(r["morphTarget"+u]),Q.vertexAttribPointer(r["morphTarget"+u],3,Q.FLOAT,!1,0,0)),0<=r["morphNormal"+u]&&i.morphNormals&&(Q.bindBuffer(Q.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[s[u]]),l(r["morphNormal"+u]),Q.vertexAttribPointer(r["morphNormal"+u],3,Q.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[u]=a[s[u]],u++}else{s=[],a=o.morphTargetInfluences;var f,p=a.length;for(f=0;f<p;f++)u=a[f],0<u&&s.push([u,f]);for(s.length>i.numSupportedMorphTargets?(s.sort(E),s.length=i.numSupportedMorphTargets):s.length>i.numSupportedMorphNormals?s.sort(E):0===s.length&&s.push([0,0]),u=0;u<i.numSupportedMorphTargets;)s[u]?(f=s[u][1],0<=r["morphTarget"+u]&&(Q.bindBuffer(Q.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[f]),l(r["morphTarget"+u]),Q.vertexAttribPointer(r["morphTarget"+u],3,Q.FLOAT,!1,0,0)),0<=r["morphNormal"+u]&&i.morphNormals&&(Q.bindBuffer(Q.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[f]),l(r["morphNormal"+u]),Q.vertexAttribPointer(r["morphNormal"+u],3,Q.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[u]=a[f]):o.__webglMorphTargetInfluences[u]=0,u++}null!==i.program.uniforms.morphTargetInfluences&&Q.uniform1fv(i.program.uniforms.morphTargetInfluences,o.__webglMorphTargetInfluences)}if(t){if(n.__webglCustomAttributesList)for(a=0,s=n.__webglCustomAttributesList.length;a<s;a++)r=n.__webglCustomAttributesList[a],0<=e[r.buffer.belongsToAttribute]&&(Q.bindBuffer(Q.ARRAY_BUFFER,r.buffer),l(e[r.buffer.belongsToAttribute]),Q.vertexAttribPointer(e[r.buffer.belongsToAttribute],r.size,Q.FLOAT,!1,0,0));0<=e.color&&(0<o.geometry.colors.length||0<o.geometry.faces.length?(Q.bindBuffer(Q.ARRAY_BUFFER,n.__webglColorBuffer),l(e.color),Q.vertexAttribPointer(e.color,3,Q.FLOAT,!1,0,0)):i.defaultAttributeValues&&Q.vertexAttrib3fv(e.color,i.defaultAttributeValues.color)),0<=e.normal&&(Q.bindBuffer(Q.ARRAY_BUFFER,n.__webglNormalBuffer),l(e.normal),Q.vertexAttribPointer(e.normal,3,Q.FLOAT,!1,0,0)),0<=e.tangent&&(Q.bindBuffer(Q.ARRAY_BUFFER,n.__webglTangentBuffer),l(e.tangent),Q.vertexAttribPointer(e.tangent,4,Q.FLOAT,!1,0,0)),0<=e.uv&&(o.geometry.faceVertexUvs[0]?(Q.bindBuffer(Q.ARRAY_BUFFER,n.__webglUVBuffer),l(e.uv),Q.vertexAttribPointer(e.uv,2,Q.FLOAT,!1,0,0)):i.defaultAttributeValues&&Q.vertexAttrib2fv(e.uv,i.defaultAttributeValues.uv)),0<=e.uv2&&(o.geometry.faceVertexUvs[1]?(Q.bindBuffer(Q.ARRAY_BUFFER,n.__webglUV2Buffer),l(e.uv2),Q.vertexAttribPointer(e.uv2,2,Q.FLOAT,!1,0,0)):i.defaultAttributeValues&&Q.vertexAttrib2fv(e.uv2,i.defaultAttributeValues.uv2)),i.skinning&&0<=e.skinIndex&&0<=e.skinWeight&&(Q.bindBuffer(Q.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),l(e.skinIndex),Q.vertexAttribPointer(e.skinIndex,4,Q.FLOAT,!1,0,0),Q.bindBuffer(Q.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),l(e.skinWeight),Q.vertexAttribPointer(e.skinWeight,4,Q.FLOAT,!1,0,0)),0<=e.lineDistance&&(Q.bindBuffer(Q.ARRAY_BUFFER,n.__webglLineDistanceBuffer),l(e.lineDistance),Q.vertexAttribPointer(e.lineDistance,1,Q.FLOAT,!1,0,0))}c(),o instanceof THREE.Mesh?(o=n.__typeArray===Uint32Array?Q.UNSIGNED_INT:Q.UNSIGNED_SHORT,i.wireframe?(A(i.wireframeLinewidth),t&&Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),Q.drawElements(Q.LINES,n.__webglLineCount,o,0)):(t&&Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),Q.drawElements(Q.TRIANGLES,n.__webglFaceCount,o,0)),it.info.render.calls++,it.info.render.vertices+=n.__webglFaceCount,it.info.render.faces+=n.__webglFaceCount/3):o instanceof THREE.Line?(o=o.type===THREE.LineStrip?Q.LINE_STRIP:Q.LINES,A(i.linewidth),Q.drawArrays(o,0,n.__webglLineCount),it.info.render.calls++):o instanceof THREE.PointCloud&&(Q.drawArrays(Q.POINTS,0,n.__webglParticleCount),it.info.render.calls++,it.info.render.points+=n.__webglParticleCount)}},this.render=function(t,e,r,i){function n(t){t instanceof THREE.SkinnedMesh&&t.skeleton.update();for(var e=0,r=t.children.length;e<r;e++)n(t.children[e])}if(!1==e instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var o,a,s,h,l=t.__lights,c=t.fog;for(st=-1,lt=null,Vt=!0,!0===t.autoUpdate&&t.updateMatrixWorld(),void 0===e.parent&&e.updateMatrixWorld(),n(t),e.matrixWorldInverse.getInverse(e.matrixWorld),Pt.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),Lt.setFromMatrix(Pt),re(t),K.length=0,Z.length=0,p(t,t,e),!0===it.sortObjects&&(K.sort(u),Z.sort(f)),d(this.renderPluginsPre,t,e),it.info.render.calls=0,it.info.render.vertices=0,it.info.render.faces=0,it.info.render.points=0,this.setRenderTarget(r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),h=t.__webglObjectsImmediate,i=0,o=h.length;i<o;i++)a=h[i],s=a.object,s.visible&&(M(s,e),T(a));t.overrideMaterial?(i=t.overrideMaterial,this.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst),this.setDepthTest(i.depthTest),this.setDepthWrite(i.depthWrite),L(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits),m(K,e,l,c,!0,i),m(Z,e,l,c,!0,i),g(t.__webglObjectsImmediate,"",e,l,c,!1,i)):(i=null,this.setBlending(THREE.NoBlending),m(K,e,l,c,!1,i),g(t.__webglObjectsImmediate,"opaque",e,l,c,!1,i),m(Z,e,l,c,!0,i),g(t.__webglObjectsImmediate,"transparent",e,l,c,!0,i)),d(this.renderPluginsPost,t,e),r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&D(r),this.setDepthTest(!0),this.setDepthWrite(!0)}},this.renderImmediateObject=function(t,e,r,i,n){var o=_(t,e,r,i,n);ht=-1,it.setMaterialFaces(i),n.immediateRenderCallback?n.immediateRenderCallback(o,Q,Lt):n.render(function(t){it.renderBufferImmediate(t,o,i)})};var re=function(t){for(t.__webglObjects||(t.__webglObjects={},t.__webglObjectsImmediate=[]);t.__objectsAdded.length;){var r=t.__objectsAdded[0],i=t,n=void 0,o=void 0;if(void 0===r.__webglInit&&(r.__webglInit=!0,r._modelViewMatrix=new THREE.Matrix4,r._normalMatrix=new THREE.Matrix3),n=r.geometry,void 0!==n&&void 0===n.__webglInit)if(n.__webglInit=!0,n.addEventListener("dispose",Zt),n instanceof THREE.BufferGeometry)a(n);else if(r instanceof THREE.Mesh)void 0!==r.__webglActive&&H(r,i),v(i,r,n);else if(r instanceof THREE.Line){if(!n.__webglVertexBuffer){o=n,o.__webglVertexBuffer=Q.createBuffer(),o.__webglColorBuffer=Q.createBuffer(),o.__webglLineDistanceBuffer=Q.createBuffer(),it.info.memory.geometries++;var o=n,s=r,h=o.vertices.length;o.__vertexArray=new Float32Array(3*h),o.__colorArray=new Float32Array(3*h),o.__lineDistanceArray=new Float32Array(1*h),o.__webglLineCount=h,e(o,s),n.verticesNeedUpdate=!0,n.colorsNeedUpdate=!0,n.lineDistancesNeedUpdate=!0}}else r instanceof THREE.PointCloud&&!n.__webglVertexBuffer&&(o=n,o.__webglVertexBuffer=Q.createBuffer(),o.__webglColorBuffer=Q.createBuffer(),it.info.memory.geometries++,o=n,s=r,h=o.vertices.length,o.__vertexArray=new Float32Array(3*h),o.__colorArray=new Float32Array(3*h),o.__sortArray=[],o.__webglParticleCount=h,e(o,s),n.verticesNeedUpdate=!0,n.colorsNeedUpdate=!0);if(void 0===r.__webglActive){if(r instanceof THREE.Mesh){if(n=r.geometry,n instanceof THREE.BufferGeometry)y(i.__webglObjects,n,r);else if(n instanceof THREE.Geometry)for(s=0,h=n.geometryGroupsList.length;s<h;s++)o=n.geometryGroupsList[s],y(i.__webglObjects,o,r)}else r instanceof THREE.Line||r instanceof THREE.PointCloud?(n=r.geometry,y(i.__webglObjects,n,r)):(r instanceof THREE.ImmediateRenderObject||r.immediateRenderCallback)&&i.__webglObjectsImmediate.push({id:null,object:r,opaque:null,transparent:null,z:0});r.__webglActive=!0}t.__objectsAdded.splice(0,1)}for(;t.__objectsRemoved.length;)H(t.__objectsRemoved[0],t),t.__objectsRemoved.splice(0,1)};this.initMaterial=function(t,e,r,i){var n,o,a,s;t.addEventListener("dispose",$t);var h,l,c,u;t instanceof THREE.MeshDepthMaterial?u="depth":t instanceof THREE.MeshNormalMaterial?u="normal":t instanceof THREE.MeshBasicMaterial?u="basic":t instanceof THREE.MeshLambertMaterial?u="lambert":t instanceof THREE.MeshPhongMaterial?u="phong":t instanceof THREE.LineBasicMaterial?u="basic":t instanceof THREE.LineDashedMaterial?u="dashed":t instanceof THREE.PointCloudMaterial&&(u="particle_basic"),u?(n=THREE.ShaderLib[u],t.__webglShader={uniforms:THREE.UniformsUtils.clone(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}):t.__webglShader={uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader},c=s=a=o=n=0;for(var f=e.length;c<f;c++){var E=e[c];E.onlyShadow||!1===E.visible||(E instanceof THREE.DirectionalLight&&n++,E instanceof THREE.PointLight&&o++,E instanceof THREE.SpotLight&&a++,E instanceof THREE.HemisphereLight&&s++)}for(f=c=0,E=e.length;f<E;f++){var p=e[f];p.castShadow&&(p instanceof THREE.SpotLight&&c++,p instanceof THREE.DirectionalLight&&!p.shadowCascade&&c++)}e=c,Gt&&i&&i.skeleton&&i.skeleton.useVertexTexture?c=1024:(c=Q.getParameter(Q.MAX_VERTEX_UNIFORM_VECTORS),c=Math.floor((c-20)/4),void 0!==i&&i instanceof THREE.SkinnedMesh&&(c=Math.min(i.skeleton.bones.length,c),c<i.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+i.skeleton.bones.length+", this GPU supports just "+c+" (try OpenGL instead of ANGLE)"))),r={precision:k,supportsVertexTextures:It,map:!!t.map,envMap:!!t.envMap,lightMap:!!t.lightMap,bumpMap:!!t.bumpMap,normalMap:!!t.normalMap,specularMap:!!t.specularMap,alphaMap:!!t.alphaMap,vertexColors:t.vertexColors,fog:r,useFog:t.fog,fogExp:r instanceof THREE.FogExp2,sizeAttenuation:t.sizeAttenuation,logarithmicDepthBuffer:X,skinning:t.skinning,maxBones:c,useVertexTexture:Gt&&i&&i.skeleton&&i.skeleton.useVertexTexture,morphTargets:t.morphTargets,morphNormals:t.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:n,maxPointLights:o,maxSpotLights:a,maxHemiLights:s,maxShadows:e,shadowMapEnabled:this.shadowMapEnabled&&i.receiveShadow&&0<e,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:t.alphaTest,metal:t.metal,wrapAround:t.wrapAround,doubleSided:t.side===THREE.DoubleSide,flipSided:t.side===THREE.BackSide},i=[],u?i.push(u):(i.push(t.fragmentShader),i.push(t.vertexShader));for(var d in t.defines)i.push(d),i.push(t.defines[d]);for(l in r)i.push(l),i.push(r[l]);u=i.join();var m;for(l=0,d=nt.length;l<d;l++)if(i=nt[l],i.code===u){m=i,m.usedTimes++;break}if(void 0===m&&(m=new THREE.WebGLProgram(this,u,t,r),nt.push(m),it.info.memory.programs=nt.length),t.program=m,m=t.program.attributes,t.morphTargets)for(t.numSupportedMorphTargets=0,d="morphTarget",l=0;l<this.maxMorphTargets;l++)u=d+l,0<=m[u]&&t.numSupportedMorphTargets++;if(t.morphNormals)for(t.numSupportedMorphNormals=0,d="morphNormal",l=0;l<this.maxMorphNormals;l++)u=d+l,0<=m[u]&&t.numSupportedMorphNormals++;t.uniformsList=[];for(h in t.__webglShader.uniforms)(l=t.program.uniforms[h])&&t.uniformsList.push([t.__webglShader.uniforms[h],l])},this.setFaceCulling=function(t,e){t===THREE.CullFaceNone?Q.disable(Q.CULL_FACE):(e===THREE.FrontFaceDirectionCW?Q.frontFace(Q.CW):Q.frontFace(Q.CCW),t===THREE.CullFaceBack?Q.cullFace(Q.BACK):t===THREE.CullFaceFront?Q.cullFace(Q.FRONT):Q.cullFace(Q.FRONT_AND_BACK),Q.enable(Q.CULL_FACE))},this.setMaterialFaces=function(t){var e=t.side===THREE.DoubleSide;t=t.side===THREE.BackSide,ut!==e&&(e?Q.disable(Q.CULL_FACE):Q.enable(Q.CULL_FACE),ut=e),ft!==t&&(t?Q.frontFace(Q.CW):Q.frontFace(Q.CCW),ft=t)},this.setDepthTest=function(t){gt!==t&&(t?Q.enable(Q.DEPTH_TEST):Q.disable(Q.DEPTH_TEST),gt=t)},this.setDepthWrite=function(t){Tt!==t&&(Q.depthMask(t),Tt=t)},this.setBlending=function(t,e,r,i){t!==Et&&(t===THREE.NoBlending?Q.disable(Q.BLEND):t===THREE.AdditiveBlending?(Q.enable(Q.BLEND),Q.blendEquation(Q.FUNC_ADD),Q.blendFunc(Q.SRC_ALPHA,Q.ONE)):t===THREE.SubtractiveBlending?(Q.enable(Q.BLEND),Q.blendEquation(Q.FUNC_ADD),Q.blendFunc(Q.ZERO,Q.ONE_MINUS_SRC_COLOR)):t===THREE.MultiplyBlending?(Q.enable(Q.BLEND),Q.blendEquation(Q.FUNC_ADD),Q.blendFunc(Q.ZERO,Q.SRC_COLOR)):t===THREE.CustomBlending?Q.enable(Q.BLEND):(Q.enable(Q.BLEND),Q.blendEquationSeparate(Q.FUNC_ADD,Q.FUNC_ADD),Q.blendFuncSeparate(Q.SRC_ALPHA,Q.ONE_MINUS_SRC_ALPHA,Q.ONE,Q.ONE_MINUS_SRC_ALPHA)),Et=t),t===THREE.CustomBlending?(e!==pt&&(Q.blendEquation(V(e)),pt=e),(r!==dt||i!==mt)&&(Q.blendFunc(V(r),V(i)),dt=r,mt=i)):mt=dt=pt=null},this.setTexture=function(t,e){if(t.needsUpdate){t.__webglInit||(t.__webglInit=!0,t.addEventListener("dispose",Qt),t.__webglTexture=Q.createTexture(),it.info.memory.textures++),Q.activeTexture(Q.TEXTURE0+e),Q.bindTexture(Q.TEXTURE_2D,t.__webglTexture),Q.pixelStorei(Q.UNPACK_FLIP_Y_WEBGL,t.flipY),Q.pixelStorei(Q.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),Q.pixelStorei(Q.UNPACK_ALIGNMENT,t.unpackAlignment);var r=t.image,i=THREE.Math.isPowerOfTwo(r.width)&&THREE.Math.isPowerOfTwo(r.height),n=V(t.format),o=V(t.type);P(Q.TEXTURE_2D,t,i);var a=t.mipmaps;if(t instanceof THREE.DataTexture)if(0<a.length&&i){for(var s=0,h=a.length;s<h;s++)r=a[s],Q.texImage2D(Q.TEXTURE_2D,s,n,r.width,r.height,0,n,o,r.data);t.generateMipmaps=!1}else Q.texImage2D(Q.TEXTURE_2D,0,n,r.width,r.height,0,n,o,r.data);else if(t instanceof THREE.CompressedTexture)for(s=0,h=a.length;s<h;s++)r=a[s],t.format!==THREE.RGBAFormat?Q.compressedTexImage2D(Q.TEXTURE_2D,s,n,r.width,r.height,0,r.data):Q.texImage2D(Q.TEXTURE_2D,s,n,r.width,r.height,0,n,o,r.data);else if(0<a.length&&i){for(s=0,h=a.length;s<h;s++)r=a[s],Q.texImage2D(Q.TEXTURE_2D,s,n,n,o,r);t.generateMipmaps=!1}else Q.texImage2D(Q.TEXTURE_2D,0,n,n,o,t.image);t.generateMipmaps&&i&&Q.generateMipmap(Q.TEXTURE_2D),t.needsUpdate=!1,t.onUpdate&&t.onUpdate()}else Q.activeTexture(Q.TEXTURE0+e),Q.bindTexture(Q.TEXTURE_2D,t.__webglTexture)},this.setRenderTarget=function(t){var e=t instanceof THREE.WebGLRenderTargetCube;if(t&&!t.__webglFramebuffer){void 0===t.depthBuffer&&(t.depthBuffer=!0),void 0===t.stencilBuffer&&(t.stencilBuffer=!0),t.addEventListener("dispose",Jt),t.__webglTexture=Q.createTexture(),it.info.memory.textures++;var r=THREE.Math.isPowerOfTwo(t.width)&&THREE.Math.isPowerOfTwo(t.height),i=V(t.format),n=V(t.type);if(e){t.__webglFramebuffer=[],t.__webglRenderbuffer=[],Q.bindTexture(Q.TEXTURE_CUBE_MAP,t.__webglTexture),P(Q.TEXTURE_CUBE_MAP,t,r);for(var o=0;6>o;o++){t.__webglFramebuffer[o]=Q.createFramebuffer(),t.__webglRenderbuffer[o]=Q.createRenderbuffer(),Q.texImage2D(Q.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,i,t.width,t.height,0,i,n,null);var a=t,s=Q.TEXTURE_CUBE_MAP_POSITIVE_X+o;Q.bindFramebuffer(Q.FRAMEBUFFER,t.__webglFramebuffer[o]),Q.framebufferTexture2D(Q.FRAMEBUFFER,Q.COLOR_ATTACHMENT0,s,a.__webglTexture,0),F(t.__webglRenderbuffer[o],t)}r&&Q.generateMipmap(Q.TEXTURE_CUBE_MAP)}else t.__webglFramebuffer=Q.createFramebuffer(),t.__webglRenderbuffer=t.shareDepthFrom?t.shareDepthFrom.__webglRenderbuffer:Q.createRenderbuffer(),Q.bindTexture(Q.TEXTURE_2D,t.__webglTexture),P(Q.TEXTURE_2D,t,r),Q.texImage2D(Q.TEXTURE_2D,0,i,t.width,t.height,0,i,n,null),i=Q.TEXTURE_2D,Q.bindFramebuffer(Q.FRAMEBUFFER,t.__webglFramebuffer),Q.framebufferTexture2D(Q.FRAMEBUFFER,Q.COLOR_ATTACHMENT0,i,t.__webglTexture,0),t.shareDepthFrom?t.depthBuffer&&!t.stencilBuffer?Q.framebufferRenderbuffer(Q.FRAMEBUFFER,Q.DEPTH_ATTACHMENT,Q.RENDERBUFFER,t.__webglRenderbuffer):t.depthBuffer&&t.stencilBuffer&&Q.framebufferRenderbuffer(Q.FRAMEBUFFER,Q.DEPTH_STENCIL_ATTACHMENT,Q.RENDERBUFFER,t.__webglRenderbuffer):F(t.__webglRenderbuffer,t),r&&Q.generateMipmap(Q.TEXTURE_2D);e?Q.bindTexture(Q.TEXTURE_CUBE_MAP,null):Q.bindTexture(Q.TEXTURE_2D,null),Q.bindRenderbuffer(Q.RENDERBUFFER,null),Q.bindFramebuffer(Q.FRAMEBUFFER,null)}t?(e=e?t.__webglFramebuffer[t.activeCubeFace]:t.__webglFramebuffer,r=t.width,t=t.height,n=i=0):(e=null,r=bt,t=wt,i=Ht,n=_t),e!==at&&(Q.bindFramebuffer(Q.FRAMEBUFFER,e),Q.viewport(i,n,r,t),at=e),Mt=r,St=t},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(t,e,r){this.width=t,this.height=e,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(t,e){this.width=t,this.height=e},clone:function(){var t=new THREE.WebGLRenderTarget(this.width,this.height);return t.wrapS=this.wrapS,t.wrapT=this.wrapT,t.magFilter=this.magFilter,t.minFilter=this.minFilter,t.anisotropy=this.anisotropy,t.offset.copy(this.offset),t.repeat.copy(this.repeat),t.format=this.format,t.type=this.type,t.depthBuffer=this.depthBuffer,t.stencilBuffer=this.stencilBuffer,t.generateMipmaps=this.generateMipmaps,t.shareDepthFrom=this.shareDepthFrom,t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(t,e,r){THREE.WebGLRenderTarget.call(this,t,e,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLProgram=function(){var t=0;return function(e,r,i,n){var o=e.context,a=i.defines,s=i.__webglShader.uniforms,h=i.attributes,l=i.__webglShader.vertexShader,c=i.__webglShader.fragmentShader,u=i.index0AttributeName;void 0===u&&!0===n.morphTargets&&(u="position");var f="SHADOWMAP_TYPE_BASIC";n.shadowMapType===THREE.PCFShadowMap?f="SHADOWMAP_TYPE_PCF":n.shadowMapType===THREE.PCFSoftShadowMap&&(f="SHADOWMAP_TYPE_PCF_SOFT");var E,p;E=[];for(var d in a)p=a[d],!1!==p&&(p="#define "+d+" "+p,E.push(p));E=E.join("\n"),a=o.createProgram(),i instanceof THREE.RawShaderMaterial?e=i="":(i=["precision "+n.precision+" float;","precision "+n.precision+" int;",E,n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",e.gammaInput?"#define GAMMA_INPUT":"",e.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,"#define MAX_BONES "+n.maxBones,n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.vertexColors?"#define USE_COLOR":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals?"#define USE_MORPHNORMALS":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+f:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n\tattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n\tattribute vec3 morphTarget0;\n\tattribute vec3 morphTarget1;\n\tattribute vec3 morphTarget2;\n\tattribute vec3 morphTarget3;\n\t#ifdef USE_MORPHNORMALS\n\t\tattribute vec3 morphNormal0;\n\t\tattribute vec3 morphNormal1;\n\t\tattribute vec3 morphNormal2;\n\t\tattribute vec3 morphNormal3;\n\t#else\n\t\tattribute vec3 morphTarget4;\n\t\tattribute vec3 morphTarget5;\n\t\tattribute vec3 morphTarget6;\n\t\tattribute vec3 morphTarget7;\n\t#endif\n#endif\n#ifdef USE_SKINNING\n\tattribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n#endif\n"].join("\n"),e=["precision "+n.precision+" float;","precision "+n.precision+" int;",n.bumpMap||n.normalMap?"#extension GL_OES_standard_derivatives : enable":"",E,"#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,n.alphaTest?"#define ALPHATEST "+n.alphaTest:"",e.gammaInput?"#define GAMMA_INPUT":"",e.gammaOutput?"#define GAMMA_OUTPUT":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.vertexColors?"#define USE_COLOR":"",n.metal?"#define METAL":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+f:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n")),l=new THREE.WebGLShader(o,o.VERTEX_SHADER,i+l),c=new THREE.WebGLShader(o,o.FRAGMENT_SHADER,e+c),o.attachShader(a,l),o.attachShader(a,c),void 0!==u&&o.bindAttribLocation(a,0,u),o.linkProgram(a),!1===o.getProgramParameter(a,o.LINK_STATUS)&&(console.error("THREE.WebGLProgram: Could not initialise shader."),console.error("gl.VALIDATE_STATUS",o.getProgramParameter(a,o.VALIDATE_STATUS)),console.error("gl.getError()",o.getError())),""!==o.getProgramInfoLog(a)&&console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",o.getProgramInfoLog(a)),o.deleteShader(l),o.deleteShader(c),u="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences bindMatrix bindMatrixInverse".split(" "),n.useVertexTexture?(u.push("boneTexture"),u.push("boneTextureWidth"),u.push("boneTextureHeight")):u.push("boneGlobalMatrices"),n.logarithmicDepthBuffer&&u.push("logDepthBufFC");for(var m in s)u.push(m);for(s=u,m={},u=0,e=s.length;u<e;u++)f=s[u],m[f]=o.getUniformLocation(a,f);for(this.uniforms=m,u="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" "),s=0;s<n.maxMorphTargets;s++)u.push("morphTarget"+s);for(s=0;s<n.maxMorphNormals;s++)u.push("morphNormal"+s);for(var g in h)u.push(g);for(n=u,h={},g=0,s=n.length;g<s;g++)m=n[g],h[m]=o.getAttribLocation(a,m);return this.attributes=h,this.id=t++,this.code=r,this.usedTimes=1,this.program=a,this.vertexShader=l,this.fragmentShader=c,this}}(),THREE.WebGLShader=function(){var t=function(t){t=t.split("\n");for(var e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")};return function(e,r,i){return r=e.createShader(r),e.shaderSource(r,i),e.compileShader(r),!1===e.getShaderParameter(r,e.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==e.getShaderInfoLog(r)&&(console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",e.getShaderInfoLog(r)),console.warn(t(i))),r}}(),THREE.RenderableVertex=function(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(t){this.positionWorld.copy(t.positionWorld),this.positionScreen.copy(t.positionScreen)},THREE.RenderableFace=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.color=new THREE.Color,this.material=null,this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],this.z=0},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0};THREE.RenderableSprite=function(){this.id=0,this.object=null,this.rotation=this.z=this.y=this.x=0,this.scale=new THREE.Vector2,this.material=null};THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.GeometryUtils={merge:function(t,e,r){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var i;e instanceof THREE.Mesh&&(e.matrixAutoUpdate&&e.updateMatrix(),i=e.matrix,e=e.geometry),t.merge(e,i,r)},center:function(t){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),t.center()}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(t,e,r,i){var n=new THREE.ImageLoader;n.crossOrigin=this.crossOrigin;var o=new THREE.Texture((void 0),e);return n.load(t,function(t){o.image=t,o.needsUpdate=!0,r&&r(o)},void 0,function(t){i&&i(t)}),o.sourceFile=t,o},loadTextureCube:function(t,e,r,i){var n=new THREE.ImageLoader;n.crossOrigin=this.crossOrigin;var o=new THREE.CubeTexture([],e);o.flipY=!1;var a=0;e=function(e){n.load(t[e],function(t){o.images[e]=t,a+=1,6===a&&(o.needsUpdate=!0,r&&r(o))})},i=0;for(var s=t.length;i<s;++i)e(i);return o},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(t,e){
var r=function(t){var e=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return[t[0]/e,t[1]/e,t[2]/e]};e|=1;var i=t.width,n=t.height,o=document.createElement("canvas");o.width=i,o.height=n;var a=o.getContext("2d");a.drawImage(t,0,0);for(var s=a.getImageData(0,0,i,n).data,h=a.createImageData(i,n),l=h.data,c=0;c<i;c++)for(var u=0;u<n;u++){var f=0>u-1?0:u-1,E=u+1>n-1?n-1:u+1,p=0>c-1?0:c-1,d=c+1>i-1?i-1:c+1,m=[],g=[0,0,s[4*(u*i+c)]/255*e];for(m.push([-1,0,s[4*(u*i+p)]/255*e]),m.push([-1,-1,s[4*(f*i+p)]/255*e]),m.push([0,-1,s[4*(f*i+c)]/255*e]),m.push([1,-1,s[4*(f*i+d)]/255*e]),m.push([1,0,s[4*(u*i+d)]/255*e]),m.push([1,1,s[4*(E*i+d)]/255*e]),m.push([0,1,s[4*(E*i+c)]/255*e]),m.push([-1,1,s[4*(E*i+p)]/255*e]),f=[],p=m.length,E=0;E<p;E++){var d=m[E],T=m[(E+1)%p],d=[d[0]-g[0],d[1]-g[1],d[2]-g[2]],T=[T[0]-g[0],T[1]-g[1],T[2]-g[2]];f.push(r([d[1]*T[2]-d[2]*T[1],d[2]*T[0]-d[0]*T[2],d[0]*T[1]-d[1]*T[0]]))}for(m=[0,0,0],E=0;E<f.length;E++)m[0]+=f[E][0],m[1]+=f[E][1],m[2]+=f[E][2];m[0]/=f.length,m[1]/=f.length,m[2]/=f.length,g=4*(u*i+c),l[g]=(m[0]+1)/2*255|0,l[g+1]=(m[1]+1)/2*255|0,l[g+2]=255*m[2]|0,l[g+3]=255}return a.putImageData(h,0,0),o},generateDataTexture:function(t,e,r){var i=t*e,n=new Uint8Array(3*i),o=Math.floor(255*r.r),a=Math.floor(255*r.g);r=Math.floor(255*r.b);for(var s=0;s<i;s++)n[3*s]=o,n[3*s+1]=a,n[3*s+2]=r;return t=new THREE.DataTexture(n,t,e,THREE.RGBFormat),t.needsUpdate=!0,t}},THREE.SceneUtils={createMultiMaterialObject:function(t,e){for(var r=new THREE.Object3D,i=0,n=e.length;i<n;i++)r.add(new THREE.Mesh(t,e[i]));return r},detach:function(t,e,r){t.applyMatrix(e.matrixWorld),e.remove(t),r.add(t)},attach:function(t,e,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),t.applyMatrix(i),e.remove(t),r.add(t)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(t){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing."}},loadFace:function(t){var e=t.familyName.toLowerCase();return this.faces[e]=this.faces[e]||{},this.faces[e][t.cssFontWeight]=this.faces[e][t.cssFontWeight]||{},this.faces[e][t.cssFontWeight][t.cssFontStyle]=t,this.faces[e][t.cssFontWeight][t.cssFontStyle]=t},drawText:function(t){var e=this.getFace(),r=this.size/e.resolution,i=0,n=String(t).split(""),o=n.length,a=[];for(t=0;t<o;t++){var s=new THREE.Path,s=this.extractGlyphPoints(n[t],e,r,i,s),i=i+s.offset;a.push(s.path)}return{paths:a,offset:i/2}},extractGlyphPoints:function(t,e,r,i,n){var o,a,s,h,l,c,u,f,E,p,d,m=[],g=e.glyphs[t]||e.glyphs["?"];if(g){if(g.o)for(e=g._cachedOutline||(g._cachedOutline=g.o.split(" ")),h=e.length,t=0;t<h;)switch(s=e[t++]){case"m":s=e[t++]*r+i,l=e[t++]*r,n.moveTo(s,l);break;case"l":s=e[t++]*r+i,l=e[t++]*r,n.lineTo(s,l);break;case"q":if(s=e[t++]*r+i,l=e[t++]*r,f=e[t++]*r+i,E=e[t++]*r,n.quadraticCurveTo(f,E,s,l),o=m[m.length-1])for(c=o.x,u=o.y,o=1,a=this.divisions;o<=a;o++){var T=o/a;THREE.Shape.Utils.b2(T,c,f,s),THREE.Shape.Utils.b2(T,u,E,l)}break;case"b":if(s=e[t++]*r+i,l=e[t++]*r,f=e[t++]*r+i,E=e[t++]*r,p=e[t++]*r+i,d=e[t++]*r,n.bezierCurveTo(f,E,p,d,s,l),o=m[m.length-1])for(c=o.x,u=o.y,o=1,a=this.divisions;o<=a;o++)T=o/a,THREE.Shape.Utils.b3(T,c,f,p,s),THREE.Shape.Utils.b3(T,u,E,d,l)}return{offset:g.ha*r,path:n}}}},THREE.FontUtils.generateShapes=function(t,e){e=e||{};var r=void 0!==e.curveSegments?e.curveSegments:4,i=void 0!==e.font?e.font:"helvetiker",n=void 0!==e.weight?e.weight:"normal",o=void 0!==e.style?e.style:"normal";for(THREE.FontUtils.size=void 0!==e.size?e.size:100,THREE.FontUtils.divisions=r,THREE.FontUtils.face=i,THREE.FontUtils.weight=n,THREE.FontUtils.style=o,r=THREE.FontUtils.drawText(t).paths,i=[],n=0,o=r.length;n<o;n++)Array.prototype.push.apply(i,r[n].toShapes());return i},function(t){var e=function(t){for(var e=t.length,r=0,i=e-1,n=0;n<e;i=n++)r+=t[i].x*t[n].y-t[n].x*t[i].y;return.5*r};return t.Triangulate=function(t,r){var i=t.length;if(3>i)return null;var n,o,a,s=[],h=[],l=[];if(0<e(t))for(o=0;o<i;o++)h[o]=o;else for(o=0;o<i;o++)h[o]=i-1-o;var c=2*i;for(o=i-1;2<i;){if(0>=c--){console.log("Warning, unable to triangulate polygon!");break}n=o,i<=n&&(n=0),o=n+1,i<=o&&(o=0),a=o+1,i<=a&&(a=0);var u;t:{var f=u=void 0,E=void 0,p=void 0,d=void 0,m=void 0,g=void 0,T=void 0,v=void 0,f=t[h[n]].x,E=t[h[n]].y,p=t[h[o]].x,d=t[h[o]].y,m=t[h[a]].x,g=t[h[a]].y;if(1e-10>(p-f)*(g-E)-(d-E)*(m-f))u=!1;else{var y=void 0,R=void 0,x=void 0,H=void 0,_=void 0,b=void 0,w=void 0,M=void 0,S=void 0,C=void 0,S=M=w=v=T=void 0,y=m-p,R=g-d,x=f-m,H=E-g,_=p-f,b=d-E;for(u=0;u<i;u++)if(T=t[h[u]].x,v=t[h[u]].y,!(T===f&&v===E||T===p&&v===d||T===m&&v===g)&&(w=T-f,M=v-E,S=T-p,C=v-d,T-=m,v-=g,S=y*C-R*S,w=_*M-b*w,M=x*v-H*T,-1e-10<=S&&-1e-10<=M&&-1e-10<=w)){u=!1;break t}u=!0}}if(u){for(s.push([t[h[n]],t[h[o]],t[h[a]]]),l.push([h[n],h[o],h[a]]),n=o,a=o+1;a<i;n++,a++)h[n]=h[a];i--,c=2*i}}return r?l:s},t.Triangulate.area=e,t}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(t){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(t){return t=this.getUtoTmapping(t),this.getPoint(t)},THREE.Curve.prototype.getPoints=function(t){t||(t=5);var e,r=[];for(e=0;e<=t;e++)r.push(this.getPoint(e/t));return r},THREE.Curve.prototype.getSpacedPoints=function(t){t||(t=5);var e,r=[];for(e=0;e<=t;e++)r.push(this.getPointAt(e/t));return r},THREE.Curve.prototype.getLength=function(){var t=this.getLengths();return t[t.length-1]},THREE.Curve.prototype.getLengths=function(t){if(t||(t=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,r,i=[],n=this.getPoint(0),o=0;for(i.push(0),r=1;r<=t;r++)e=this.getPoint(r/t),o+=e.distanceTo(n),i.push(o),n=e;return this.cacheArcLengths=i},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(t,e){var r,i=this.getLengths(),n=0,o=i.length;r=e?e:t*i[o-1];for(var a,s=0,h=o-1;s<=h;)if(n=Math.floor(s+(h-s)/2),a=i[n]-r,0>a)s=n+1;else{if(!(0<a)){h=n;break}h=n-1}return n=h,i[n]==r?n/(o-1):(s=i[n],i=(n+(r-s)/(i[n+1]-s))/(o-1))},THREE.Curve.prototype.getTangent=function(t){var e=t-1e-4;return t+=1e-4,0>e&&(e=0),1<t&&(t=1),e=this.getPoint(e),this.getPoint(t).clone().sub(e).normalize()},THREE.Curve.prototype.getTangentAt=function(t){return t=this.getUtoTmapping(t),this.getTangent(t)},THREE.Curve.Utils={tangentQuadraticBezier:function(t,e,r,i){return 2*(1-t)*(r-e)+2*t*(i-r)},tangentCubicBezier:function(t,e,r,i,n){return-3*e*(1-t)*(1-t)+3*r*(1-t)*(1-t)-6*t*r*(1-t)+6*t*i*(1-t)-3*t*t*i+3*t*t*n},tangentSpline:function(t,e,r,i,n){return 6*t*t-6*t+(3*t*t-4*t+1)+(-6*t*t+6*t)+(3*t*t-2*t)},interpolate:function(t,e,r,i,n){t=.5*(r-t),i=.5*(i-e);var o=n*n;return(2*e-2*r+t+i)*n*o+(-3*e+3*r-2*t-i)*o+t*n+e}},THREE.Curve.create=function(t,e){return t.prototype=Object.create(THREE.Curve.prototype),t.prototype.getPoint=e,t},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(t){this.curves.push(t)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new THREE.LineCurve(e,t))},THREE.CurvePath.prototype.getPoint=function(t){var e=t*this.getLength(),r=this.getCurveLengths();for(t=0;t<r.length;){if(r[t]>=e)return e=r[t]-e,t=this.curves[t],e=1-e/t.getLength(),t.getPointAt(e);t++}return null},THREE.CurvePath.prototype.getLength=function(){var t=this.getCurveLengths();return t[t.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var t,e=[],r=0,i=this.curves.length;for(t=0;t<i;t++)r+=this.curves[t].getLength(),e.push(r);return this.cacheLengths=e},THREE.CurvePath.prototype.getBoundingBox=function(){var t,e,r,i,n,o,a=this.getPoints();t=e=Number.NEGATIVE_INFINITY,i=n=Number.POSITIVE_INFINITY;var s,h,l,c,u=a[0]instanceof THREE.Vector3;for(c=u?new THREE.Vector3:new THREE.Vector2,h=0,l=a.length;h<l;h++)s=a[h],s.x>t?t=s.x:s.x<i&&(i=s.x),s.y>e?e=s.y:s.y<n&&(n=s.y),u&&(s.z>r?r=s.z:s.z<o&&(o=s.z)),c.add(s);return a={minX:i,minY:n,maxX:t,maxY:e},u&&(a.maxZ=r,a.minZ=o),a},THREE.CurvePath.prototype.createPointsGeometry=function(t){return t=this.getPoints(t,!0),this.createGeometry(t)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(t){return t=this.getSpacedPoints(t,!0),this.createGeometry(t)},THREE.CurvePath.prototype.createGeometry=function(t){for(var e=new THREE.Geometry,r=0;r<t.length;r++)e.vertices.push(new THREE.Vector3(t[r].x,t[r].y,t[r].z||0));return e},THREE.CurvePath.prototype.addWrapPath=function(t){this.bends.push(t)},THREE.CurvePath.prototype.getTransformedPoints=function(t,e){var r,i,n=this.getPoints(t);for(e||(e=this.bends),r=0,i=e.length;r<i;r++)n=this.getWrapPoints(n,e[r]);return n},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(t,e){var r,i,n=this.getSpacedPoints(t);for(e||(e=this.bends),r=0,i=e.length;r<i;r++)n=this.getWrapPoints(n,e[r]);return n},THREE.CurvePath.prototype.getWrapPoints=function(t,e){var r,i,n,o,a,s,h=this.getBoundingBox();for(r=0,i=t.length;r<i;r++)n=t[r],o=n.x,a=n.y,s=o/h.maxX,s=e.getUtoTmapping(s,o),o=e.getPoint(s),s=e.getTangent(s),s.set(-s.y,s.x).multiplyScalar(a),n.x=o.x+s.x,n.y=o.y+s.y;return t},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=0,r=this.children.length;e<r;e++)this.children[e].updateMatrixWorld(t)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(t){THREE.CurvePath.call(this),this.actions=[],t&&this.fromPoints(t)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,r=t.length;e<r;e++)this.lineTo(t[e].x,t[e].y)},THREE.Path.prototype.moveTo=function(t,e){var r=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:r})},THREE.Path.prototype.lineTo=function(t,e){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=new THREE.LineCurve(new THREE.Vector2(i[i.length-2],i[i.length-1]),new THREE.Vector2(t,e));this.curves.push(i),this.actions.push({action:THREE.PathActions.LINE_TO,args:r})},THREE.Path.prototype.quadraticCurveTo=function(t,e,r,i){var n=Array.prototype.slice.call(arguments),o=this.actions[this.actions.length-1].args,o=new THREE.QuadraticBezierCurve(new THREE.Vector2(o[o.length-2],o[o.length-1]),new THREE.Vector2(t,e),new THREE.Vector2(r,i));this.curves.push(o),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})},THREE.Path.prototype.bezierCurveTo=function(t,e,r,i,n,o){var a=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,s=new THREE.CubicBezierCurve(new THREE.Vector2(s[s.length-2],s[s.length-1]),new THREE.Vector2(t,e),new THREE.Vector2(r,i),new THREE.Vector2(n,o));this.curves.push(s),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:a})},THREE.Path.prototype.splineThru=function(t){var e=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,r=[new THREE.Vector2(r[r.length-2],r[r.length-1])];Array.prototype.push.apply(r,t),r=new THREE.SplineCurve(r),this.curves.push(r),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:e})},THREE.Path.prototype.arc=function(t,e,r,i,n,o){var a=this.actions[this.actions.length-1].args;this.absarc(t+a[a.length-2],e+a[a.length-1],r,i,n,o)},THREE.Path.prototype.absarc=function(t,e,r,i,n,o){this.absellipse(t,e,r,r,i,n,o)},THREE.Path.prototype.ellipse=function(t,e,r,i,n,o,a){var s=this.actions[this.actions.length-1].args;this.absellipse(t+s[s.length-2],e+s[s.length-1],r,i,n,o,a)},THREE.Path.prototype.absellipse=function(t,e,r,i,n,o,a){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(t,e,r,i,n,o,a);this.curves.push(h),h=h.getPoint(1),s.push(h.x),s.push(h.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(t,e){t||(t=40);for(var r=[],i=0;i<t;i++)r.push(this.getPoint(i/t));return r},THREE.Path.prototype.getPoints=function(t,e){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(t,e);t=t||12;var r,i,n,o,a,s,h,l,c,u,f,E,p,d=[];for(r=0,i=this.actions.length;r<i;r++)switch(n=this.actions[r],o=n.action,n=n.args,o){case THREE.PathActions.MOVE_TO:d.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.LINE_TO:d.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(a=n[2],s=n[3],c=n[0],u=n[1],0<d.length?(o=d[d.length-1],f=o.x,E=o.y):(o=this.actions[r-1].args,f=o[o.length-2],E=o[o.length-1]),n=1;n<=t;n++)p=n/t,o=THREE.Shape.Utils.b2(p,f,c,a),p=THREE.Shape.Utils.b2(p,E,u,s),d.push(new THREE.Vector2(o,p));break;case THREE.PathActions.BEZIER_CURVE_TO:for(a=n[4],s=n[5],c=n[0],u=n[1],h=n[2],l=n[3],0<d.length?(o=d[d.length-1],f=o.x,E=o.y):(o=this.actions[r-1].args,f=o[o.length-2],E=o[o.length-1]),n=1;n<=t;n++)p=n/t,o=THREE.Shape.Utils.b3(p,f,c,h,a),p=THREE.Shape.Utils.b3(p,E,u,l,s),d.push(new THREE.Vector2(o,p));break;case THREE.PathActions.CSPLINE_THRU:for(o=this.actions[r-1].args,p=[new THREE.Vector2(o[o.length-2],o[o.length-1])],o=t*n[0].length,p=p.concat(n[0]),p=new THREE.SplineCurve(p),n=1;n<=o;n++)d.push(p.getPointAt(n/o));break;case THREE.PathActions.ARC:for(a=n[0],s=n[1],u=n[2],h=n[3],o=n[4],c=!!n[5],f=o-h,E=2*t,n=1;n<=E;n++)p=n/E,c||(p=1-p),p=h+p*f,o=a+u*Math.cos(p),p=s+u*Math.sin(p),d.push(new THREE.Vector2(o,p));break;case THREE.PathActions.ELLIPSE:for(a=n[0],s=n[1],u=n[2],l=n[3],h=n[4],o=n[5],c=!!n[6],f=o-h,E=2*t,n=1;n<=E;n++)p=n/E,c||(p=1-p),p=h+p*f,o=a+u*Math.cos(p),p=s+l*Math.sin(p),d.push(new THREE.Vector2(o,p))}return r=d[d.length-1],1e-10>Math.abs(r.x-d[0].x)&&1e-10>Math.abs(r.y-d[0].y)&&d.splice(d.length-1,1),e&&d.push(d[0]),d},THREE.Path.prototype.toShapes=function(t,e){function r(t){for(var e=[],r=0,i=t.length;r<i;r++){var n=t[r],o=new THREE.Shape;o.actions=n.actions,o.curves=n.curves,e.push(o)}return e}function i(t,e){for(var r=e.length,i=!1,n=r-1,o=0;o<r;n=o++){var a=e[n],s=e[o],h=s.x-a.x,l=s.y-a.y;if(1e-10<Math.abs(l)){if(0>l&&(a=e[o],h=-h,s=e[n],l=-l),!(t.y<a.y||t.y>s.y))if(t.y==a.y){if(t.x==a.x)return!0}else{if(n=l*(t.x-a.x)-h*(t.y-a.y),0==n)return!0;0>n||(i=!i)}}else if(t.y==a.y&&(s.x<=t.x&&t.x<=a.x||a.x<=t.x&&t.x<=s.x))return!0}return i}var n=function(t){var e,r,i,n,o=[],a=new THREE.Path;for(e=0,r=t.length;e<r;e++)i=t[e],n=i.args,i=i.action,i==THREE.PathActions.MOVE_TO&&0!=a.actions.length&&(o.push(a),a=new THREE.Path),a[i].apply(a,n);return 0!=a.actions.length&&o.push(a),o}(this.actions);if(0==n.length)return[];if(!0===e)return r(n);var o,a,s,h=[];if(1==n.length)return a=n[0],s=new THREE.Shape,s.actions=a.actions,s.curves=a.curves,h.push(s),h;var l=!THREE.Shape.Utils.isClockWise(n[0].getPoints()),l=t?!l:l;s=[];var c,u=[],f=[],E=0;u[E]=void 0,f[E]=[];var p,d;for(p=0,d=n.length;p<d;p++)a=n[p],c=a.getPoints(),o=THREE.Shape.Utils.isClockWise(c),(o=t?!o:o)?(!l&&u[E]&&E++,u[E]={s:new THREE.Shape,p:c},u[E].s.actions=a.actions,u[E].s.curves=a.curves,l&&E++,f[E]=[]):f[E].push({h:a,p:c[0]});if(!u[0])return r(n);if(1<u.length){for(p=!1,d=[],a=0,n=u.length;a<n;a++)s[a]=[];for(a=0,n=u.length;a<n;a++)for(o=f[a],l=0;l<o.length;l++){E=o[l],c=!0;for(var m=0;m<u.length;m++)i(E.p,u[m].p)&&(a!=m&&d.push({froms:a,tos:m,hole:l}),c?(c=!1,s[m].push(E)):p=!0);c&&s[a].push(E)}0<d.length&&(p||(f=s))}for(p=0,d=u.length;p<d;p++)for(s=u[p].s,h.push(s),a=f[p],n=0,o=a.length;n<o;n++)s.holes.push(a[n].h);return h},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(t){return new THREE.ExtrudeGeometry(this,t)},THREE.Shape.prototype.makeGeometry=function(t){return new THREE.ShapeGeometry(this,t)},THREE.Shape.prototype.getPointsHoles=function(t){var e,r=this.holes.length,i=[];for(e=0;e<r;e++)i[e]=this.holes[e].getTransformedPoints(t,this.bends);return i},THREE.Shape.prototype.getSpacedPointsHoles=function(t){var e,r=this.holes.length,i=[];for(e=0;e<r;e++)i[e]=this.holes[e].getTransformedSpacedPoints(t,this.bends);return i},THREE.Shape.prototype.extractAllPoints=function(t){return{shape:this.getTransformedPoints(t),holes:this.getPointsHoles(t)}},THREE.Shape.prototype.extractPoints=function(t){return this.useSpacedPoints?this.extractAllSpacedPoints(t):this.extractAllPoints(t)},THREE.Shape.prototype.extractAllSpacedPoints=function(t){return{shape:this.getTransformedSpacedPoints(t),holes:this.getSpacedPointsHoles(t)}},THREE.Shape.Utils={triangulateShape:function(t,e){function r(t,e,r){return t.x!=e.x?t.x<e.x?t.x<=r.x&&r.x<=e.x:e.x<=r.x&&r.x<=t.x:t.y<e.y?t.y<=r.y&&r.y<=e.y:e.y<=r.y&&r.y<=t.y}function i(t,e,i,n,o){var a=e.x-t.x,s=e.y-t.y,h=n.x-i.x,l=n.y-i.y,c=t.x-i.x,u=t.y-i.y,f=s*h-a*l,E=s*c-a*u;if(1e-10<Math.abs(f)){if(0<f){if(0>E||E>f)return[];if(h=l*c-h*u,0>h||h>f)return[]}else{if(0<E||E<f)return[];if(h=l*c-h*u,0<h||h<f)return[]}return 0==h?!o||0!=E&&E!=f?[t]:[]:h==f?!o||0!=E&&E!=f?[e]:[]:0==E?[i]:E==f?[n]:(o=h/f,[{x:t.x+o*a,y:t.y+o*s}])}return 0!=E||l*c!=h*u?[]:(s=0==a&&0==s,h=0==h&&0==l,s&&h?t.x!=i.x||t.y!=i.y?[]:[t]:s?r(i,n,t)?[t]:[]:h?r(t,e,i)?[i]:[]:(0!=a?(t.x<e.x?(a=t,h=t.x,s=e,t=e.x):(a=e,h=e.x,s=t,t=t.x),i.x<n.x?(e=i,f=i.x,l=n,i=n.x):(e=n,f=n.x,l=i,i=i.x)):(t.y<e.y?(a=t,h=t.y,s=e,t=e.y):(a=e,h=e.y,s=t,t=t.y),i.y<n.y?(e=i,f=i.y,l=n,i=n.y):(e=n,f=n.y,l=i,i=i.y)),h<=f?t<f?[]:t==f?o?[]:[e]:t<=i?[e,s]:[e,l]:h>i?[]:h==i?o?[]:[a]:t<=i?[a,s]:[a,l]))}function n(t,e,r,i){var n=e.x-t.x,o=e.y-t.y;e=r.x-t.x,r=r.y-t.y;var a=i.x-t.x;return i=i.y-t.y,t=n*r-o*e,n=n*i-o*a,1e-10<Math.abs(t)?(e=a*r-i*e,0<t?0<=n&&0<=e:0<=n||0<=e):0<n}var o,a,s,h,l,c={};for(s=t.concat(),o=0,a=e.length;o<a;o++)Array.prototype.push.apply(s,e[o]);for(o=0,a=s.length;o<a;o++)l=s[o].x+":"+s[o].y,void 0!==c[l]&&console.log("Duplicate point",l),c[l]=o;o=function(t,e){function r(t,e){var r=m.length-1,i=t-1;0>i&&(i=r);var o=t+1;return o>r&&(o=0),!!(r=n(m[t],m[i],m[o],s[e]))&&(r=s.length-1,i=e-1,0>i&&(i=r),o=e+1,o>r&&(o=0),!!(r=n(s[e],s[i],s[o],m[t])))}function o(t,e){var r,n;for(r=0;r<m.length;r++)if(n=r+1,n%=m.length,n=i(t,e,m[r],m[n],!0),0<n.length)return!0;return!1}function a(t,r){var n,o,a,s;for(n=0;n<g.length;n++)for(o=e[g[n]],a=0;a<o.length;a++)if(s=a+1,s%=o.length,s=i(t,r,o[a],o[s],!0),0<s.length)return!0;return!1}var s,h,l,c,u,f,E,p,d,m=t.concat(),g=[],T=[],v=0;for(h=e.length;v<h;v++)g.push(v);E=0;for(var y=2*g.length;0<g.length;){if(y--,0>y){console.log("Infinite Loop! Holes left:"+g.length+", Probably Hole outside Shape!");break}for(l=E;l<m.length;l++){for(c=m[l],h=-1,v=0;v<g.length;v++)if(u=g[v],f=c.x+":"+c.y+":"+u,void 0===T[f]){for(s=e[u],p=0;p<s.length;p++)if(u=s[p],r(l,p)&&!o(c,u)&&!a(c,u)){h=p,g.splice(v,1),E=m.slice(0,l+1),u=m.slice(l),p=s.slice(h),d=s.slice(0,h+1),m=E.concat(p).concat(d).concat(u),E=l;break}if(0<=h)break;T[f]=!0}if(0<=h)break}}return m}(t,e);var u=THREE.FontUtils.Triangulate(o,!1);for(o=0,a=u.length;o<a;o++)for(h=u[o],s=0;3>s;s++)l=h[s].x+":"+h[s].y,l=c[l],void 0!==l&&(h[s]=l);return u.concat()},isClockWise:function(t){return 0>THREE.FontUtils.Triangulate.area(t)},b2p0:function(t,e){var r=1-t;return r*r*e},b2p1:function(t,e){return 2*(1-t)*t*e},b2p2:function(t,e){return t*t*e},b2:function(t,e,r,i){return this.b2p0(t,e)+this.b2p1(t,r)+this.b2p2(t,i)},b3p0:function(t,e){var r=1-t;return r*r*r*e},b3p1:function(t,e){var r=1-t;return 3*r*r*t*e},b3p2:function(t,e){return 3*(1-t)*t*t*e},b3p3:function(t,e){return t*t*t*e},b3:function(t,e,r,i,n){return this.b3p0(t,e)+this.b3p1(t,r)+this.b3p2(t,i)+this.b3p3(t,n)}},THREE.LineCurve=function(t,e){this.v1=t,this.v2=e},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(t){var e=this.v2.clone().sub(this.v1);return e.multiplyScalar(t).add(this.v1),e},THREE.LineCurve.prototype.getPointAt=function(t){return this.getPoint(t)},THREE.LineCurve.prototype.getTangent=function(t){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(t,e,r){this.v0=t,this.v1=e,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(t){var e;return e=THREE.Shape.Utils.b2(t,this.v0.x,this.v1.x,this.v2.x),t=THREE.Shape.Utils.b2(t,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(e,t)},THREE.QuadraticBezierCurve.prototype.getTangent=function(t){var e;return e=THREE.Curve.Utils.tangentQuadraticBezier(t,this.v0.x,this.v1.x,this.v2.x),t=THREE.Curve.Utils.tangentQuadraticBezier(t,this.v0.y,this.v1.y,this.v2.y),e=new THREE.Vector2(e,t),e.normalize(),e},THREE.CubicBezierCurve=function(t,e,r,i){this.v0=t,this.v1=e,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(t){var e;return e=THREE.Shape.Utils.b3(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t=THREE.Shape.Utils.b3(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(e,t)},THREE.CubicBezierCurve.prototype.getTangent=function(t){var e;return e=THREE.Curve.Utils.tangentCubicBezier(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t=THREE.Curve.Utils.tangentCubicBezier(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y),e=new THREE.Vector2(e,t),e.normalize(),e},THREE.SplineCurve=function(t){this.points=void 0==t?[]:t},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(t){var e,r=new THREE.Vector2,i=[],n=this.points;return e=(n.length-1)*t,t=Math.floor(e),e-=t,i[0]=0==t?t:t-1,i[1]=t,i[2]=t>n.length-2?n.length-1:t+1,i[3]=t>n.length-3?n.length-1:t+2,r.x=THREE.Curve.Utils.interpolate(n[i[0]].x,n[i[1]].x,n[i[2]].x,n[i[3]].x,e),r.y=THREE.Curve.Utils.interpolate(n[i[0]].y,n[i[1]].y,n[i[2]].y,n[i[3]].y,e),r},THREE.EllipseCurve=function(t,e,r,i,n,o,a){this.aX=t,this.aY=e,this.xRadius=r,this.yRadius=i,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=a},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(t){var e;return e=this.aEndAngle-this.aStartAngle,0>e&&(e+=2*Math.PI),e>2*Math.PI&&(e-=2*Math.PI),e=!0===this.aClockwise?this.aEndAngle+(1-t)*(2*Math.PI-e):this.aStartAngle+t*e,t=this.aX+this.xRadius*Math.cos(e),e=this.aY+this.yRadius*Math.sin(e),new THREE.Vector2(t,e)},THREE.ArcCurve=function(t,e,r,i,n,o){THREE.EllipseCurve.call(this,t,e,r,r,i,n,o)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.LineCurve3=THREE.Curve.create(function(t,e){this.v1=t,this.v2=e},function(t){var e=new THREE.Vector3;return e.subVectors(this.v2,this.v1),e.multiplyScalar(t),e.add(this.v1),e}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(t,e,r){this.v0=t,this.v1=e,this.v2=r},function(t){var e,r;return e=THREE.Shape.Utils.b2(t,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(t,this.v0.y,this.v1.y,this.v2.y),t=THREE.Shape.Utils.b2(t,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(e,r,t)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(t,e,r,i){this.v0=t,this.v1=e,this.v2=r,this.v3=i},function(t){var e,r;return e=THREE.Shape.Utils.b3(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t=THREE.Shape.Utils.b3(t,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(e,r,t)}),THREE.SplineCurve3=THREE.Curve.create(function(t){this.points=void 0==t?[]:t},function(t){var e,r=new THREE.Vector3,i=[],n=this.points;t*=n.length-1,e=Math.floor(t),t-=e,i[0]=0==e?e:e-1,i[1]=e,i[2]=e>n.length-2?n.length-1:e+1,i[3]=e>n.length-3?n.length-1:e+2,e=n[i[0]];var o=n[i[1]],a=n[i[2]],i=n[i[3]];return r.x=THREE.Curve.Utils.interpolate(e.x,o.x,a.x,i.x,t),r.y=THREE.Curve.Utils.interpolate(e.y,o.y,a.y,i.y,t),r.z=THREE.Curve.Utils.interpolate(e.z,o.z,a.z,i.z,t),r}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(t){this.points=void 0==t?[]:t},function(t){var e,r=new THREE.Vector3,i=[],n=this.points;return e=(n.length-0)*t,t=Math.floor(e),e-=t,t+=0<t?0:(Math.floor(Math.abs(t)/n.length)+1)*n.length,i[0]=(t-1)%n.length,i[1]=t%n.length,i[2]=(t+1)%n.length,i[3]=(t+2)%n.length,r.x=THREE.Curve.Utils.interpolate(n[i[0]].x,n[i[1]].x,n[i[2]].x,n[i[3]].x,e),r.y=THREE.Curve.Utils.interpolate(n[i[0]].y,n[i[1]].y,n[i[2]].y,n[i[3]].y,e),r.z=THREE.Curve.Utils.interpolate(n[i[0]].z,n[i[1]].z,n[i[2]].z,n[i[3]].z,e),r}),THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){console.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){console.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){console.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(t){if(!0!==t.initialized){for(var e=0;e<t.hierarchy.length;e++){for(var r=0;r<t.hierarchy[e].keys.length;r++)if(0>t.hierarchy[e].keys[r].time&&(t.hierarchy[e].keys[r].time=0),void 0!==t.hierarchy[e].keys[r].rot&&!(t.hierarchy[e].keys[r].rot instanceof THREE.Quaternion)){var i=t.hierarchy[e].keys[r].rot;t.hierarchy[e].keys[r].rot=(new THREE.Quaternion).fromArray(i)}if(t.hierarchy[e].keys.length&&void 0!==t.hierarchy[e].keys[0].morphTargets){for(i={},r=0;r<t.hierarchy[e].keys.length;r++)for(var n=0;n<t.hierarchy[e].keys[r].morphTargets.length;n++){var o=t.hierarchy[e].keys[r].morphTargets[n];i[o]=-1}for(t.hierarchy[e].usedMorphTargets=i,r=0;r<t.hierarchy[e].keys.length;r++){var a={};for(o in i){for(n=0;n<t.hierarchy[e].keys[r].morphTargets.length;n++)if(t.hierarchy[e].keys[r].morphTargets[n]===o){a[o]=t.hierarchy[e].keys[r].morphTargetsInfluences[n];break}n===t.hierarchy[e].keys[r].morphTargets.length&&(a[o]=0)}t.hierarchy[e].keys[r].morphTargetsInfluences=a}}for(r=1;r<t.hierarchy[e].keys.length;r++)t.hierarchy[e].keys[r].time===t.hierarchy[e].keys[r-1].time&&(t.hierarchy[e].keys.splice(r,1),r--);for(r=0;r<t.hierarchy[e].keys.length;r++)t.hierarchy[e].keys[r].index=r}return t.initialized=!0,t}},parse:function(t){var e=function(t,r){r.push(t);for(var i=0;i<t.children.length;i++)e(t.children[i],r)},r=[];if(t instanceof THREE.SkinnedMesh)for(var i=0;i<t.skeleton.bones.length;i++)r.push(t.skeleton.bones[i]);else e(t,r);return r},play:function(t){-1===this.animations.indexOf(t)&&this.animations.push(t)},stop:function(t){t=this.animations.indexOf(t),-1!==t&&this.animations.splice(t,1)},update:function(t){for(var e=0;e<this.animations.length;e++)this.animations[e].update(t)}},THREE.Animation=function(t,e){this.root=t,this.data=THREE.AnimationHandler.init(e),this.hierarchy=THREE.AnimationHandler.parse(t),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=!0,this.weight=0,this.interpolationType=THREE.AnimationHandler.LINEAR},THREE.Animation.prototype.keyTypes=["pos","rot","scl"],THREE.Animation.prototype.play=function(t,e){this.currentTime=void 0!==t?t:0,this.weight=void 0!==e?e:1,this.isPlaying=!0,this.reset(),THREE.AnimationHandler.play(this)},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,THREE.AnimationHandler.stop(this)},THREE.Animation.prototype.reset=function(){for(var t=0,e=this.hierarchy.length;t<e;t++){var r=this.hierarchy[t];r.matrixAutoUpdate=!0,void 0===r.animationCache&&(r.animationCache={}),void 0===r.animationCache[this.data.name]&&(r.animationCache[this.data.name]={},r.animationCache[this.data.name].prevKey={pos:0,rot:0,scl:0},r.animationCache[this.data.name].nextKey={pos:0,rot:0,scl:0},r.animationCache[this.data.name].originalMatrix=r.matrix);for(var r=r.animationCache[this.data.name],i=0;3>i;i++){for(var n=this.keyTypes[i],o=this.data.hierarchy[t].keys[0],a=this.getNextKeyWith(n,t,1);a.time<this.currentTime&&a.index>o.index;)o=a,a=this.getNextKeyWith(n,t,a.index+1);r.prevKey[n]=o,r.nextKey[n]=a}}},THREE.Animation.prototype.update=function(){var t=[],e=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Quaternion,n=function(t,e){var r,i,n,a,s,h,l=[],c=[];return r=(t.length-1)*e,i=Math.floor(r),r-=i,l[0]=0===i?i:i-1,l[1]=i,l[2]=i>t.length-2?i:i+1,l[3]=i>t.length-3?i:i+2,i=t[l[0]],a=t[l[1]],s=t[l[2]],h=t[l[3]],l=r*r,n=r*l,c[0]=o(i[0],a[0],s[0],h[0],r,l,n),c[1]=o(i[1],a[1],s[1],h[1],r,l,n),c[2]=o(i[2],a[2],s[2],h[2],r,l,n),c},o=function(t,e,r,i,n,o,a){return t=.5*(r-t),i=.5*(i-e),(2*(e-r)+t+i)*a+(-3*(e-r)-2*t-i)*o+t*n+e};return function(o){if(!1!==this.isPlaying&&(this.currentTime+=o*this.timeScale,0!==this.weight)){if(o=this.data.length,!0===this.loop&&this.currentTime>o)this.currentTime%=o,this.reset();else if(!1===this.loop&&this.currentTime>o)return void this.stop();o=0;for(var a=this.hierarchy.length;o<a;o++)for(var s=this.hierarchy[o],h=s.animationCache[this.data.name],l=0;3>l;l++){var c=this.keyTypes[l],u=h.prevKey[c],f=h.nextKey[c];if(f.time<=this.currentTime){for(u=this.data.hierarchy[o].keys[0],f=this.getNextKeyWith(c,o,1);f.time<this.currentTime&&f.index>u.index;)u=f,f=this.getNextKeyWith(c,o,f.index+1);h.prevKey[c]=u,h.nextKey[c]=f}s.matrixAutoUpdate=!0,s.matrixWorldNeedsUpdate=!0;var E=(this.currentTime-u.time)/(f.time-u.time),p=u[c],d=f[c];0>E&&(E=0),1<E&&(E=1),"pos"===c?this.interpolationType===THREE.AnimationHandler.LINEAR?(r.x=p[0]+(d[0]-p[0])*E,r.y=p[1]+(d[1]-p[1])*E,r.z=p[2]+(d[2]-p[2])*E,s instanceof THREE.Bone?(u=this.weight/(this.weight+s.accumulatedPosWeight),s.position.lerp(r,u),s.accumulatedPosWeight+=this.weight):s.position.copy(r)):this.interpolationType!==THREE.AnimationHandler.CATMULLROM&&this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD||(t[0]=this.getPrevKeyWith("pos",o,u.index-1).pos,t[1]=p,t[2]=d,t[3]=this.getNextKeyWith("pos",o,f.index+1).pos,E=.33*E+.33,f=n(t,E),u=1,s instanceof THREE.Bone&&(u=this.weight/(this.weight+s.accumulatedPosWeight),s.accumulatedPosWeight+=this.weight),c=s.position,c.x+=(f[0]-c.x)*u,c.y+=(f[1]-c.y)*u,c.z+=(f[2]-c.z)*u,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(E=n(t,1.01*E),e.set(E[0],E[1],E[2]),e.sub(c),e.y=0,e.normalize(),E=Math.atan2(e.x,e.z),s.rotation.set(0,E,0))):"rot"===c?(THREE.Quaternion.slerp(p,d,i,E),s instanceof THREE.Bone?0===s.accumulatedRotWeight?(s.quaternion.copy(i),s.accumulatedRotWeight=this.weight):(u=this.weight/(this.weight+s.accumulatedRotWeight),THREE.Quaternion.slerp(s.quaternion,i,s.quaternion,u),s.accumulatedRotWeight+=this.weight):s.quaternion.copy(i)):"scl"===c&&(r.x=p[0]+(d[0]-p[0])*E,r.y=p[1]+(d[1]-p[1])*E,r.z=p[2]+(d[2]-p[2])*E,s instanceof THREE.Bone?(u=this.weight/(this.weight+s.accumulatedSclWeight),s.scale.lerp(r,u),s.accumulatedSclWeight+=this.weight):s.scale.copy(r))}return!0}}}(),THREE.Animation.prototype.getNextKeyWith=function(t,e,r){
var i=this.data.hierarchy[e].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r<i.length-1?r:i.length-1:r%i.length;r<i.length;r++)if(void 0!==i[r][t])return i[r];return this.data.hierarchy[e].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(t,e,r){var i=this.data.hierarchy[e].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<r?r:0:0<=r?r:r+i.length;0<=r;r--)if(void 0!==i[r][t])return i[r];return this.data.hierarchy[e].keys[i.length-1]},THREE.KeyFrameAnimation=function(t){this.root=t.node,this.data=THREE.AnimationHandler.init(t),this.hierarchy=THREE.AnimationHandler.parse(this.root),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.loop=this.isPaused=!0,t=0;for(var e=this.hierarchy.length;t<e;t++){var r=this.data.hierarchy[t].sids,i=this.hierarchy[t];if(this.data.hierarchy[t].keys.length&&r){for(var n=0;n<r.length;n++){var o=r[n],a=this.getNextKeyWith(o,t,0);a&&a.apply(o)}i.matrixAutoUpdate=!1,this.data.hierarchy[t].node.updateMatrix(),i.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(t){if(this.currentTime=void 0!==t?t:0,!1===this.isPlaying){this.isPlaying=!0;var e,r,i=this.hierarchy.length;for(t=0;t<i;t++)e=this.hierarchy[t],r=this.data.hierarchy[t],void 0===r.animationCache&&(r.animationCache={},r.animationCache.prevKey=null,r.animationCache.nextKey=null,r.animationCache.originalMatrix=e.matrix),e=this.data.hierarchy[t].keys,e.length&&(r.animationCache.prevKey=e[0],r.animationCache.nextKey=e[1],this.startTime=Math.min(e[0].time,this.startTime),this.endTime=Math.max(e[e.length-1].time,this.endTime));this.update(0)}this.isPaused=!1,THREE.AnimationHandler.play(this)},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.stop(this);for(var t=0;t<this.data.hierarchy.length;t++){var e=this.hierarchy[t],r=this.data.hierarchy[t];if(void 0!==r.animationCache){var i=r.animationCache.originalMatrix;i.copy(e.matrix),e.matrix=i,delete r.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(t){if(!1!==this.isPlaying){this.currentTime+=t*this.timeScale,t=this.data.length,!0===this.loop&&this.currentTime>t&&(this.currentTime%=t),this.currentTime=Math.min(this.currentTime,t),t=0;for(var e=this.hierarchy.length;t<e;t++){var r=this.hierarchy[t],i=this.data.hierarchy[t],n=i.keys,i=i.animationCache;if(n.length){var o=i.prevKey,a=i.nextKey;if(a.time<=this.currentTime){for(;a.time<this.currentTime&&a.index>o.index;)o=a,a=n[o.index+1];i.prevKey=o,i.nextKey=a}a.time>=this.currentTime?o.interpolate(a,this.currentTime):o.interpolate(a,a.time),this.data.hierarchy[t].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(t,e,r){for(e=this.data.hierarchy[e].keys,r%=e.length;r<e.length;r++)if(e[r].hasTarget(t))return e[r];return e[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(t,e,r){for(e=this.data.hierarchy[e].keys,r=0<=r?r:r+e.length;0<=r;r--)if(e[r].hasTarget(t))return e[r];return e[e.length-1]},THREE.MorphAnimation=function(t){this.mesh=t,this.frames=t.morphTargetInfluences.length,this.currentTime=0,this.duration=1e3,this.loop=!0,this.isPlaying=!1},THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var t=0,e=0;return function(r){if(!1!==this.isPlaying){this.currentTime+=r,!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration),this.currentTime=Math.min(this.currentTime,this.duration),r=this.duration/this.frames;var i=Math.floor(this.currentTime/r);i!=e&&(this.mesh.morphTargetInfluences[t]=0,this.mesh.morphTargetInfluences[e]=1,this.mesh.morphTargetInfluences[i]=0,t=e,e=i),this.mesh.morphTargetInfluences[i]=this.currentTime%r/r,this.mesh.morphTargetInfluences[t]=1-this.mesh.morphTargetInfluences[i]}}}()},THREE.BoxGeometry=function(t,e,r,i,n,o){function a(t,e,r,i,n,o,a,h){var l,c=s.widthSegments,u=s.heightSegments,f=n/2,E=o/2,p=s.vertices.length;"x"===t&&"y"===e||"y"===t&&"x"===e?l="z":"x"===t&&"z"===e||"z"===t&&"x"===e?(l="y",u=s.depthSegments):("z"===t&&"y"===e||"y"===t&&"z"===e)&&(l="x",c=s.depthSegments);var d=c+1,m=u+1,g=n/c,T=o/u,v=new THREE.Vector3;for(v[l]=0<a?1:-1,n=0;n<m;n++)for(o=0;o<d;o++){var y=new THREE.Vector3;y[t]=(o*g-f)*r,y[e]=(n*T-E)*i,y[l]=a,s.vertices.push(y)}for(n=0;n<u;n++)for(o=0;o<c;o++)E=o+d*n,t=o+d*(n+1),e=o+1+d*(n+1),r=o+1+d*n,i=new THREE.Vector2(o/c,1-n/u),a=new THREE.Vector2(o/c,1-(n+1)/u),l=new THREE.Vector2((o+1)/c,1-(n+1)/u),f=new THREE.Vector2((o+1)/c,1-n/u),E=new THREE.Face3(E+p,t+p,r+p),E.normal.copy(v),E.vertexNormals.push(v.clone(),v.clone(),v.clone()),E.materialIndex=h,s.faces.push(E),s.faceVertexUvs[0].push([i,a,f]),E=new THREE.Face3(t+p,e+p,r+p),E.normal.copy(v),E.vertexNormals.push(v.clone(),v.clone(),v.clone()),E.materialIndex=h,s.faces.push(E),s.faceVertexUvs[0].push([a.clone(),l,f.clone()])}THREE.Geometry.call(this),this.parameters={width:t,height:e,depth:r,widthSegments:i,heightSegments:n,depthSegments:o},this.widthSegments=i||1,this.heightSegments=n||1,this.depthSegments=o||1;var s=this;i=t/2,n=e/2,o=r/2,a("z","y",-1,-1,r,e,i,0),a("z","y",1,-1,r,e,-i,1),a("x","z",1,1,t,r,n,2),a("x","z",1,-1,t,r,-n,3),a("x","y",1,-1,t,e,o,4),a("x","y",-1,-1,t,e,-o,5),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.parameters={radius:t,segments:e,thetaStart:r,thetaLength:i},t=t||50,e=void 0!==e?Math.max(3,e):8,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI;var n,o=[];n=new THREE.Vector3;var a=new THREE.Vector2(.5,.5);for(this.vertices.push(n),o.push(a),n=0;n<=e;n++){var s=new THREE.Vector3,h=r+n/e*i;s.x=t*Math.cos(h),s.y=t*Math.sin(h),this.vertices.push(s),o.push(new THREE.Vector2((s.x/t+1)/2,(s.y/t+1)/2))}for(r=new THREE.Vector3(0,0,1),n=1;n<=e;n++)this.faces.push(new THREE.Face3(n,n+1,0,[r.clone(),r.clone(),r.clone()])),this.faceVertexUvs[0].push([o[n].clone(),o[n+1].clone(),a.clone()]);this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,t)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(t,e,r,i,n,o){return console.warn("THEE.CubeGeometry has been renamed to THREE.BoxGeometry."),new THREE.BoxGeometry(t,e,r,i,n,o)},THREE.CylinderGeometry=function(t,e,r,i,n,o){THREE.Geometry.call(this),this.parameters={radiusTop:t,radiusBottom:e,height:r,radialSegments:i,heightSegments:n,openEnded:o},t=void 0!==t?t:20,e=void 0!==e?e:20,r=void 0!==r?r:100,i=i||8,n=n||1,o=void 0!==o&&o;var a,s,h=r/2,l=[],c=[];for(s=0;s<=n;s++){var u=[],f=[],E=s/n,p=E*(e-t)+t;for(a=0;a<=i;a++){var d=a/i,m=new THREE.Vector3;m.x=p*Math.sin(d*Math.PI*2),m.y=-E*r+h,m.z=p*Math.cos(d*Math.PI*2),this.vertices.push(m),u.push(this.vertices.length-1),f.push(new THREE.Vector2(d,1-E))}l.push(u),c.push(f)}for(r=(e-t)/r,a=0;a<i;a++)for(0!==t?(u=this.vertices[l[0][a]].clone(),f=this.vertices[l[0][a+1]].clone()):(u=this.vertices[l[1][a]].clone(),f=this.vertices[l[1][a+1]].clone()),u.setY(Math.sqrt(u.x*u.x+u.z*u.z)*r).normalize(),f.setY(Math.sqrt(f.x*f.x+f.z*f.z)*r).normalize(),s=0;s<n;s++){var E=l[s][a],p=l[s+1][a],d=l[s+1][a+1],m=l[s][a+1],g=u.clone(),T=u.clone(),v=f.clone(),y=f.clone(),R=c[s][a].clone(),x=c[s+1][a].clone(),H=c[s+1][a+1].clone(),_=c[s][a+1].clone();this.faces.push(new THREE.Face3(E,p,m,[g,T,y])),this.faceVertexUvs[0].push([R,x,_]),this.faces.push(new THREE.Face3(p,d,m,[T.clone(),v,y.clone()])),this.faceVertexUvs[0].push([x.clone(),H,_.clone()])}if(!1===o&&0<t)for(this.vertices.push(new THREE.Vector3(0,h,0)),a=0;a<i;a++)E=l[0][a],p=l[0][a+1],d=this.vertices.length-1,g=new THREE.Vector3(0,1,0),T=new THREE.Vector3(0,1,0),v=new THREE.Vector3(0,1,0),R=c[0][a].clone(),x=c[0][a+1].clone(),H=new THREE.Vector2(x.x,0),this.faces.push(new THREE.Face3(E,p,d,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);if(!1===o&&0<e)for(this.vertices.push(new THREE.Vector3(0,(-h),0)),a=0;a<i;a++)E=l[s][a+1],p=l[s][a],d=this.vertices.length-1,g=new THREE.Vector3(0,(-1),0),T=new THREE.Vector3(0,(-1),0),v=new THREE.Vector3(0,(-1),0),R=c[s][a+1].clone(),x=c[s][a].clone(),H=new THREE.Vector2(x.x,1),this.faces.push(new THREE.Face3(E,p,d,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(t,e){"undefined"!=typeof t&&(THREE.Geometry.call(this),t=t instanceof Array?t:[t],this.addShapeList(t,e),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(t,e){for(var r=t.length,i=0;i<r;i++)this.addShape(t[i],e)},THREE.ExtrudeGeometry.prototype.addShape=function(t,e){function r(t,e,r){return e||console.log("die"),e.clone().multiplyScalar(r).add(t)}function i(t,e,r){var i=THREE.Math.sign,n=1,n=t.x-e.x,o=t.y-e.y,a=r.x-t.x,s=r.y-t.y,h=n*n+o*o;if(1e-10<Math.abs(n*s-o*a)){var l=Math.sqrt(h),i=Math.sqrt(a*a+s*s),h=e.x-o/l;if(e=e.y+n/l,a=((r.x-s/i-h)*s-(r.y+a/i-e)*a)/(n*s-o*a),r=h+n*a-t.x,t=e+o*a-t.y,n=r*r+t*t,2>=n)return new THREE.Vector2(r,t);n=Math.sqrt(n/2)}else t=!1,1e-10<n?1e-10<a&&(t=!0):-1e-10>n?-1e-10>a&&(t=!0):i(o)==i(s)&&(t=!0),t?(r=-o,t=n,n=Math.sqrt(h)):(r=n,t=o,n=Math.sqrt(h/2));return new THREE.Vector2(r/n,t/n)}function n(r,i){var n,o;for(N=r.length;0<=--N;){n=N,o=N-1,0>o&&(o=r.length-1);for(var a=0,s=T+2*d,a=0;a<s;a++){var h=B*a,l=B*(a+1),c=i+n+h,h=i+o+h,u=i+o+l,l=i+n+l,f=r,E=a,p=s,m=n,g=o,c=c+S,h=h+S,u=u+S,l=l+S;M.faces.push(new THREE.Face3(c,h,l,null,null,x)),M.faces.push(new THREE.Face3(h,u,l,null,null,x)),c=H.generateSideWallUV(M,t,f,e,c,h,u,l,E,p,m,g),M.faceVertexUvs[0].push([c[0],c[1],c[3]]),M.faceVertexUvs[0].push([c[1],c[2],c[3]])}}}function o(t,e,r){M.vertices.push(new THREE.Vector3(t,e,r))}function a(r,i,n,o){r+=S,i+=S,n+=S,M.faces.push(new THREE.Face3(r,i,n,null,null,R)),r=o?H.generateBottomUV(M,t,e,r,i,n):H.generateTopUV(M,t,e,r,i,n),M.faceVertexUvs[0].push(r)}var s,h,l,c,u,f=void 0!==e.amount?e.amount:100,E=void 0!==e.bevelThickness?e.bevelThickness:6,p=void 0!==e.bevelSize?e.bevelSize:E-2,d=void 0!==e.bevelSegments?e.bevelSegments:3,m=void 0===e.bevelEnabled||e.bevelEnabled,g=void 0!==e.curveSegments?e.curveSegments:12,T=void 0!==e.steps?e.steps:1,v=e.extrudePath,y=!1,R=e.material,x=e.extrudeMaterial,H=void 0!==e.UVGenerator?e.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;v&&(s=v.getSpacedPoints(T),y=!0,m=!1,h=void 0!==e.frames?e.frames:new THREE.TubeGeometry.FrenetFrames(v,T,(!1)),l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3),m||(p=E=d=0);var _,b,w,M=this,S=this.vertices.length,v=t.extractPoints(g),g=v.shape,C=v.holes;if(v=!THREE.Shape.Utils.isClockWise(g)){for(g=g.reverse(),b=0,w=C.length;b<w;b++)_=C[b],THREE.Shape.Utils.isClockWise(_)&&(C[b]=_.reverse());v=!1}var A=THREE.Shape.Utils.triangulateShape(g,C),L=g;for(b=0,w=C.length;b<w;b++)_=C[b],g=g.concat(_);var P,F,D,U,V,z,B=g.length,k=A.length,v=[],N=0;for(D=L.length,P=D-1,F=N+1;N<D;N++,P++,F++)P===D&&(P=0),F===D&&(F=0),v[N]=i(L[N],L[P],L[F]);var O,I=[],G=v.concat();for(b=0,w=C.length;b<w;b++){for(_=C[b],O=[],N=0,D=_.length,P=D-1,F=N+1;N<D;N++,P++,F++)P===D&&(P=0),F===D&&(F=0),O[N]=i(_[N],_[P],_[F]);I.push(O),G=G.concat(O)}for(P=0;P<d;P++){for(D=P/d,U=E*(1-D),F=p*Math.sin(D*Math.PI/2),N=0,D=L.length;N<D;N++)V=r(L[N],v[N],F),o(V.x,V.y,-U);for(b=0,w=C.length;b<w;b++)for(_=C[b],O=I[b],N=0,D=_.length;N<D;N++)V=r(_[N],O[N],F),o(V.x,V.y,-U)}for(F=p,N=0;N<B;N++)V=m?r(g[N],G[N],F):g[N],y?(c.copy(h.normals[0]).multiplyScalar(V.x),l.copy(h.binormals[0]).multiplyScalar(V.y),u.copy(s[0]).add(c).add(l),o(u.x,u.y,u.z)):o(V.x,V.y,0);for(D=1;D<=T;D++)for(N=0;N<B;N++)V=m?r(g[N],G[N],F):g[N],y?(c.copy(h.normals[D]).multiplyScalar(V.x),l.copy(h.binormals[D]).multiplyScalar(V.y),u.copy(s[D]).add(c).add(l),o(u.x,u.y,u.z)):o(V.x,V.y,f/T*D);for(P=d-1;0<=P;P--){for(D=P/d,U=E*(1-D),F=p*Math.sin(D*Math.PI/2),N=0,D=L.length;N<D;N++)V=r(L[N],v[N],F),o(V.x,V.y,f+U);for(b=0,w=C.length;b<w;b++)for(_=C[b],O=I[b],N=0,D=_.length;N<D;N++)V=r(_[N],O[N],F),y?o(V.x,V.y+s[T-1].y,s[T-1].x+U):o(V.x,V.y,f+U)}!function(){if(m){var t;for(t=0*B,N=0;N<k;N++)z=A[N],a(z[2]+t,z[1]+t,z[0]+t,!0);for(t=T+2*d,t*=B,N=0;N<k;N++)z=A[N],a(z[0]+t,z[1]+t,z[2]+t,!1)}else{for(N=0;N<k;N++)z=A[N],a(z[2],z[1],z[0],!0);for(N=0;N<k;N++)z=A[N],a(z[0]+B*T,z[1]+B*T,z[2]+B*T,!1)}}(),function(){var t=0;for(n(L,t),t+=L.length,b=0,w=C.length;b<w;b++)_=C[b],n(_,t),t+=_.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(t,e,r,i,n,o){return e=t.vertices[n].x,n=t.vertices[n].y,r=t.vertices[o].x,o=t.vertices[o].y,[new THREE.Vector2(t.vertices[i].x,t.vertices[i].y),new THREE.Vector2(e,n),new THREE.Vector2(r,o)]},generateBottomUV:function(t,e,r,i,n,o){return this.generateTopUV(t,e,r,i,n,o)},generateSideWallUV:function(t,e,r,i,n,o,a,s,h,l,c,u){e=t.vertices[n].x,r=t.vertices[n].y,n=t.vertices[n].z,i=t.vertices[o].x,h=t.vertices[o].y,o=t.vertices[o].z,l=t.vertices[a].x,c=t.vertices[a].y,a=t.vertices[a].z,u=t.vertices[s].x;var f=t.vertices[s].y;return t=t.vertices[s].z,.01>Math.abs(r-h)?[new THREE.Vector2(e,1-n),new THREE.Vector2(i,1-o),new THREE.Vector2(l,1-a),new THREE.Vector2(u,1-t)]:[new THREE.Vector2(r,1-n),new THREE.Vector2(h,1-o),new THREE.Vector2(c,1-a),new THREE.Vector2(f,1-t)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(t,e){THREE.Geometry.call(this),!1==t instanceof Array&&(t=[t]),this.addShapeList(t,e),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(t,e){for(var r=0,i=t.length;r<i;r++)this.addShape(t[r],e);return this},THREE.ShapeGeometry.prototype.addShape=function(t,e){void 0===e&&(e={});var r,i,n,o=e.material,a=void 0===e.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:e.UVGenerator,s=this.vertices.length;r=t.extractPoints(void 0!==e.curveSegments?e.curveSegments:12);var h=r.shape,l=r.holes;if(!THREE.Shape.Utils.isClockWise(h))for(h=h.reverse(),r=0,i=l.length;r<i;r++)n=l[r],THREE.Shape.Utils.isClockWise(n)&&(l[r]=n.reverse());var c=THREE.Shape.Utils.triangulateShape(h,l);for(r=0,i=l.length;r<i;r++)n=l[r],h=h.concat(n);for(l=h.length,i=c.length,r=0;r<l;r++)n=h[r],this.vertices.push(new THREE.Vector3(n.x,n.y,0));for(r=0;r<i;r++)l=c[r],h=l[0]+s,n=l[1]+s,l=l[2]+s,this.faces.push(new THREE.Face3(h,n,l,null,null,o)),this.faceVertexUvs[0].push(a.generateBottomUV(this,t,e,h,n,l))},THREE.LatheGeometry=function(t,e,r,i){THREE.Geometry.call(this),e=e||12,r=r||0,i=i||2*Math.PI;for(var n=1/(t.length-1),o=1/e,a=0,s=e;a<=s;a++)for(var h=r+a*o*i,l=Math.cos(h),c=Math.sin(h),h=0,u=t.length;h<u;h++){var f=t[h],E=new THREE.Vector3;E.x=l*f.x-c*f.y,E.y=c*f.x+l*f.y,E.z=f.z,this.vertices.push(E)}for(r=t.length,a=0,s=e;a<s;a++)for(h=0,u=t.length-1;h<u;h++){e=c=h+r*a,i=c+r;var l=c+1+r,c=c+1,f=a*o,E=h*n,p=f+o,d=E+n;this.faces.push(new THREE.Face3(e,i,c)),this.faceVertexUvs[0].push([new THREE.Vector2(f,E),new THREE.Vector2(p,E),new THREE.Vector2(f,d)]),this.faces.push(new THREE.Face3(i,l,c)),this.faceVertexUvs[0].push([new THREE.Vector2(p,E),new THREE.Vector2(p,d),new THREE.Vector2(f,d)])}this.mergeVertices(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.parameters={width:t,height:e,widthSegments:r,heightSegments:i};var n=t/2,o=e/2;r=r||1,i=i||1;var a=r+1,s=i+1,h=t/r,l=e/i,c=new THREE.Vector3(0,0,1);for(t=0;t<s;t++){var u=t*l-o;for(e=0;e<a;e++)this.vertices.push(new THREE.Vector3(e*h-n,(-u),0))}for(t=0;t<i;t++)for(e=0;e<r;e++){var f=e+a*t,n=e+a*(t+1),o=e+1+a*(t+1),s=e+1+a*t,h=new THREE.Vector2(e/r,1-t/i),l=new THREE.Vector2(e/r,1-(t+1)/i),u=new THREE.Vector2((e+1)/r,1-(t+1)/i),E=new THREE.Vector2((e+1)/r,1-t/i),f=new THREE.Face3(f,n,s);f.normal.copy(c),f.vertexNormals.push(c.clone(),c.clone(),c.clone()),this.faces.push(f),this.faceVertexUvs[0].push([h,l,E]),f=new THREE.Face3(n,o,s),f.normal.copy(c),f.vertexNormals.push(c.clone(),c.clone(),c.clone()),this.faces.push(f),this.faceVertexUvs[0].push([l.clone(),u,E.clone()])}},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(t,e,r,i,n,o){THREE.Geometry.call(this),t=t||0,e=e||50,n=void 0!==n?n:0,o=void 0!==o?o:2*Math.PI,r=void 0!==r?Math.max(3,r):8,i=void 0!==i?Math.max(1,i):8;var a,s=[],h=t,l=(e-t)/i;for(t=0;t<i+1;t++){for(a=0;a<r+1;a++){var c=new THREE.Vector3,u=n+a/r*o;c.x=h*Math.cos(u),c.y=h*Math.sin(u),this.vertices.push(c),s.push(new THREE.Vector2((c.x/e+1)/2,(c.y/e+1)/2))}h+=l}for(e=new THREE.Vector3(0,0,1),t=0;t<i;t++)for(n=t*(r+1),a=0;a<r;a++)o=u=a+n,l=u+r+1,c=u+r+2,this.faces.push(new THREE.Face3(o,l,c,[e.clone(),e.clone(),e.clone()])),this.faceVertexUvs[0].push([s[o].clone(),s[l].clone(),s[c].clone()]),o=u,l=u+r+2,c=u+1,this.faces.push(new THREE.Face3(o,l,c,[e.clone(),e.clone(),e.clone()])),this.faceVertexUvs[0].push([s[o].clone(),s[l].clone(),s[c].clone()]);this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,h)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(t,e,r,i,n,o,a){THREE.Geometry.call(this),this.parameters={radius:t,widthSegments:e,heightSegments:r,phiStart:i,phiLength:n,thetaStart:o,thetaLength:a},t=t||50,e=Math.max(3,Math.floor(e)||8),r=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI;var s,h,l=[],c=[];for(h=0;h<=r;h++){var u=[],f=[];for(s=0;s<=e;s++){var E=s/e,p=h/r,d=new THREE.Vector3;d.x=-t*Math.cos(i+E*n)*Math.sin(o+p*a),d.y=t*Math.cos(o+p*a),d.z=t*Math.sin(i+E*n)*Math.sin(o+p*a),this.vertices.push(d),u.push(this.vertices.length-1),f.push(new THREE.Vector2(E,1-p))}l.push(u),c.push(f)}for(h=0;h<r;h++)for(s=0;s<e;s++){i=l[h][s+1],n=l[h][s],o=l[h+1][s],a=l[h+1][s+1];var u=this.vertices[i].clone().normalize(),f=this.vertices[n].clone().normalize(),E=this.vertices[o].clone().normalize(),p=this.vertices[a].clone().normalize(),d=c[h][s+1].clone(),m=c[h][s].clone(),g=c[h+1][s].clone(),T=c[h+1][s+1].clone();Math.abs(this.vertices[i].y)===t?(d.x=(d.x+m.x)/2,this.faces.push(new THREE.Face3(i,o,a,[u,E,p])),this.faceVertexUvs[0].push([d,g,T])):Math.abs(this.vertices[o].y)===t?(g.x=(g.x+T.x)/2,this.faces.push(new THREE.Face3(i,n,o,[u,f,E])),this.faceVertexUvs[0].push([d,m,g])):(this.faces.push(new THREE.Face3(i,n,a,[u,f,p])),this.faceVertexUvs[0].push([d,m,T]),this.faces.push(new THREE.Face3(n,o,a,[f.clone(),E,p.clone()])),this.faceVertexUvs[0].push([m.clone(),g,T.clone()]))}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,t)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(t,e){e=e||{};var r=THREE.FontUtils.generateShapes(t,e);e.amount=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,r,e)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(t,e,r,i,n){THREE.Geometry.call(this),this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:i,arc:n},t=t||100,e=e||40,r=r||8,i=i||6,n=n||2*Math.PI;for(var o=new THREE.Vector3,a=[],s=[],h=0;h<=r;h++)for(var l=0;l<=i;l++){var c=l/i*n,u=h/r*Math.PI*2;o.x=t*Math.cos(c),o.y=t*Math.sin(c);var f=new THREE.Vector3;f.x=(t+e*Math.cos(u))*Math.cos(c),f.y=(t+e*Math.cos(u))*Math.sin(c),f.z=e*Math.sin(u),this.vertices.push(f),a.push(new THREE.Vector2(l/i,h/r)),s.push(f.clone().sub(o).normalize())}for(h=1;h<=r;h++)for(l=1;l<=i;l++)t=(i+1)*h+l-1,e=(i+1)*(h-1)+l-1,n=(i+1)*(h-1)+l,o=(i+1)*h+l,c=new THREE.Face3(t,e,o,[s[t].clone(),s[e].clone(),s[o].clone()]),this.faces.push(c),this.faceVertexUvs[0].push([a[t].clone(),a[e].clone(),a[o].clone()]),c=new THREE.Face3(e,n,o,[s[e].clone(),s[n].clone(),s[o].clone()]),this.faces.push(c),this.faceVertexUvs[0].push([a[e].clone(),a[n].clone(),a[o].clone()]);this.computeFaceNormals()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(t,e,r,i,n,o,a){function s(t,e,r,i,n){var o=Math.cos(t),a=Math.sin(t);return t*=e/r,e=Math.cos(t),o*=i*(2+e)*.5,a=i*(2+e)*a*.5,i=n*i*Math.sin(t)*.5,new THREE.Vector3(o,a,i)}THREE.Geometry.call(this),this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:i,p:n,q:o,heightScale:a},t=t||100,e=e||40,r=r||64,i=i||8,n=n||2,o=o||3,a=a||1;for(var h=Array(r),l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,f=0;f<r;++f){h[f]=Array(i);var E=f/r*2*n*Math.PI,p=s(E,o,n,t,a),E=s(E+.01,o,n,t,a);for(l.subVectors(E,p),c.addVectors(E,p),u.crossVectors(l,c),c.crossVectors(u,l),u.normalize(),c.normalize(),E=0;E<i;++E){var d=E/i*2*Math.PI,m=-e*Math.cos(d),d=e*Math.sin(d),g=new THREE.Vector3;g.x=p.x+m*c.x+d*u.x,g.y=p.y+m*c.y+d*u.y,g.z=p.z+m*c.z+d*u.z,h[f][E]=this.vertices.push(g)-1}}for(f=0;f<r;++f)for(E=0;E<i;++E)n=(f+1)%r,o=(E+1)%i,t=h[f][E],e=h[n][E],n=h[n][o],o=h[f][o],a=new THREE.Vector2(f/r,E/i),l=new THREE.Vector2((f+1)/r,E/i),c=new THREE.Vector2((f+1)/r,(E+1)/i),u=new THREE.Vector2(f/r,(E+1)/i),this.faces.push(new THREE.Face3(t,e,o)),this.faceVertexUvs[0].push([a,l,u]),this.faces.push(new THREE.Face3(e,n,o)),this.faceVertexUvs[0].push([l.clone(),c,u.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(t,e,r,i,n){THREE.Geometry.call(this),this.parameters={path:t,segments:e,radius:r,radialSegments:i,closed:n},e=e||64,r=r||1,i=i||8,n=n||!1;var o,a,s,h,l,c,u,f,E,p=[],d=e+1,m=new THREE.Vector3;for(u=new THREE.TubeGeometry.FrenetFrames(t,e,n),f=u.normals,E=u.binormals,this.tangents=u.tangents,this.normals=f,this.binormals=E,u=0;u<d;u++)for(p[u]=[],s=u/(d-1),c=t.getPointAt(s),o=f[u],a=E[u],s=0;s<i;s++)h=s/i*2*Math.PI,l=-r*Math.cos(h),h=r*Math.sin(h),m.copy(c),m.x+=l*o.x+h*a.x,m.y+=l*o.y+h*a.y,m.z+=l*o.z+h*a.z,p[u][s]=this.vertices.push(new THREE.Vector3(m.x,m.y,m.z))-1;for(u=0;u<e;u++)for(s=0;s<i;s++)d=n?(u+1)%e:u+1,m=(s+1)%i,t=p[u][s],r=p[d][s],d=p[d][m],m=p[u][m],f=new THREE.Vector2(u/e,s/i),E=new THREE.Vector2((u+1)/e,s/i),o=new THREE.Vector2((u+1)/e,(s+1)/i),a=new THREE.Vector2(u/e,(s+1)/i),this.faces.push(new THREE.Face3(t,r,m)),this.faceVertexUvs[0].push([f,E,a]),this.faces.push(new THREE.Face3(r,d,m)),this.faceVertexUvs[0].push([E.clone(),o,a.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(t,e,r){new THREE.Vector3;var i=new THREE.Vector3;new THREE.Vector3;var n=[],o=[],a=[],s=new THREE.Vector3,h=new THREE.Matrix4;e+=1;var l,c,u;for(this.tangents=n,this.normals=o,this.binormals=a,l=0;l<e;l++)c=l/(e-1),n[l]=t.getTangentAt(c),n[l].normalize();for(o[0]=new THREE.Vector3,a[0]=new THREE.Vector3,t=Number.MAX_VALUE,l=Math.abs(n[0].x),c=Math.abs(n[0].y),u=Math.abs(n[0].z),l<=t&&(t=l,i.set(1,0,0)),c<=t&&(t=c,i.set(0,1,0)),u<=t&&i.set(0,0,1),s.crossVectors(n[0],i).normalize(),o[0].crossVectors(n[0],s),a[0].crossVectors(n[0],o[0]),l=1;l<e;l++)o[l]=o[l-1].clone(),a[l]=a[l-1].clone(),s.crossVectors(n[l-1],n[l]),1e-4<s.length()&&(s.normalize(),i=Math.acos(THREE.Math.clamp(n[l-1].dot(n[l]),-1,1)),o[l].applyMatrix4(h.makeRotationAxis(s,i))),a[l].crossVectors(n[l],o[l]);if(r)for(i=Math.acos(THREE.Math.clamp(o[0].dot(o[e-1]),-1,1)),i/=e-1,0<n[0].dot(s.crossVectors(o[0],o[e-1]))&&(i=-i),l=1;l<e;l++)o[l].applyMatrix4(h.makeRotationAxis(n[l],i*l)),a[l].crossVectors(n[l],o[l])},THREE.PolyhedronGeometry=function(t,e,r,i){function n(t){var e=t.normalize().clone();e.index=h.vertices.push(e)-1;var r=Math.atan2(t.z,-t.x)/2/Math.PI+.5;return t=Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5,e.uv=new THREE.Vector2(r,1-t),e}function o(t,e,r){var i=new THREE.Face3(t.index,e.index,r.index,[t.clone(),e.clone(),r.clone()]);h.faces.push(i),m.copy(t).add(e).add(r).divideScalar(3),i=Math.atan2(m.z,-m.x),h.faceVertexUvs[0].push([s(t.uv,t,i),s(e.uv,e,i),s(r.uv,r,i)])}function a(t,e){var r=Math.pow(2,e);Math.pow(4,e);for(var i=n(h.vertices[t.a]),a=n(h.vertices[t.b]),s=n(h.vertices[t.c]),l=[],c=0;c<=r;c++){l[c]=[];for(var u=n(i.clone().lerp(s,c/r)),f=n(a.clone().lerp(s,c/r)),E=r-c,p=0;p<=E;p++)l[c][p]=0==p&&c==r?u:n(u.clone().lerp(f,p/E))}for(c=0;c<r;c++)for(p=0;p<2*(r-c)-1;p++)i=Math.floor(p/2),0==p%2?o(l[c][i+1],l[c+1][i],l[c][i]):o(l[c][i+1],l[c+1][i+1],l[c+1][i])}function s(t,e,r){return 0>r&&1===t.x&&(t=new THREE.Vector2(t.x-1,t.y)),0===e.x&&0===e.z&&(t=new THREE.Vector2(r/2/Math.PI+.5,t.y)),t.clone()}THREE.Geometry.call(this),r=r||1,i=i||0;for(var h=this,l=0,c=t.length;l<c;l+=3)n(new THREE.Vector3(t[l],t[l+1],t[l+2]));t=this.vertices;for(var u=[],f=l=0,c=e.length;l<c;l+=3,f++){var E=t[e[l]],p=t[e[l+1]],d=t[e[l+2]];u[f]=new THREE.Face3(E.index,p.index,d.index,[E.clone(),p.clone(),d.clone()])}for(var m=new THREE.Vector3,l=0,c=u.length;l<c;l++)a(u[l],i);for(l=0,c=this.faceVertexUvs[0].length;l<c;l++)e=this.faceVertexUvs[0][l],i=e[0].x,t=e[1].x,u=e[2].x,f=Math.max(i,Math.max(t,u)),E=Math.min(i,Math.min(t,u)),.9<f&&.1>E&&(.2>i&&(e[0].x+=1),.2>t&&(e[1].x+=1),.2>u&&(e[2].x+=1));for(l=0,c=this.vertices.length;l<c;l++)this.vertices[l].multiplyScalar(r);this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(t,e){this.parameters={radius:t,detail:e};var r=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(t,e){this.parameters={radius:t,detail:e},THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(t,e){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(t,e,r){THREE.Geometry.call(this);var i,n,o,a,s=this.vertices,h=this.faces,l=this.faceVertexUvs[0],c=e+1;for(i=0;i<=r;i++)for(a=i/r,n=0;n<=e;n++)o=n/e,o=t(o,a),s.push(o);var u,f,E,p;for(i=0;i<r;i++)for(n=0;n<e;n++)t=i*c+n,s=i*c+n+1,a=(i+1)*c+n+1,o=(i+1)*c+n,u=new THREE.Vector2(n/e,i/r),f=new THREE.Vector2((n+1)/e,i/r),E=new THREE.Vector2((n+1)/e,(i+1)/r),p=new THREE.Vector2(n/e,(i+1)/r),h.push(new THREE.Face3(t,s,o)),l.push([u,f,p]),h.push(new THREE.Face3(s,a,o)),l.push([f.clone(),E,p.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(t){t=t||1;var e=new Float32Array([0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t]),r=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);t=new THREE.BufferGeometry,t.addAttribute("position",new THREE.BufferAttribute(e,3)),t.addAttribute("color",new THREE.BufferAttribute(r,3)),e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),THREE.Line.call(this,t,e,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(){var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var e=new THREE.CylinderGeometry(0,.5,1,5,1);return e.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),function(r,i,n,o,a,s){THREE.Object3D.call(this),void 0===o&&(o=16776960),void 0===n&&(n=1),void 0===a&&(a=.2*n),void 0===s&&(s=.2*a),this.position.copy(i),this.line=new THREE.Line(t,new THREE.LineBasicMaterial({color:o})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:o})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(r),this.setLength(n,a,s)}}(),THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var t,e=new THREE.Vector3;return function(r){.99999<r.y?this.quaternion.set(0,0,0,1):-.99999>r.y?this.quaternion.set(1,0,0,0):(e.set(r.z,0,-r.x).normalize(),t=Math.acos(r.y),this.quaternion.setFromAxisAngle(e,t))}}(),THREE.ArrowHelper.prototype.setLength=function(t,e,r){void 0===e&&(e=.2*t),void 0===r&&(r=.2*e),this.line.scale.set(1,t,1),this.line.updateMatrix(),this.cone.scale.set(r,e,r),this.cone.position.y=t,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(t){this.line.material.color.set(t),this.cone.material.color.set(t)},THREE.BoxHelper=function(t){var e=new THREE.BufferGeometry;e.addAttribute("position",new THREE.BufferAttribute(new Float32Array(72),3)),THREE.Line.call(this,e,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==t&&this.update(t)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(t){var e=t.geometry;null===e.boundingBox&&e.computeBoundingBox();var r=e.boundingBox.min,e=e.boundingBox.max,i=this.geometry.attributes.position.array;i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=r.x,i[4]=e.y,i[5]=e.z,i[6]=r.x,i[7]=e.y,i[8]=e.z,i[9]=r.x,i[10]=r.y,i[11]=e.z,i[12]=r.x,i[13]=r.y,i[14]=e.z,i[15]=e.x,i[16]=r.y,i[17]=e.z,i[18]=e.x,i[19]=r.y,i[20]=e.z,i[21]=e.x,i[22]=e.y,i[23]=e.z,i[24]=e.x,i[25]=e.y,i[26]=r.z,i[27]=r.x,i[28]=e.y,i[29]=r.z,i[30]=r.x,i[31]=e.y,i[32]=r.z,i[33]=r.x,i[34]=r.y,i[35]=r.z,i[36]=r.x,i[37]=r.y,i[38]=r.z,i[39]=e.x,i[40]=r.y,i[41]=r.z,i[42]=e.x,i[43]=r.y,i[44]=r.z,i[45]=e.x,i[46]=e.y,i[47]=r.z,i[48]=e.x,i[49]=e.y,i[50]=e.z,i[51]=e.x,i[52]=e.y,i[53]=r.z,i[54]=r.x,i[55]=e.y,i[56]=e.z,i[57]=r.x,i[58]=e.y,i[59]=r.z,i[60]=r.x,i[61]=r.y,i[62]=e.z,i[63]=r.x,i[64]=r.y,i[65]=r.z,i[66]=e.x,i[67]=r.y,i[68]=e.z,i[69]=e.x,i[70]=r.y,i[71]=r.z,this.geometry.attributes.position.needsUpdate=!0,this.geometry.computeBoundingSphere(),this.matrixAutoUpdate=!1,this.matrixWorld=t.matrixWorld},THREE.BoundingBoxHelper=function(t,e){var r=void 0!==e?e:8947848;this.object=t,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:r,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(t){function e(t,e,i){r(t,i),r(e,i)}function r(t,e){i.vertices.push(new THREE.Vector3),i.colors.push(new THREE.Color(e)),void 0===o[t]&&(o[t]=[]),o[t].push(i.vertices.length-1)}var i=new THREE.Geometry,n=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),o={};e("n1","n2",16755200),e("n2","n4",16755200),e("n4","n3",16755200),e("n3","n1",16755200),e("f1","f2",16755200),e("f2","f4",16755200),e("f4","f3",16755200),e("f3","f1",16755200),e("n1","f1",16755200),e("n2","f2",16755200),e("n3","f3",16755200),e("n4","f4",16755200),e("p","n1",16711680),e("p","n2",16711680),e("p","n3",16711680),e("p","n4",16711680),e("u1","u2",43775),e("u2","u3",43775),e("u3","u1",43775),e("c","t",16777215),e("p","c",3355443),e("cn1","cn2",3355443),e("cn3","cn4",3355443),e("cf1","cf2",3355443),e("cf3","cf4",3355443),THREE.Line.call(this,i,n,THREE.LinePieces),this.camera=t,
this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Camera,r=new THREE.Projector;return function(){function i(i,o,a,s){if(t.set(o,a,s),r.unprojectVector(t,e),i=n.pointMap[i],void 0!==i)for(o=0,a=i.length;o<a;o++)n.geometry.vertices[i[o]].copy(t)}var n=this;e.projectionMatrix.copy(this.camera.projectionMatrix),i("c",0,0,-1),i("t",0,0,1),i("n1",-1,-1,-1),i("n2",1,-1,-1),i("n3",-1,1,-1),i("n4",1,1,-1),i("f1",-1,-1,1),i("f2",1,-1,1),i("f3",-1,1,1),i("f4",1,1,1),i("u1",.7,1.1,-1),i("u2",-.7,1.1,-1),i("u3",0,2,-1),i("cf1",-1,0,1),i("cf2",1,0,1),i("cf3",0,-1,1),i("cf4",0,1,1),i("cn1",-1,0,-1),i("cn2",1,0,-1),i("cn3",0,-1,-1),i("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(t,e){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,e=e||1;var r=new THREE.Geometry;r.vertices.push(new THREE.Vector3((-e),e,0),new THREE.Vector3(e,e,0),new THREE.Vector3(e,(-e),0),new THREE.Vector3((-e),(-e),0),new THREE.Vector3((-e),e,0));var i=new THREE.LineBasicMaterial({fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Line(r,i),this.add(this.lightPlane),r=new THREE.Geometry,r.vertices.push(new THREE.Vector3,new THREE.Vector3),i=new THREE.LineBasicMaterial({fog:!1}),i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(r,i),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3;return function(){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),r.subVectors(e,t),this.lightPlane.lookAt(r),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(r),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(t,e){var r=void 0!==e?e:16777215,i=[0,0],n={},o=function(t,e){return t-e},a=["a","b","c"],s=new THREE.BufferGeometry,h=t.geometry.clone();h.mergeVertices(),h.computeFaceNormals();for(var l=h.vertices,h=h.faces,c=0,u=0,f=h.length;u<f;u++)for(var E=h[u],p=0;3>p;p++){i[0]=E[a[p]],i[1]=E[a[(p+1)%3]],i.sort(o);var d=i.toString();void 0===n[d]?(n[d]={vert1:i[0],vert2:i[1],face1:u,face2:void 0},c++):n[d].face2=u}s.addAttribute("position",new THREE.Float32Attribute(6*c,3)),i=s.attributes.position.array,o=0;for(d in n)a=n[d],(void 0===a.face2||.9999>h[a.face1].normal.dot(h[a.face2].normal))&&(c=l[a.vert1],i[o++]=c.x,i[o++]=c.y,i[o++]=c.z,c=l[a.vert2],i[o++]=c.x,i[o++]=c.y,i[o++]=c.z);THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=t.matrixWorld},THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1,t=void 0!==r?r:16776960,i=void 0!==i?i:1,e=new THREE.Geometry,r=0;for(var n=this.object.geometry.faces.length;r<n;r++)e.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,e,new THREE.LineBasicMaterial({color:t,linewidth:i}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.update=function(){var t=this.geometry.vertices,e=this.object,r=e.geometry.vertices,i=e.geometry.faces,n=e.matrixWorld;e.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(n);for(var o=e=0,a=i.length;e<a;e++,o+=2){var s=i[e];t[o].copy(r[s.a]).add(r[s.b]).add(r[s.c]).divideScalar(3).applyMatrix4(n),t[o+1].copy(s.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(t[o])}return this.geometry.verticesNeedUpdate=!0,this},THREE.GridHelper=function(t,e){var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var n=-t;n<=t;n+=e){r.vertices.push(new THREE.Vector3((-t),0,n),new THREE.Vector3(t,0,n),new THREE.Vector3(n,0,(-t)),new THREE.Vector3(n,0,t));var o=0===n?this.color1:this.color2;r.colors.push(o,o,o,o)}THREE.Line.call(this,r,i,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.setColors=function(t,e){this.color1.set(t),this.color2.set(e),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(t,e,r,i){for(THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color],t=new THREE.SphereGeometry(e,4,2),t.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2)),e=0;8>e;e++)t.faces[e].color=this.colors[4>e?0:1];e=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0}),this.lightSphere=new THREE.Mesh(t,e),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var t=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(t,e){this.light=t,this.light.updateMatrixWorld();var r=new THREE.SphereGeometry(e,4,2),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,r,i),this.matrixWorld=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SkeletonHelper=function(t){this.bones=this.getBoneList(t);for(var e=new THREE.Geometry,r=0;r<this.bones.length;r++)this.bones[r].parent instanceof THREE.Bone&&(e.vertices.push(new THREE.Vector3),e.vertices.push(new THREE.Vector3),e.colors.push(new THREE.Color(0,0,1)),e.colors.push(new THREE.Color(0,1,0)));r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0}),THREE.Line.call(this,e,r,THREE.LinePieces),this.root=t,this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,this.update()},THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype),THREE.SkeletonHelper.prototype.getBoneList=function(t){var e=[];t instanceof THREE.Bone&&e.push(t);for(var r=0;r<t.children.length;r++)e.push.apply(e,this.getBoneList(t.children[r]));return e},THREE.SkeletonHelper.prototype.update=function(){for(var t=this.geometry,e=(new THREE.Matrix4).getInverse(this.root.matrixWorld),r=new THREE.Matrix4,i=0,n=0;n<this.bones.length;n++){var o=this.bones[n];o.parent instanceof THREE.Bone&&(r.multiplyMatrices(e,o.matrixWorld),t.vertices[i].setFromMatrixPosition(r),r.multiplyMatrices(e,o.parent.matrixWorld),t.vertices[i+1].setFromMatrixPosition(r),i+=2)}t.verticesNeedUpdate=!0,t.computeBoundingSphere()},THREE.SpotLightHelper=function(t){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,t=new THREE.CylinderGeometry(0,1,1,8,1,(!0)),t.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),t.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var e=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(t,e),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(){var r=this.light.distance?this.light.distance:1e4,i=r*Math.tan(this.light.angle);this.cone.scale.set(i,i,r),t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(e.sub(t)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1,e=void 0!==r?r:16711680,i=void 0!==i?i:1,r=new THREE.Geometry,t=t.geometry.faces;for(var n=0,o=t.length;n<o;n++)for(var a=0,s=t[n].vertexNormals.length;a<s;a++)r.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,r,new THREE.LineBasicMaterial({color:e,linewidth:i}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.update=function(t){var e=new THREE.Vector3;return function(t){t=["a","b","c","d"],this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var r=this.geometry.vertices,i=this.object.geometry.vertices,n=this.object.geometry.faces,o=this.object.matrixWorld,a=0,s=0,h=n.length;s<h;s++)for(var l=n[s],c=0,u=l.vertexNormals.length;c<u;c++){var f=l.vertexNormals[c];r[a].copy(i[l[t[c]]]).applyMatrix4(o),e.copy(f).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),e.add(r[a]),a+=1,r[a].copy(e),a+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1,e=void 0!==r?r:255,i=void 0!==i?i:1,r=new THREE.Geometry,t=t.geometry.faces;for(var n=0,o=t.length;n<o;n++)for(var a=0,s=t[n].vertexTangents.length;a<s;a++)r.vertices.push(new THREE.Vector3),r.vertices.push(new THREE.Vector3);THREE.Line.call(this,r,new THREE.LineBasicMaterial({color:e,linewidth:i}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.update=function(t){var e=new THREE.Vector3;return function(t){t=["a","b","c","d"],this.object.updateMatrixWorld(!0);for(var r=this.geometry.vertices,i=this.object.geometry.vertices,n=this.object.geometry.faces,o=this.object.matrixWorld,a=0,s=0,h=n.length;s<h;s++)for(var l=n[s],c=0,u=l.vertexTangents.length;c<u;c++){var f=l.vertexTangents[c];r[a].copy(i[l[t[c]]]).applyMatrix4(o),e.copy(f).transformDirection(o).multiplyScalar(this.size),e.add(r[a]),a+=1,r[a].copy(e),a+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(t,e){var r=void 0!==e?e:16777215,i=[0,0],n={},o=function(t,e){return t-e},a=["a","b","c"],s=new THREE.BufferGeometry;if(t.geometry instanceof THREE.Geometry){for(var h=t.geometry.vertices,l=t.geometry.faces,c=0,u=new Uint32Array(6*l.length),f=0,E=l.length;f<E;f++)for(var p=l[f],d=0;3>d;d++){i[0]=p[a[d]],i[1]=p[a[(d+1)%3]],i.sort(o);var m=i.toString();void 0===n[m]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[m]=!0,c++)}for(i=new Float32Array(6*c),f=0,E=c;f<E;f++)for(d=0;2>d;d++)c=h[u[2*f+d]],a=6*f+3*d,i[a+0]=c.x,i[a+1]=c.y,i[a+2]=c.z;s.addAttribute("position",new THREE.BufferAttribute(i,3))}else if(t.geometry instanceof THREE.BufferGeometry){if(void 0!==t.geometry.attributes.index){for(var h=t.geometry.attributes.position.array,E=t.geometry.attributes.index.array,l=t.geometry.offsets,c=0,u=new Uint32Array(2*E.length),p=0,g=l.length;p<g;++p)for(var d=l[p].start,m=l[p].count,a=l[p].index,f=d,T=d+m;f<T;f+=3)for(d=0;3>d;d++)i[0]=a+E[f+d],i[1]=a+E[f+(d+1)%3],i.sort(o),m=i.toString(),void 0===n[m]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[m]=!0,c++);for(i=new Float32Array(6*c),f=0,E=c;f<E;f++)for(d=0;2>d;d++)a=6*f+3*d,c=3*u[2*f+d],i[a+0]=h[c],i[a+1]=h[c+1],i[a+2]=h[c+2]}else for(h=t.geometry.attributes.position.array,c=h.length/3,u=c/3,i=new Float32Array(6*c),f=0,E=u;f<E;f++)for(d=0;3>d;d++)a=18*f+6*d,u=9*f+3*d,i[a+0]=h[u],i[a+1]=h[u+1],i[a+2]=h[u+2],c=9*f+(d+1)%3*3,i[a+3]=h[c],i[a+4]=h[c+1],i[a+5]=h[c+2];s.addAttribute("position",new THREE.BufferAttribute(i,3))}THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=t.matrixWorld},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(t){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(t,e,r,i,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==t&&this.add(t,e,r,i,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(t,e,r,i,n,o){void 0===e&&(e=-1),void 0===r&&(r=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:t,size:e,distance:r,x:0,y:0,z:0,scale:1,rotation:1,opacity:o,color:n,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){var t,e,r=this.lensFlares.length,i=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(t=0;t<r;t++)e=this.lensFlares[t],e.x=this.positionScreen.x+i*e.distance,e.y=this.positionScreen.y+n*e.distance,e.wantedRotation=e.x*Math.PI*.25,e.rotation+=.25*(e.wantedRotation-e.rotation)},THREE.MorphBlendMesh=function(t,e){THREE.Mesh.call(this,t,e),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length;this.createAnimation("__default",0,r-1,r/1),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(t,e,r,i){e={startFrame:e,endFrame:r,length:r-e+1,fps:i,duration:(r-e)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[t]=e,this.animationsList.push(e)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(t){for(var e,r=/([a-z]+)_?(\d+)/,i={},n=this.geometry,o=0,a=n.morphTargets.length;o<a;o++){var s=n.morphTargets[o].name.match(r);if(s&&1<s.length){var h=s[1];i[h]||(i[h]={start:1/0,end:-(1/0)}),s=i[h],o<s.start&&(s.start=o),o>s.end&&(s.end=o),e||(e=h)}}for(h in i)s=i[h],this.createAnimation(h,s.start,s.end,t);this.firstAnimation=e},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(t){(t=this.animationsMap[t])&&(t.direction=1,t.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(t){(t=this.animationsMap[t])&&(t.direction=-1,t.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(t,e){var r=this.animationsMap[t];r&&(r.fps=e,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(t,e){var r=this.animationsMap[t];r&&(r.duration=e,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(t,e){var r=this.animationsMap[t];r&&(r.weight=e)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(t,e){var r=this.animationsMap[t];r&&(r.time=e)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(t){var e=0;return(t=this.animationsMap[t])&&(e=t.time),e},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(t){var e=-1;return(t=this.animationsMap[t])&&(e=t.duration),e},THREE.MorphBlendMesh.prototype.playAnimation=function(t){var e=this.animationsMap[t];e?(e.time=0,e.active=!0):console.warn("animation["+t+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(t){(t=this.animationsMap[t])&&(t.active=!1)},THREE.MorphBlendMesh.prototype.update=function(t){for(var e=0,r=this.animationsList.length;e<r;e++){var i=this.animationsList[e];if(i.active){var n=i.duration/i.length;i.time+=i.direction*t,i.mirroredLoop?(i.time>i.duration||0>i.time)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),0>i.time&&(i.time=0,i.directionBackwards=!1)):(i.time%=i.duration,0>i.time&&(i.time+=i.duration));var o=i.startFrame+THREE.Math.clamp(Math.floor(i.time/n),0,i.length-1),a=i.weight;o!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*a,this.morphTargetInfluences[o]=0,i.lastFrame=i.currentFrame,i.currentFrame=o),n=i.time%n/n,i.directionBackwards&&(n=1-n),this.morphTargetInfluences[i.currentFrame]=n*a,this.morphTargetInfluences[i.lastFrame]=(1-n)*a}}},THREE.LensFlarePlugin=function(){function t(t,r){var i=e.createProgram(),n=e.createShader(e.FRAGMENT_SHADER),o=e.createShader(e.VERTEX_SHADER),a="precision "+r+" float;\n";return e.shaderSource(n,a+t.fragmentShader),e.shaderSource(o,a+t.vertexShader),e.compileShader(n),e.compileShader(o),e.attachShader(i,n),e.attachShader(i,o),e.linkProgram(i),i}var e,r,i,n,o,a,s,h,l,c,u,f,E,p=[];this.init=function(p){e=p.context,r=p,i=p.getPrecision(),n=new Float32Array(16),o=new Uint16Array(6),p=0,n[p++]=-1,n[p++]=-1,n[p++]=0,n[p++]=0,n[p++]=1,n[p++]=-1,n[p++]=1,n[p++]=0,n[p++]=1,n[p++]=1,n[p++]=1,n[p++]=1,n[p++]=-1,n[p++]=1,n[p++]=0,n[p++]=1,p=0,o[p++]=0,o[p++]=1,o[p++]=2,o[p++]=0,o[p++]=2,o[p++]=3,a=e.createBuffer(),s=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,a),e.bufferData(e.ARRAY_BUFFER,n,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,s),e.bufferData(e.ELEMENT_ARRAY_BUFFER,o,e.STATIC_DRAW),h=e.createTexture(),l=e.createTexture(),e.bindTexture(e.TEXTURE_2D,h),e.texImage2D(e.TEXTURE_2D,0,e.RGB,16,16,0,e.RGB,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.bindTexture(e.TEXTURE_2D,l),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,16,16,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),0>=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(c=!1,u=t(THREE.ShaderFlares.lensFlare,i)):(c=!0,u=t(THREE.ShaderFlares.lensFlareVertexTexture,i)),f={},E={},f.vertex=e.getAttribLocation(u,"position"),f.uv=e.getAttribLocation(u,"uv"),E.renderType=e.getUniformLocation(u,"renderType"),E.map=e.getUniformLocation(u,"map"),E.occlusionMap=e.getUniformLocation(u,"occlusionMap"),E.opacity=e.getUniformLocation(u,"opacity"),E.color=e.getUniformLocation(u,"color"),E.scale=e.getUniformLocation(u,"scale"),E.rotation=e.getUniformLocation(u,"rotation"),E.screenPosition=e.getUniformLocation(u,"screenPosition")},this.render=function(t,i,n,o){if(p.length=0,t.traverseVisible(function(t){t instanceof THREE.LensFlare&&p.push(t)}),0!==p.length){t=new THREE.Vector3;var d=o/n,m=.5*n,g=.5*o,T=16/o,v=new THREE.Vector2(T*d,T),y=new THREE.Vector3(1,1,0),R=new THREE.Vector2(1,1),x=E,T=f;e.useProgram(u),e.enableVertexAttribArray(f.vertex),e.enableVertexAttribArray(f.uv),e.uniform1i(x.occlusionMap,0),e.uniform1i(x.map,1),e.bindBuffer(e.ARRAY_BUFFER,a),e.vertexAttribPointer(T.vertex,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(T.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,s),e.disable(e.CULL_FACE),e.depthMask(!1);for(var H=0,_=p.length;H<_;H++){T=16/o,v.set(T*d,T);var b=p[H];if(t.set(b.matrixWorld.elements[12],b.matrixWorld.elements[13],b.matrixWorld.elements[14]),t.applyMatrix4(i.matrixWorldInverse),t.applyProjection(i.projectionMatrix),y.copy(t),R.x=y.x*m+m,R.y=y.y*g+g,c||0<R.x&&R.x<n&&0<R.y&&R.y<o){e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,h),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGB,R.x-8,R.y-8,16,16,0),e.uniform1i(x.renderType,0),e.uniform2f(x.scale,v.x,v.y),e.uniform3f(x.screenPosition,y.x,y.y,y.z),e.disable(e.BLEND),e.enable(e.DEPTH_TEST),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,l),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGBA,R.x-8,R.y-8,16,16,0),e.uniform1i(x.renderType,1),e.disable(e.DEPTH_TEST),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,h),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),b.positionScreen.copy(y),b.customUpdateCallback?b.customUpdateCallback(b):b.updateLensFlares(),e.uniform1i(x.renderType,2),e.enable(e.BLEND);for(var w=0,M=b.lensFlares.length;w<M;w++){var S=b.lensFlares[w];.001<S.opacity&&.001<S.scale&&(y.x=S.x,y.y=S.y,y.z=S.z,T=S.size*S.scale/o,v.x=T*d,v.y=T,e.uniform3f(x.screenPosition,y.x,y.y,y.z),e.uniform2f(x.scale,v.x,v.y),e.uniform1f(x.rotation,S.rotation),e.uniform1f(x.opacity,S.opacity),e.uniform3f(x.color,S.color.r,S.color.g,S.color.b),r.setBlending(S.blending,S.blendEquation,S.blendSrc,S.blendDst),r.setTexture(S.texture,1),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}}}e.enable(e.CULL_FACE),e.enable(e.DEPTH_TEST),e.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){function t(e,r,i){if(r.visible){var n=e.__webglObjects[r.id];if(n&&r.castShadow&&(!1===r.frustumCulled||!0===s.intersectsObject(r)))for(var o=0,a=n.length;o<a;o++){var h=n[o];r._modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,r.matrixWorld),f.push(h)}for(o=0,a=r.children.length;o<a;o++)t(e,r.children[o],i)}}var e,r,i,n,o,a,s=new THREE.Frustum,h=new THREE.Matrix4,l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,f=[];this.init=function(t){e=t.context,r=t,t=THREE.ShaderLib.depthRGBA;var s=THREE.UniformsUtils.clone(t.uniforms);i=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:s}),n=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:s,morphTargets:!0}),o=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:s,skinning:!0}),a=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:s,morphTargets:!0,skinning:!0}),i._shadowPass=!0,n._shadowPass=!0,o._shadowPass=!0,a._shadowPass=!0},this.render=function(t,e){r.shadowMapEnabled&&r.shadowMapAutoUpdate&&this.update(t,e)},this.update=function(E,p){var d,m,g,T,v,y,R,x,H=[];for(T=0,e.clearColor(1,1,1,1),e.disable(e.BLEND),e.enable(e.CULL_FACE),e.frontFace(e.CCW),r.shadowMapCullFace===THREE.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.BACK),r.setDepthTest(!0),d=0,m=E.__lights.length;d<m;d++)if(g=E.__lights[d],g.castShadow)if(g instanceof THREE.DirectionalLight&&g.shadowCascade)for(v=0;v<g.shadowCascadeCount;v++){var _;if(g.shadowCascadeArray[v])_=g.shadowCascadeArray[v];else{R=g;var b=v;_=new THREE.DirectionalLight,_.isVirtual=!0,_.onlyShadow=!0,_.castShadow=!0,_.shadowCameraNear=R.shadowCameraNear,_.shadowCameraFar=R.shadowCameraFar,_.shadowCameraLeft=R.shadowCameraLeft,_.shadowCameraRight=R.shadowCameraRight,_.shadowCameraBottom=R.shadowCameraBottom,_.shadowCameraTop=R.shadowCameraTop,_.shadowCameraVisible=R.shadowCameraVisible,_.shadowDarkness=R.shadowDarkness,_.shadowBias=R.shadowCascadeBias[b],_.shadowMapWidth=R.shadowCascadeWidth[b],_.shadowMapHeight=R.shadowCascadeHeight[b],_.pointsWorld=[],_.pointsFrustum=[],x=_.pointsWorld,y=_.pointsFrustum;for(var w=0;8>w;w++)x[w]=new THREE.Vector3,y[w]=new THREE.Vector3;x=R.shadowCascadeNearZ[b],R=R.shadowCascadeFarZ[b],y[0].set(-1,-1,x),y[1].set(1,-1,x),y[2].set(-1,1,x),y[3].set(1,1,x),y[4].set(-1,-1,R),y[5].set(1,-1,R),y[6].set(-1,1,R),y[7].set(1,1,R),_.originalCamera=p,y=new THREE.Gyroscope,y.position.copy(g.shadowCascadeOffset),y.add(_),y.add(_.target),p.add(y),g.shadowCascadeArray[v]=_,console.log("Created virtualLight",_)}b=g,x=v,R=b.shadowCascadeArray[x],R.position.copy(b.position),R.target.position.copy(b.target.position),R.lookAt(R.target),R.shadowCameraVisible=b.shadowCameraVisible,R.shadowDarkness=b.shadowDarkness,R.shadowBias=b.shadowCascadeBias[x],y=b.shadowCascadeNearZ[x],b=b.shadowCascadeFarZ[x],R=R.pointsFrustum,R[0].z=y,R[1].z=y,R[2].z=y,R[3].z=y,R[4].z=b,R[5].z=b,R[6].z=b,R[7].z=b,H[T]=_,T++}else H[T]=g,T++;for(d=0,m=H.length;d<m;d++){if(g=H[d],g.shadowMap||(v=THREE.LinearFilter,r.shadowMapType===THREE.PCFSoftShadowMap&&(v=THREE.NearestFilter),g.shadowMap=new THREE.WebGLRenderTarget(g.shadowMapWidth,g.shadowMapHeight,{minFilter:v,magFilter:v,format:THREE.RGBAFormat}),g.shadowMapSize=new THREE.Vector2(g.shadowMapWidth,g.shadowMapHeight),g.shadowMatrix=new THREE.Matrix4),!g.shadowCamera){if(g instanceof THREE.SpotLight)g.shadowCamera=new THREE.PerspectiveCamera(g.shadowCameraFov,g.shadowMapWidth/g.shadowMapHeight,g.shadowCameraNear,g.shadowCameraFar);else{if(!(g instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}g.shadowCamera=new THREE.OrthographicCamera(g.shadowCameraLeft,g.shadowCameraRight,g.shadowCameraTop,g.shadowCameraBottom,g.shadowCameraNear,g.shadowCameraFar)}E.add(g.shadowCamera),!0===E.autoUpdate&&E.updateMatrixWorld()}if(g.shadowCameraVisible&&!g.cameraHelper&&(g.cameraHelper=new THREE.CameraHelper(g.shadowCamera),g.shadowCamera.add(g.cameraHelper)),g.isVirtual&&_.originalCamera==p){for(v=p,T=g.shadowCamera,y=g.pointsFrustum,R=g.pointsWorld,l.set(1/0,1/0,1/0),c.set(-(1/0),-(1/0),-(1/0)),b=0;8>b;b++)x=R[b],x.copy(y[b]),THREE.ShadowMapPlugin.__projector.unprojectVector(x,v),x.applyMatrix4(T.matrixWorldInverse),x.x<l.x&&(l.x=x.x),x.x>c.x&&(c.x=x.x),x.y<l.y&&(l.y=x.y),x.y>c.y&&(c.y=x.y),x.z<l.z&&(l.z=x.z),x.z>c.z&&(c.z=x.z);T.left=l.x,T.right=c.x,T.top=c.y,T.bottom=l.y,T.updateProjectionMatrix()}for(T=g.shadowMap,y=g.shadowMatrix,v=g.shadowCamera,v.position.setFromMatrixPosition(g.matrixWorld),u.setFromMatrixPosition(g.target.matrixWorld),v.lookAt(u),v.updateMatrixWorld(),v.matrixWorldInverse.getInverse(v.matrixWorld),g.cameraHelper&&(g.cameraHelper.visible=g.shadowCameraVisible),g.shadowCameraVisible&&g.cameraHelper.update(),y.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),y.multiply(v.projectionMatrix),y.multiply(v.matrixWorldInverse),h.multiplyMatrices(v.projectionMatrix,v.matrixWorldInverse),s.setFromMatrix(h),r.setRenderTarget(T),r.clear(),f.length=0,t(E,E,v),g=0,T=f.length;g<T;g++)R=f[g],y=R.object,R=R.buffer,b=y.material instanceof THREE.MeshFaceMaterial?y.material.materials[0]:y.material,x=void 0!==y.geometry.morphTargets&&0<y.geometry.morphTargets.length&&b.morphTargets,w=y instanceof THREE.SkinnedMesh&&b.skinning,x=y.customDepthMaterial?y.customDepthMaterial:w?x?a:o:x?n:i,r.setMaterialFaces(b),R instanceof THREE.BufferGeometry?r.renderBufferDirect(v,E.__lights,null,x,R,y):r.renderBuffer(v,E.__lights,null,x,R,y);for(b=E.__webglObjectsImmediate,g=0,T=b.length;g<T;g++)R=b[g],y=R.object,y.visible&&y.castShadow&&(y._modelViewMatrix.multiplyMatrices(v.matrixWorldInverse,y.matrixWorld),r.renderImmediateObject(v,E.__lights,null,i,y))}d=r.getClearColor(),m=r.getClearAlpha(),e.clearColor(d.r,d.g,d.b,m),e.enable(e.BLEND),r.shadowMapCullFace===THREE.CullFaceFront&&e.cullFace(e.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function t(t,e){return t.z!==e.z?e.z-t.z:e.id-t.id}var e,r,i,n,o,a,s,h,l,c,u,f,E,p,d,m,g,T,v,y,R,x,H,_,b,w=[];this.init=function(t){T=t.context,v=t,R=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),x=new Uint16Array([0,1,2,0,2,3]),H=T.createBuffer(),_=T.createBuffer(),T.bindBuffer(T.ARRAY_BUFFER,H),T.bufferData(T.ARRAY_BUFFER,R,T.STATIC_DRAW),T.bindBuffer(T.ELEMENT_ARRAY_BUFFER,_),T.bufferData(T.ELEMENT_ARRAY_BUFFER,x,T.STATIC_DRAW),t=T.createProgram();var w=T.createShader(T.VERTEX_SHADER),M=T.createShader(T.FRAGMENT_SHADER);T.shaderSource(w,["precision "+v.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n")),T.shaderSource(M,["precision "+v.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n")),T.compileShader(w),T.compileShader(M),T.attachShader(t,w),T.attachShader(t,M),T.linkProgram(t),b=t,m=T.getAttribLocation(b,"position"),g=T.getAttribLocation(b,"uv"),e=T.getUniformLocation(b,"uvOffset"),r=T.getUniformLocation(b,"uvScale"),i=T.getUniformLocation(b,"rotation"),n=T.getUniformLocation(b,"scale"),o=T.getUniformLocation(b,"color"),a=T.getUniformLocation(b,"map"),s=T.getUniformLocation(b,"opacity"),h=T.getUniformLocation(b,"modelViewMatrix"),l=T.getUniformLocation(b,"projectionMatrix"),c=T.getUniformLocation(b,"fogType"),u=T.getUniformLocation(b,"fogDensity"),f=T.getUniformLocation(b,"fogNear"),E=T.getUniformLocation(b,"fogFar"),p=T.getUniformLocation(b,"fogColor"),d=T.getUniformLocation(b,"alphaTest"),t=document.createElement("canvas"),t.width=8,t.height=8,w=t.getContext("2d"),w.fillStyle="white",w.fillRect(0,0,8,8),y=new THREE.Texture(t),y.needsUpdate=!0},this.render=function(R,x,M,S){if(w.length=0,R.traverseVisible(function(t){t instanceof THREE.Sprite&&w.push(t)}),0!==w.length){T.useProgram(b),T.enableVertexAttribArray(m),T.enableVertexAttribArray(g),T.disable(T.CULL_FACE),T.enable(T.BLEND),T.bindBuffer(T.ARRAY_BUFFER,H),T.vertexAttribPointer(m,2,T.FLOAT,!1,16,0),T.vertexAttribPointer(g,2,T.FLOAT,!1,16,8),T.bindBuffer(T.ELEMENT_ARRAY_BUFFER,_),T.uniformMatrix4fv(l,!1,x.projectionMatrix.elements),T.activeTexture(T.TEXTURE0),T.uniform1i(a,0),S=M=0;var C=R.fog;C?(T.uniform3f(p,C.color.r,C.color.g,C.color.b),C instanceof THREE.Fog?(T.uniform1f(f,C.near),T.uniform1f(E,C.far),T.uniform1i(c,1),S=M=1):C instanceof THREE.FogExp2&&(T.uniform1f(u,C.density),T.uniform1i(c,2),S=M=2)):(T.uniform1i(c,0),S=M=0);for(var C=0,A=w.length;C<A;C++){var L=w[C],P=L.material;L._modelViewMatrix.multiplyMatrices(x.matrixWorldInverse,L.matrixWorld),L.z=-L._modelViewMatrix.elements[14]}for(w.sort(t),x=[],C=0,A=w.length;C<A;C++)L=w[C],P=L.material,T.uniform1f(d,P.alphaTest),T.uniformMatrix4fv(h,!1,L._modelViewMatrix.elements),x[0]=L.scale.x,x[1]=L.scale.y,L=0,R.fog&&P.fog&&(L=S),M!==L&&(T.uniform1i(c,L),M=L),null!==P.map?(T.uniform2f(e,P.map.offset.x,P.map.offset.y),T.uniform2f(r,P.map.repeat.x,P.map.repeat.y)):(T.uniform2f(e,0,0),
T.uniform2f(r,1,1)),T.uniform1f(s,P.opacity),T.uniform3f(o,P.color.r,P.color.g,P.color.b),T.uniform1f(i,P.rotation),T.uniform2fv(n,x),v.setBlending(P.blending,P.blendEquation,P.blendSrc,P.blendDst),v.setDepthTest(P.depthTest),v.setDepthWrite(P.depthWrite),P.map&&P.map.image&&P.map.image.width?v.setTexture(P.map,0):v.setTexture(y,0),T.drawElements(T.TRIANGLES,6,T.UNSIGNED_SHORT,0);T.enable(T.CULL_FACE)}}},THREE.DepthPassPlugin=function(){function t(e,r,i){if(r.visible){var n=e.__webglObjects[r.id];if(n&&(!1===r.frustumCulled||!0===s.intersectsObject(r)))for(var o=0,a=n.length;o<a;o++){var h=n[o];r._modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,r.matrixWorld),l.push(h)}for(o=0,a=r.children.length;o<a;o++)t(e,r.children[o],i)}}this.enabled=!1,this.renderTarget=null;var e,r,i,n,o,a,s=new THREE.Frustum,h=new THREE.Matrix4,l=[];this.init=function(t){e=t.context,r=t,t=THREE.ShaderLib.depthRGBA;var s=THREE.UniformsUtils.clone(t.uniforms);i=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:s}),n=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:s,morphTargets:!0}),o=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:s,skinning:!0}),a=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:s,morphTargets:!0,skinning:!0}),i._shadowPass=!0,n._shadowPass=!0,o._shadowPass=!0,a._shadowPass=!0},this.render=function(t,e){this.enabled&&this.update(t,e)},this.update=function(c,u){var f,E,p,d,m;e.clearColor(1,1,1,1),e.disable(e.BLEND),r.setDepthTest(!0),!0===c.autoUpdate&&c.updateMatrixWorld(),u.matrixWorldInverse.getInverse(u.matrixWorld),h.multiplyMatrices(u.projectionMatrix,u.matrixWorldInverse),s.setFromMatrix(h),r.setRenderTarget(this.renderTarget),r.clear(),l.length=0,t(c,c,u);var g;for(f=0,E=l.length;f<E;f++)p=l[f],m=p.object,p=p.buffer,m instanceof THREE.PointCloud&&!m.customDepthMaterial||((g=m.material instanceof THREE.MeshFaceMaterial?m.material.materials[0]:m.material)&&r.setMaterialFaces(m.material),d=void 0!==m.geometry.morphTargets&&0<m.geometry.morphTargets.length&&g.morphTargets,g=m instanceof THREE.SkinnedMesh&&g.skinning,d=m.customDepthMaterial?m.customDepthMaterial:g?d?a:o:d?n:i,p instanceof THREE.BufferGeometry?r.renderBufferDirect(u,c.__lights,null,d,p,m):r.renderBuffer(u,c.__lights,null,d,p,m));for(d=c.__webglObjectsImmediate,f=0,E=d.length;f<E;f++)p=d[f],m=p.object,m.visible&&(m._modelViewMatrix.multiplyMatrices(u.matrixWorldInverse,m.matrixWorld),r.renderImmediateObject(u,c.__lights,null,i,m));f=r.getClearColor(),E=r.getClearAlpha(),e.clearColor(f.r,f.g,f.b,E),e.enable(e.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};